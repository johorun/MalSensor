<?xml version='1.0' encoding='utf-8'?>
<gexf xmlns="http://www.gexf.net/1.2draft" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd" version="1.2">
  <meta lastmodifieddate="2023-09-29">
    <creator>NetworkX 2.6.3</creator>
  </meta>
  <graph defaultedgetype="directed" mode="static" name="">
    <nodes>
      <node id="sub_401010" label="sub_401010" />
      <node id="" label="" />
      <node id="CWinApp::~CWinApp(void)" label="CWinApp::~CWinApp(void)" />
      <node id="sub_401070" label="sub_401070" />
      <node id="sub_4183B0" label="sub_4183B0" />
      <node id="ATL::CStringData::Release(void)" label="ATL::CStringData::Release(void)" />
      <node id="CArchiveException::~CArchiveException(void)" label="CArchiveException::~CArchiveException(void)" />
      <node id="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" label="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" />
      <node id="sub_414ECB" label="sub_414ECB" />
      <node id="AfxMessageBox(uint,uint,uint)" label="AfxMessageBox(uint,uint,uint)" />
      <node id="ATL::operator+(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;,char const *)" label="ATL::operator+(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;,char const *)" />
      <node id="sub_41577E" label="sub_41577E" />
      <node id="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" label="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" />
      <node id="CWinApp::Unregister(void)" label="CWinApp::Unregister(void)" />
      <node id="sub_4010B0" label="sub_4010B0" />
      <node id="sub_402310" label="sub_402310" />
      <node id="sub_4010E0" label="sub_4010E0" />
      <node id="sub_401180" label="sub_401180" />
      <node id="sub_401520" label="sub_401520" />
      <node id="sub_401560" label="sub_401560" />
      <node id="sub_401220" label="sub_401220" />
      <node id="sub_401C00" label="sub_401C00" />
      <node id="CWnd::ExecuteDlgInit(void *)" label="CWnd::ExecuteDlgInit(void *)" />
      <node id="sub_401270" label="sub_401270" />
      <node id="ATL::CSimpleStringT&lt;char,0&gt;::SetLength(int)" label="ATL::CSimpleStringT&lt;char,0&gt;::SetLength(int)" />
      <node id="sub_401460" label="sub_401460" />
      <node id="sub_401820" label="sub_401820" />
      <node id="sub_401CD0" label="sub_401CD0" />
      <node id="sub_401290" label="sub_401290" />
      <node id="sub_4012F0" label="sub_4012F0" />
      <node id="AfxLoadString(uint,char *,uint)" label="AfxLoadString(uint,char *,uint)" />
      <node id="sub_401330" label="sub_401330" />
      <node id="sub_402330" label="sub_402330" />
      <node id="ATL::CSimpleStringT&lt;char,0&gt;::ReleaseBuffer(int)" label="ATL::CSimpleStringT&lt;char,0&gt;::ReleaseBuffer(int)" />
      <node id="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *,int)" label="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *,int)" />
      <node id="sub_4035DB" label="sub_4035DB" />
      <node id="ATL::CSimpleStringT&lt;char,0&gt;::Concatenate(ATL::CSimpleStringT&lt;char,0&gt; &amp;,char const *,int,char const *,int)" label="ATL::CSimpleStringT&lt;char,0&gt;::Concatenate(ATL::CSimpleStringT&lt;char,0&gt; &amp;,char const *,int,char const *,int)" />
      <node id="sub_401890" label="sub_401890" />
      <node id="sub_4018E0" label="sub_4018E0" />
      <node id="sub_401730" label="sub_401730" />
      <node id="sub_4024E0" label="sub_4024E0" />
      <node id="sub_401800" label="sub_401800" />
      <node id="std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt; const &amp;)" label="std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt; const &amp;)" />
      <node id="sub_401BA0" label="sub_401BA0" />
      <node id="sub_401F80" label="sub_401F80" />
      <node id="sub_4027B0" label="sub_4027B0" />
      <node id="sub_4028C0" label="sub_4028C0" />
      <node id="sub_401960" label="sub_401960" />
      <node id="sub_40E102" label="sub_40E102" />
      <node id="sub_4019C0" label="sub_4019C0" />
      <node id="sub_401D70" label="sub_401D70" />
      <node id="sub_401A40" label="sub_401A40" />
      <node id="sub_401E60" label="sub_401E60" />
      <node id="sub_401B80" label="sub_401B80" />
      <node id="sub_403AEC" label="sub_403AEC" />
      <node id="AfxFormatStrings(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,char const *,char const * const *,int)" label="AfxFormatStrings(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,char const *,char const * const *,int)" />
      <node id="sub_401BD0" label="sub_401BD0" />
      <node id="std::_String_base::_Xlen(void)" label="std::_String_base::_Xlen(void)" />
      <node id="sub_401F50" label="sub_401F50" />
      <node id="sub_402030" label="sub_402030" />
      <node id="sub_402610" label="sub_402610" />
      <node id="sub_401FF0" label="sub_401FF0" />
      <node id="sub_402240" label="sub_402240" />
      <node id="sub_402280" label="sub_402280" />
      <node id="sub_402900" label="sub_402900" />
      <node id="sub_4029F0" label="sub_4029F0" />
      <node id="sub_402200" label="sub_402200" />
      <node id="sub_4026C0" label="sub_4026C0" />
      <node id="sub_4028F0" label="sub_4028F0" />
      <node id="std::_String_base::_Xran(void)" label="std::_String_base::_Xran(void)" />
      <node id="sub_4027D0" label="sub_4027D0" />
      <node id="sub_4028A0" label="sub_4028A0" />
      <node id="AfxGetMainWnd(void)" label="AfxGetMainWnd(void)" />
      <node id="sub_40EE42" label="sub_40EE42" />
      <node id="sub_40EE76" label="sub_40EE76" />
      <node id="CWinApp::WinHelpInternal(ulong,uint)" label="CWinApp::WinHelpInternal(ulong,uint)" />
      <node id="AfxInternalPreTranslateMessage(tagMSG *)" label="AfxInternalPreTranslateMessage(tagMSG *)" />
      <node id="CWinThread::ProcessMessageFilter(int,tagMSG *)" label="CWinThread::ProcessMessageFilter(int,tagMSG *)" />
      <node id="AfxHelpEnabled(void)" label="AfxHelpEnabled(void)" />
      <node id="CDialog::CreateIndirect(DLGTEMPLATE const *,CWnd *,void *,HINSTANCE__ *)" label="CDialog::CreateIndirect(DLGTEMPLATE const *,CWnd *,void *,HINSTANCE__ *)" />
      <node id="CWnd::CenterWindow(CWnd *)" label="CWnd::CenterWindow(CWnd *)" />
      <node id="CWnd::OnHelpInfo(tagHELPINFO *)" label="CWnd::OnHelpInfo(tagHELPINFO *)" />
      <node id="CWnd::OnDisplayChange(uint,long)" label="CWnd::OnDisplayChange(uint,long)" />
      <node id="CWinApp::OnHelp(void)" label="CWinApp::OnHelp(void)" />
      <node id="CWinApp::EnableModeless(int)" label="CWinApp::EnableModeless(int)" />
      <node id="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" label="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" />
      <node id="std::allocator&lt;char&gt;::allocate(uint)" label="std::allocator&lt;char&gt;::allocate(uint)" />
      <node id="CWnd::CreateObject(void)" label="CWnd::CreateObject(void)" />
      <node id="AfxThrowOleException(long)" label="AfxThrowOleException(long)" />
      <node id="sub_414F92" label="sub_414F92" />
      <node id="CDialogTemplate::GetFont(DLGTEMPLATE const *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,ushort &amp;)" label="CDialogTemplate::GetFont(DLGTEMPLATE const *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,ushort &amp;)" />
      <node id="sub_4154DB" label="sub_4154DB" />
      <node id="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *)" label="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *)" />
      <node id="unknown_libname_2" label="unknown_libname_2" />
      <node id="AfxInternalIsIdleMessage(tagMSG *)" label="AfxInternalIsIdleMessage(tagMSG *)" />
      <node id="unknown_libname_3" label="unknown_libname_3" />
      <node id="CCmdTarget::OnCmdMsg(uint,int,void *,AFX_CMDHANDLERINFO *)" label="CCmdTarget::OnCmdMsg(uint,int,void *,AFX_CMDHANDLERINFO *)" />
      <node id="sub_402B9E" label="sub_402B9E" />
      <node id="sub_40F8EE" label="sub_40F8EE" />
      <node id="CObject::operator delete(void *,void *)" label="CObject::operator delete(void *,void *)" />
      <node id="ConstructDestruct&lt;CWnd&gt;::Construct(CObject *)" label="ConstructDestruct&lt;CWnd&gt;::Construct(CObject *)" />
      <node id="_IsPlatformNT" label="_IsPlatformNT" />
      <node id="_InitMultipleMonitorStubs" label="_InitMultipleMonitorStubs" />
      <node id="xMonitorFromRect(x,x)" label="xMonitorFromRect(x,x)" />
      <node id="xMonitorFromWindow(x,x)" label="xMonitorFromWindow(x,x)" />
      <node id="xGetMonitorInfo(x,x)" label="xGetMonitorInfo(x,x)" />
      <node id="ATL::AtlIAccessibleInvokeHelper(IAccessible *,long,_GUID const &amp;,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)" label="ATL::AtlIAccessibleInvokeHelper(IAccessible *,long,_GUID const &amp;,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)" />
      <node id="sub_4106CF" label="sub_4106CF" />
      <node id="ATL::AtlIAccessibleGetIDsOfNamesHelper(_GUID const &amp;,wchar_t * *,uint,ulong,long *)" label="ATL::AtlIAccessibleGetIDsOfNamesHelper(_GUID const &amp;,wchar_t * *,uint,ulong,long *)" />
      <node id="CWnd::XAccessible::GetIDsOfNames(_GUID const &amp;,wchar_t * *,uint,ulong,long *)" label="CWnd::XAccessible::GetIDsOfNames(_GUID const &amp;,wchar_t * *,uint,ulong,long *)" />
      <node id="CMenu::GetSubMenu(int)" label="CMenu::GetSubMenu(int)" />
      <node id="_AfxFindPopupMenuFromID(CMenu *,uint)" label="_AfxFindPopupMenuFromID(CMenu *,uint)" />
      <node id="ATL::CAccessibleProxy::FinalRelease(void)" label="ATL::CAccessibleProxy::FinalRelease(void)" />
      <node id="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::~CMFCComObject&lt;ATL::CAccessibleProxy&gt;(void)" label="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::~CMFCComObject&lt;ATL::CAccessibleProxy&gt;(void)" />
      <node id="ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &amp;,void * *)" label="ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &amp;,void * *)" />
      <node id="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface(_GUID const &amp;,void * *)" label="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface(_GUID const &amp;,void * *)" />
      <node id="CWnd::GetOwner(void)" label="CWnd::GetOwner(void)" />
      <node id="AfxGetParentOwner(HWND__ *)" label="AfxGetParentOwner(HWND__ *)" />
      <node id="COleException::COleException(void)" label="COleException::COleException(void)" />
      <node id="sub_403632" label="sub_403632" />
      <node id="sub_403616" label="sub_403616" />
      <node id="sub_403639" label="sub_403639" />
      <node id="sub_403666" label="sub_403666" />
      <node id="sub_403640" label="sub_403640" />
      <node id="sub_4036A4" label="sub_4036A4" />
      <node id="sub_403647" label="sub_403647" />
      <node id="sub_4036E2" label="sub_4036E2" />
      <node id="CSimpleException::CSimpleException(int)" label="CSimpleException::CSimpleException(int)" />
      <node id="sub_403682" label="sub_403682" />
      <node id="sub_4036C0" label="sub_4036C0" />
      <node id="sub_4036FE" label="sub_4036FE" />
      <node id="sub_40376E" label="sub_40376E" />
      <node id="sub_403797" label="sub_403797" />
      <node id="sub_403720" label="sub_403720" />
      <node id="sub_40372B" label="sub_40372B" />
      <node id="sub_403747" label="sub_403747" />
      <node id="sub_403752" label="sub_403752" />
      <node id="sub_403790" label="sub_403790" />
      <node id="sub_4038E4" label="sub_4038E4" />
      <node id="sub_4037B9" label="sub_4037B9" />
      <node id="sub_403900" label="sub_403900" />
      <node id="ATL::CComCriticalSection::CComCriticalSection(void)" label="ATL::CComCriticalSection::CComCriticalSection(void)" />
      <node id="sub_40E299" label="sub_40E299" />
      <node id="ATL::CComCriticalSection::Init(void)" label="ATL::CComCriticalSection::Init(void)" />
      <node id="sub_40E2C9" label="sub_40E2C9" />
      <node id="CHandleMap::~CHandleMap(void)" label="CHandleMap::~CHandleMap(void)" />
      <node id="CHandleMap::`scalar deleting destructor'(uint)" label="CHandleMap::`scalar deleting destructor'(uint)" />
      <node id="CArchive::operator&lt;&lt;(ushort)" label="CArchive::operator&lt;&lt;(ushort)" />
      <node id="CArchive::WriteCount(ulong)" label="CArchive::WriteCount(ulong)" />
      <node id="unknown_libname_4" label="unknown_libname_4" />
      <node id="unknown_libname_5" label="unknown_libname_5" />
      <node id="CArchive::ReadCount(void)" label="CArchive::ReadCount(void)" />
      <node id="unknown_libname_6" label="unknown_libname_6" />
      <node id="sub_403B39" label="sub_403B39" />
      <node id="CFixedAllocNoSync::CFixedAllocNoSync(uint,uint)" label="CFixedAllocNoSync::CFixedAllocNoSync(uint,uint)" />
      <node id="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" label="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" />
      <node id="CFixedAllocNoSync::FreeAll(void)" label="CFixedAllocNoSync::FreeAll(void)" />
      <node id="CHandleMap::DeleteTemp(void)" label="CHandleMap::DeleteTemp(void)" />
      <node id="CFixedAllocNoSync::Alloc(void)" label="CFixedAllocNoSync::Alloc(void)" />
      <node id="CHandleMap::FromHandle(void *)" label="CHandleMap::FromHandle(void *)" />
      <node id="_JumpToContinuation(void *,EHRegistrationNode *)" label="_JumpToContinuation(void *,EHRegistrationNode *)" />
      <node id="CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)" label="CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)" />
      <node id="sub_403C1B" label="sub_403C1B" />
      <node id="___DestructExceptionObject" label="___DestructExceptionObject" />
      <node id="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" label="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" />
      <node id="_UnwindNestedFrames(EHRegistrationNode *,EHExceptionRecord *)" label="_UnwindNestedFrames(EHRegistrationNode *,EHExceptionRecord *)" />
      <node id="TranslatorGuardHandler(EHExceptionRecord *,TranslatorGuardRN *,void *,void *)" label="TranslatorGuardHandler(EHExceptionRecord *,TranslatorGuardRN *,void *,void *)" />
      <node id="___CxxFrameHandler" label="___CxxFrameHandler" />
      <node id="CThreadLocal&lt;AFX_MODULE_THREAD_STATE&gt;::CreateObject(void)" label="CThreadLocal&lt;AFX_MODULE_THREAD_STATE&gt;::CreateObject(void)" />
      <node id="CWinThread::~CWinThread(void)" label="CWinThread::~CWinThread(void)" />
      <node id="CThreadLocal&lt;_AFX_THREAD_STATE&gt;::CreateObject(void)" label="CThreadLocal&lt;_AFX_THREAD_STATE&gt;::CreateObject(void)" />
      <node id="sub_40F9C9" label="sub_40F9C9" />
      <node id="CDialog::OnPaint(void)" label="CDialog::OnPaint(void)" />
      <node id="CDialog::DoModal(void)" label="CDialog::DoModal(void)" />
      <node id="AfxRegisterClass(tagWNDCLASSA *)" label="AfxRegisterClass(tagWNDCLASSA *)" />
      <node id="CWnd::UpdateData(int)" label="CWnd::UpdateData(int)" />
      <node id="afxMapHWND(int)" label="afxMapHWND(int)" />
      <node id="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" label="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" />
      <node id="CWnd::~CWnd(void)" label="CWnd::~CWnd(void)" />
      <node id="CWnd::ReflectLastMsg(HWND__ *,long *)" label="CWnd::ReflectLastMsg(HWND__ *,long *)" />
      <node id="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CreateInstance(CMFCComObject&lt;ATL::CAccessibleProxy&gt; * *)" label="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CreateInstance(CMFCComObject&lt;ATL::CAccessibleProxy&gt; * *)" />
      <node id="_AfxActivationWndProc(HWND__ *,uint,uint,long)" label="_AfxActivationWndProc(HWND__ *,uint,uint,long)" />
      <node id="CWnd::OnWndMsg(uint,uint,long,long *)" label="CWnd::OnWndMsg(uint,uint,long,long *)" />
      <node id="CWnd::CreateAccessibleProxy(uint,long,long *)" label="CWnd::CreateAccessibleProxy(uint,long,long *)" />
      <node id="sub_41342B" label="sub_41342B" />
      <node id="AFX_MODULE_STATE::~AFX_MODULE_STATE(void)" label="AFX_MODULE_STATE::~AFX_MODULE_STATE(void)" />
      <node id="afxMapHMENU(int)" label="afxMapHMENU(int)" />
      <node id="afxMapHDC(int)" label="afxMapHDC(int)" />
      <node id="CPaintDC::CPaintDC(CWnd *)" label="CPaintDC::CPaintDC(CWnd *)" />
      <node id="CProcessLocalObject::GetData(CNoTrackObject * (*)(void))" label="CProcessLocalObject::GetData(CNoTrackObject * (*)(void))" />
      <node id="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" label="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" />
      <node id="sub_40E0B8" label="sub_40E0B8" />
      <node id="_CallSETranslator(EHExceptionRecord *,EHRegistrationNode *,void *,void *,_s_FuncInfo const *,int,EHRegistrationNode *)" label="_CallSETranslator(EHExceptionRecord *,EHRegistrationNode *,void *,void *,_s_FuncInfo const *,int,EHRegistrationNode *)" />
      <node id="FindHandlerForForeignException(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,int,int,EHRegistrationNode *)" label="FindHandlerForForeignException(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,int,int,EHRegistrationNode *)" />
      <node id="_GetRangeOfTrysToCheck(_s_FuncInfo const *,int,int,uint *,uint *)" label="_GetRangeOfTrysToCheck(_s_FuncInfo const *,int,int,uint *,uint *)" />
      <node id="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" label="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" />
      <node id="_CreateFrameInfo(FrameInfo *,void *)" label="_CreateFrameInfo(FrameInfo *,void *)" />
      <node id="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" label="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" />
      <node id="IsExceptionObjectToBeDestroyed(void *)" label="IsExceptionObjectToBeDestroyed(void *)" />
      <node id="_FindAndUnlinkFrame(FrameInfo *)" label="_FindAndUnlinkFrame(FrameInfo *)" />
      <node id="_CallCatchBlock2(EHRegistrationNode *,_s_FuncInfo const *,void *,int,ulong)" label="_CallCatchBlock2(EHRegistrationNode *,_s_FuncInfo const *,void *,int,ulong)" />
      <node id="__global_unwind2" label="__global_unwind2" />
      <node id="__except_handler3" label="__except_handler3" />
      <node id="__local_unwind2" label="__local_unwind2" />
      <node id="_seh_longjmp_unwind(x)" label="_seh_longjmp_unwind(x)" />
      <node id="__mtinitlocknum" label="__mtinitlocknum" />
      <node id="__lock_fhandle" label="__lock_fhandle" />
      <node id="__abnormal_termination" label="__abnormal_termination" />
      <node id="__NLG_Notify1" label="__NLG_Notify1" />
      <node id="_CallSettingFrame(x,x,x)" label="_CallSettingFrame(x,x,x)" />
      <node id="__NLG_Notify" label="__NLG_Notify" />
      <node id="__onexit_lk" label="__onexit_lk" />
      <node id="__onexit" label="__onexit" />
      <node id="_atexit" label="_atexit" />
      <node id="__cinit" label="__cinit" />
      <node id="`dynamic initializer for 'CWnd const CWnd::wndTop''(void)" label="`dynamic initializer for 'CWnd const CWnd::wndTop''(void)" />
      <node id="`dynamic initializer for 'CWnd const CWnd::wndTopMost''(void)" label="`dynamic initializer for 'CWnd const CWnd::wndTopMost''(void)" />
      <node id="`dynamic initializer for 'CWnd const CWnd::wndNoTopMost''(void)" label="`dynamic initializer for 'CWnd const CWnd::wndNoTopMost''(void)" />
      <node id="_memcpy" label="_memcpy" />
      <node id="___sbh_free_block" label="___sbh_free_block" />
      <node id="__shift" label="__shift" />
      <node id="__fptostr" label="__fptostr" />
      <node id="CDialogTemplate::SetFont(char const *,ushort)" label="CDialogTemplate::SetFont(char const *,ushort)" />
      <node id="CArchive::FillBuffer(uint)" label="CArchive::FillBuffer(uint)" />
      <node id="_CxxThrowException(x,x)" label="_CxxThrowException(x,x)" />
      <node id="unknown_libname_8" label="unknown_libname_8" />
      <node id="unknown_libname_9" label="unknown_libname_9" />
      <node id="unknown_libname_10" label="unknown_libname_10" />
      <node id="unknown_libname_34" label="unknown_libname_34" />
      <node id="unknown_libname_35" label="unknown_libname_35" />
      <node id="sub_404527" label="sub_404527" />
      <node id="__heap_alloc" label="__heap_alloc" />
      <node id="__nh_malloc" label="__nh_malloc" />
      <node id="_malloc" label="_malloc" />
      <node id="__strdup" label="__strdup" />
      <node id="_realloc" label="_realloc" />
      <node id="__setmbcp" label="__setmbcp" />
      <node id="__stbuf" label="__stbuf" />
      <node id="__output" label="__output" />
      <node id="__setenvp" label="__setenvp" />
      <node id="__setargv" label="__setargv" />
      <node id="___crtGetEnvironmentStringsA" label="___crtGetEnvironmentStringsA" />
      <node id="__ioinit" label="__ioinit" />
      <node id="__input" label="__input" />
      <node id="___crtLCMapStringA" label="___crtLCMapStringA" />
      <node id="__getbuf" label="__getbuf" />
      <node id="exception::exception(exception const &amp;)" label="exception::exception(exception const &amp;)" />
      <node id="operator new(uint)" label="operator new(uint)" />
      <node id="CAfxStringMgr::Allocate(int,int)" label="CAfxStringMgr::Allocate(int,int)" />
      <node id="AfxUnlockTempMaps(int)" label="AfxUnlockTempMaps(int)" />
      <node id="_free" label="_free" />
      <node id="type_info::~type_info(void)" label="type_info::~type_info(void)" />
      <node id="___updatetmbcinfo" label="___updatetmbcinfo" />
      <node id="_freefls(x)" label="_freefls(x)" />
      <node id="__mtterm" label="__mtterm" />
      <node id="___crtGetStringTypeA" label="___crtGetStringTypeA" />
      <node id="___freetlocinfo" label="___freetlocinfo" />
      <node id="__fcloseall" label="__fcloseall" />
      <node id="___convertcp" label="___convertcp" />
      <node id="__free_lc_time" label="__free_lc_time" />
      <node id="___free_lconv_num" label="___free_lconv_num" />
      <node id="___free_lconv_mon" label="___free_lconv_mon" />
      <node id="__fclose_lk" label="__fclose_lk" />
      <node id="__freebuf" label="__freebuf" />
      <node id="sub_4183CA" label="sub_4183CA" />
      <node id="sub_40E679" label="sub_40E679" />
      <node id="j__free" label="j__free" />
      <node id="AfxCriticalNewHandler(uint)" label="AfxCriticalNewHandler(uint)" />
      <node id="_AFX_THREAD_STATE::~_AFX_THREAD_STATE(void)" label="_AFX_THREAD_STATE::~_AFX_THREAD_STATE(void)" />
      <node id="__resetstkoflw" label="__resetstkoflw" />
      <node id="__alloca_probe" label="__alloca_probe" />
      <node id="start" label="start" />
      <node id="__NMSG_WRITE" label="__NMSG_WRITE" />
      <node id="___security_error_handler" label="___security_error_handler" />
      <node id="__amsg_exit" label="__amsg_exit" />
      <node id="__getptd" label="__getptd" />
      <node id="__lock" label="__lock" />
      <node id="__fptrap" label="__fptrap" />
      <node id="_fast_error_exit" label="_fast_error_exit" />
      <node id="__snprintf" label="__snprintf" />
      <node id="_AfxLoadLangDLL(char const *,ulong)" label="_AfxLoadLangDLL(char const *,ulong)" />
      <node id="_report_failure" label="_report_failure" />
      <node id="__security_check_cookie(x)" label="__security_check_cookie(x)" />
      <node id="_setSBUpLow" label="_setSBUpLow" />
      <node id="__setmbcp_lk" label="__setmbcp_lk" />
      <node id="__cftoe" label="__cftoe" />
      <node id="__cftof" label="__cftof" />
      <node id="__cftog" label="__cftog" />
      <node id="__write_lk" label="__write_lk" />
      <node id="___ansicp" label="___ansicp" />
      <node id="sub_40C827" label="sub_40C827" />
      <node id="sub_40C864" label="sub_40C864" />
      <node id="__fltout2" label="__fltout2" />
      <node id="___mtold12" label="___mtold12" />
      <node id="___strgtold12" label="___strgtold12" />
      <node id="_$I10_OUTPUT" label="_$I10_OUTPUT" />
      <node id="___ld12mul" label="___ld12mul" />
      <node id="___multtenpow12" label="___multtenpow12" />
      <node id="_AfxCbtFilterHook(int,uint,long)" label="_AfxCbtFilterHook(int,uint,long)" />
      <node id="CException::ReportError(uint,uint)" label="CException::ReportError(uint,uint)" />
      <node id="CDialogTemplate::SetSystemFont(ushort)" label="CDialogTemplate::SetSystemFont(ushort)" />
      <node id="_AfxCompareClassName(HWND__ *,char const *)" label="_AfxCompareClassName(HWND__ *,char const *)" />
      <node id="AfxSetWindowText(HWND__ *,char const *)" label="AfxSetWindowText(HWND__ *,char const *)" />
      <node id="CWinApp::DoMessageBox(char const *,uint,uint)" label="CWinApp::DoMessageBox(char const *,uint,uint)" />
      <node id="CWinApp::WriteProfileInt(char const *,char const *,int)" label="CWinApp::WriteProfileInt(char const *,char const *,int)" />
      <node id="AfxLoadLangResourceDLL(char const *)" label="AfxLoadLangResourceDLL(char const *)" />
      <node id="CWinApp::LoadAppLangResourceDLL(void)" label="CWinApp::LoadAppLangResourceDLL(void)" />
      <node id="_AfxLoadDotBitmap(void)" label="_AfxLoadDotBitmap(void)" />
      <node id="_AfxInitDBCS(void)" label="_AfxInitDBCS(void)" />
      <node id="CWinApp::SetCurrentHandles(void)" label="CWinApp::SetCurrentHandles(void)" />
      <node id="_sscanf" label="_sscanf" />
      <node id="__EH_prolog" label="__EH_prolog" />
      <node id="sub_40E1C9" label="sub_40E1C9" />
      <node id="sub_4134A5" label="sub_4134A5" />
      <node id="CPaintDC::~CPaintDC(void)" label="CPaintDC::~CPaintDC(void)" />
      <node id="afxMapHGDIOBJ(int)" label="afxMapHGDIOBJ(int)" />
      <node id="CWinApp::CWinApp(char const *)" label="CWinApp::CWinApp(char const *)" />
      <node id="CWinThread::CWinThread(void)" label="CWinThread::CWinThread(void)" />
      <node id="___crtExitProcess" label="___crtExitProcess" />
      <node id="_doexit" label="_doexit" />
      <node id="__lockexit" label="__lockexit" />
      <node id="__unlockexit" label="__unlockexit" />
      <node id="__initterm" label="__initterm" />
      <node id="_exit" label="_exit" />
      <node id="__exit" label="__exit" />
      <node id="__cexit" label="__cexit" />
      <node id="__c_exit" label="__c_exit" />
      <node id="_abort" label="_abort" />
      <node id="_raise" label="_raise" />
      <node id="type_info::`scalar deleting destructor'(uint)" label="type_info::`scalar deleting destructor'(uint)" />
      <node id="_memcpy_0" label="_memcpy_0" />
      <node id="CByteArray::SetSize(int,int)" label="CByteArray::SetSize(int,int)" />
      <node id="CDialogTemplate::SetTemplate(DLGTEMPLATE const *,uint)" label="CDialogTemplate::SetTemplate(DLGTEMPLATE const *,uint)" />
      <node id="CArchive::Read(void *,uint)" label="CArchive::Read(void *,uint)" />
      <node id="CArchive::Write(void const *,uint)" label="CArchive::Write(void const *,uint)" />
      <node id="_strlen" label="_strlen" />
      <node id="_memset" label="_memset" />
      <node id="_calloc" label="_calloc" />
      <node id="__cftof2" label="__cftof2" />
      <node id="unknown_libname_14" label="unknown_libname_14" />
      <node id="CDialog::CDialog(uint,CWnd *)" label="CDialog::CDialog(uint,CWnd *)" />
      <node id="AfxEndDeferRegisterClass(long)" label="AfxEndDeferRegisterClass(long)" />
      <node id="CWnd::OnNcDestroy(void)" label="CWnd::OnNcDestroy(void)" />
      <node id="CThreadSlotData::AllocSlot(void)" label="CThreadSlotData::AllocSlot(void)" />
      <node id="CThreadSlotData::SetValue(int,void *)" label="CThreadSlotData::SetValue(int,void *)" />
      <node id="_memcmp" label="_memcmp" />
      <node id="__mbscmp" label="__mbscmp" />
      <node id="__mbschr" label="__mbschr" />
      <node id="AfxWinTerm(void)" label="AfxWinTerm(void)" />
      <node id="CAfxStringMgr::Reallocate(ATL::CStringData *,int,int)" label="CAfxStringMgr::Reallocate(ATL::CStringData *,int,int)" />
      <node id="_wcslen" label="_wcslen" />
      <node id="CDialogTemplate::GetTemplateSize(DLGTEMPLATE const *)" label="CDialogTemplate::GetTemplateSize(DLGTEMPLATE const *)" />
      <node id="_CPtoLCID" label="_CPtoLCID" />
      <node id="_setSBCS" label="_setSBCS" />
      <node id="___initmbctable" label="___initmbctable" />
      <node id="AfxInitialize(int,ulong)" label="AfxInitialize(int,ulong)" />
      <node id="__wincmdln" label="__wincmdln" />
      <node id="__expand" label="__expand" />
      <node id="__msize" label="__msize" />
      <node id="_atol" label="_atol" />
      <node id="__SEH_prolog" label="__SEH_prolog" />
      <node id="___FrameUnwindToState" label="___FrameUnwindToState" />
      <node id="terminate(void)" label="terminate(void)" />
      <node id="sub_406BF6" label="sub_406BF6" />
      <node id="sub_409041" label="sub_409041" />
      <node id="sub_409085" label="sub_409085" />
      <node id="___updatetlocinfo" label="___updatetlocinfo" />
      <node id="_flsall" label="_flsall" />
      <node id="___crtInitCritSecAndSpinCount" label="___crtInitCritSecAndSpinCount" />
      <node id="__lseek" label="__lseek" />
      <node id="__write" label="__write" />
      <node id="_fclose" label="_fclose" />
      <node id="__commit" label="__commit" />
      <node id="__read" label="__read" />
      <node id="__close" label="__close" />
      <node id="__SEH_epilog" label="__SEH_epilog" />
      <node id="nullsub_2" label="nullsub_2" />
      <node id="__cfltcvt_init" label="__cfltcvt_init" />
      <node id="__fpmath" label="__fpmath" />
      <node id="__allmul" label="__allmul" />
      <node id="__errno" label="__errno" />
      <node id="___wctomb_mt" label="___wctomb_mt" />
      <node id="__lseek_lk" label="__lseek_lk" />
      <node id="___mbtowc_mt" label="___mbtowc_mt" />
      <node id="__free_osfhnd" label="__free_osfhnd" />
      <node id="__get_osfhandle" label="__get_osfhandle" />
      <node id="__lseeki64_lk" label="__lseeki64_lk" />
      <node id="__read_lk" label="__read_lk" />
      <node id="___doserrno" label="___doserrno" />
      <node id="__dosmaperr" label="__dosmaperr" />
      <node id="__close_lk" label="__close_lk" />
      <node id="__mtinit" label="__mtinit" />
      <node id="TypeMatch(_s_HandlerType const *,_s_CatchableType const *,_s_ThrowInfo const *)" label="TypeMatch(_s_HandlerType const *,_s_CatchableType const *,_s_ThrowInfo const *)" />
      <node id="FrameUnwindFilter(_EXCEPTION_POINTERS *)" label="FrameUnwindFilter(_EXCEPTION_POINTERS *)" />
      <node id="___InternalCxxFrameHandler" label="___InternalCxxFrameHandler" />
      <node id="AdjustPointer(void *,PMD const &amp;)" label="AdjustPointer(void *,PMD const &amp;)" />
      <node id="CatchGuardHandler(EHExceptionRecord *,CatchGuardRN *,void *,void *)" label="CatchGuardHandler(EHExceptionRecord *,CatchGuardRN *,void *,void *)" />
      <node id="__XcptFilter" label="__XcptFilter" />
      <node id="___updatetlocinfo_lk" label="___updatetlocinfo_lk" />
      <node id="_isdigit" label="_isdigit" />
      <node id="_isxdigit" label="_isxdigit" />
      <node id="_isspace" label="_isspace" />
      <node id="_wctomb" label="_wctomb" />
      <node id="_mbtowc" label="_mbtowc" />
      <node id="_tolower" label="_tolower" />
      <node id="__CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)" label="__CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)" />
      <node id="__lock_file" label="__lock_file" />
      <node id="__lock_file2" label="__lock_file2" />
      <node id="__unlock_file" label="__unlock_file" />
      <node id="__unlock_file2" label="__unlock_file2" />
      <node id="__ftbuf" label="__ftbuf" />
      <node id="_write_char" label="_write_char" />
      <node id="_write_multi_char" label="_write_multi_char" />
      <node id="_write_string" label="_write_string" />
      <node id="__mtinitlocks" label="__mtinitlocks" />
      <node id="__unlock" label="__unlock" />
      <node id="___heap_select" label="___heap_select" />
      <node id="__heap_init" label="__heap_init" />
      <node id="___sbh_heap_init" label="___sbh_heap_init" />
      <node id="___sbh_find_block" label="___sbh_find_block" />
      <node id="___sbh_alloc_new_region" label="___sbh_alloc_new_region" />
      <node id="___sbh_alloc_block" label="___sbh_alloc_block" />
      <node id="___sbh_alloc_new_group" label="___sbh_alloc_new_group" />
      <node id="___sbh_resize_block" label="___sbh_resize_block" />
      <node id="__callnewh" label="__callnewh" />
      <node id="__ValidateEH3RN" label="__ValidateEH3RN" />
      <node id="__FF_MSGBANNER" label="__FF_MSGBANNER" />
      <node id="_parse_cmdline" label="_parse_cmdline" />
      <node id="__flsbuf" label="__flsbuf" />
      <node id="__inc" label="__inc" />
      <node id="_strcmp" label="_strcmp" />
      <node id="_strcpy" label="_strcpy" />
      <node id="__cftoe2" label="__cftoe2" />
      <node id="_strcat" label="_strcat" />
      <node id="_strchr" label="_strchr" />
      <node id="___tolower_mt" label="___tolower_mt" />
      <node id="___isctype_mt" label="___isctype_mt" />
      <node id="__cfltcvt" label="__cfltcvt" />
      <node id="__setdefaultprecision" label="__setdefaultprecision" />
      <node id="__ms_p5_test_fdiv" label="__ms_p5_test_fdiv" />
      <node id="__ms_p5_mp_test_fdiv" label="__ms_p5_mp_test_fdiv" />
      <node id="__forcdecpt" label="__forcdecpt" />
      <node id="_ValidateRead(void const *,uint)" label="_ValidateRead(void const *,uint)" />
      <node id="_ValidateWrite(void *,uint)" label="_ValidateWrite(void *,uint)" />
      <node id="_ValidateExecute(int (*)(void))" label="_ValidateExecute(int (*)(void))" />
      <node id="__flush" label="__flush" />
      <node id="__fflush_lk" label="__fflush_lk" />
      <node id="sub_40B4A3" label="sub_40B4A3" />
      <node id="__isatty" label="__isatty" />
      <node id="__aulldvrm" label="__aulldvrm" />
      <node id="___crtMessageBoxA" label="___crtMessageBoxA" />
      <node id="_strncpy" label="_strncpy" />
      <node id="_x_ismbbtype" label="_x_ismbbtype" />
      <node id="__ismbblead" label="__ismbblead" />
      <node id="__filbuf" label="__filbuf" />
      <node id="_ungetc" label="_ungetc" />
      <node id="__ZeroTail" label="__ZeroTail" />
      <node id="__RoundMan" label="__RoundMan" />
      <node id="__IncMan" label="__IncMan" />
      <node id="__ld12cvt" label="__ld12cvt" />
      <node id="__CopyMan" label="__CopyMan" />
      <node id="__IsZeroMan" label="__IsZeroMan" />
      <node id="__ShrMan" label="__ShrMan" />
      <node id="sub_40C7FB" label="sub_40C7FB" />
      <node id="sub_40C811" label="sub_40C811" />
      <node id="__fassign" label="__fassign" />
      <node id="___dtold" label="___dtold" />
      <node id="__abstract_cw" label="__abstract_cw" />
      <node id="__control87" label="__control87" />
      <node id="__hw_cw" label="__hw_cw" />
      <node id="__controlfp" label="__controlfp" />
      <node id="_siglookup" label="_siglookup" />
      <node id="__unlock_fhandle" label="__unlock_fhandle" />
      <node id="___addl" label="___addl" />
      <node id="___add_12" label="___add_12" />
      <node id="___shl_12" label="___shl_12" />
      <node id="___shr_12" label="___shr_12" />
      <node id="RtlUnwind" label="RtlUnwind" />
      <node id="ClosePrinter" label="ClosePrinter" />
      <node id="CWinApp::DevModeChange(char *)" label="CWinApp::DevModeChange(char *)" />
      <node id="DocumentPropertiesA" label="DocumentPropertiesA" />
      <node id="OpenPrinterA" label="OpenPrinterA" />
      <node id="sub_40E11F" label="sub_40E11F" />
      <node id="sub_40E157" label="sub_40E157" />
      <node id="sub_40E17E" label="sub_40E17E" />
      <node id="sub_40E13B" label="sub_40E13B" />
      <node id="sub_40E162" label="sub_40E162" />
      <node id="sub_40E20C" label="sub_40E20C" />
      <node id="sub_40E264" label="sub_40E264" />
      <node id="CreateStdAccessibleObject" label="CreateStdAccessibleObject" />
      <node id="CWnd::EnsureStdObj(void)" label="CWnd::EnsureStdObj(void)" />
      <node id="LresultFromObject" label="LresultFromObject" />
      <node id="sub_40E3A5" label="sub_40E3A5" />
      <node id="WinMain(x,x,x,x)" label="WinMain(x,x,x,x)" />
      <node id="sub_40E61E" label="sub_40E61E" />
      <node id="sub_40E69C" label="sub_40E69C" />
      <node id="CSimpleException::InitString(void)" label="CSimpleException::InitString(void)" />
      <node id="CSimpleException::GetErrorMessage(char *,uint,uint *)" label="CSimpleException::GetErrorMessage(char *,uint,uint *)" />
      <node id="j_unknown_libname_8" label="j_unknown_libname_8" />
      <node id="AfxHookWindowCreate(CWnd *)" label="AfxHookWindowCreate(CWnd *)" />
      <node id="unknown_libname_49" label="unknown_libname_49" />
      <node id="CThreadSlotData::CThreadSlotData(void)" label="CThreadSlotData::CThreadSlotData(void)" />
      <node id="unknown_libname_40" label="unknown_libname_40" />
      <node id="unknown_libname_12" label="unknown_libname_12" />
      <node id="unknown_libname_13" label="unknown_libname_13" />
      <node id="unknown_libname_11" label="unknown_libname_11" />
      <node id="sub_40E7C1" label="sub_40E7C1" />
      <node id="AFX_MODULE_THREAD_STATE::~AFX_MODULE_THREAD_STATE(void)" label="AFX_MODULE_THREAD_STATE::~AFX_MODULE_THREAD_STATE(void)" />
      <node id="CMapPtrToPtr::NewAssoc(void)" label="CMapPtrToPtr::NewAssoc(void)" />
      <node id="CPlex::FreeDataChain(void)" label="CPlex::FreeDataChain(void)" />
      <node id="sub_40EA3D" label="sub_40EA3D" />
      <node id="CByteArray::Serialize(CArchive &amp;)" label="CByteArray::Serialize(CArchive &amp;)" />
      <node id="sub_40E948" label="sub_40E948" />
      <node id="sub_40E9D5" label="sub_40E9D5" />
      <node id="sub_40EC31" label="sub_40EC31" />
      <node id="sub_40EA68" label="sub_40EA68" />
      <node id="sub_40EBDB" label="sub_40EBDB" />
      <node id="sub_40EAF0" label="sub_40EAF0" />
      <node id="unknown_libname_15" label="unknown_libname_15" />
      <node id="CMapPtrToPtr::GetValueAt(void *)" label="CMapPtrToPtr::GetValueAt(void *)" />
      <node id="CWnd::FromHandlePermanent(HWND__ *)" label="CWnd::FromHandlePermanent(HWND__ *)" />
      <node id="CWnd::DestroyWindow(void)" label="CWnd::DestroyWindow(void)" />
      <node id="CWnd::AttachControlSite(CHandleMap *)" label="CWnd::AttachControlSite(CHandleMap *)" />
      <node id="CMenu::FromHandlePermanent(HMENU__ *)" label="CMenu::FromHandlePermanent(HMENU__ *)" />
      <node id="CWnd::Detach(void)" label="CWnd::Detach(void)" />
      <node id="sub_413970" label="sub_413970" />
      <node id="CDC::Detach(void)" label="CDC::Detach(void)" />
      <node id="sub_41488E" label="sub_41488E" />
      <node id="CMapPtrToPtr::GetNextAssoc(__POSITION * &amp;,void * &amp;,void * &amp;)" label="CMapPtrToPtr::GetNextAssoc(__POSITION * &amp;,void * &amp;,void * &amp;)" />
      <node id="sub_40EBAD" label="sub_40EBAD" />
      <node id="sub_40EC86" label="sub_40EC86" />
      <node id="CWnd::Attach(HWND__ *)" label="CWnd::Attach(HWND__ *)" />
      <node id="CDC::Attach(HDC__ *)" label="CDC::Attach(HDC__ *)" />
      <node id="AfxGetThread(void)" label="AfxGetThread(void)" />
      <node id="unknown_libname_17" label="unknown_libname_17" />
      <node id="_WinMain@16_0" label="_WinMain@16_0" />
      <node id="AfxPostQuitMessage(int)" label="AfxPostQuitMessage(int)" />
      <node id="AfxGetCurrentMessage(void)" label="AfxGetCurrentMessage(void)" />
      <node id="CWnd::RunModalLoop(ulong)" label="CWnd::RunModalLoop(ulong)" />
      <node id="CWinApp::ExitInstance(void)" label="CWinApp::ExitInstance(void)" />
      <node id="unknown_libname_16" label="unknown_libname_16" />
      <node id="AfxProcessWndProcException(CException *,tagMSG const *)" label="AfxProcessWndProcException(CException *,tagMSG const *)" />
      <node id="j_unknown_libname_16" label="j_unknown_libname_16" />
      <node id="CWinThread::Run(void)" label="CWinThread::Run(void)" />
      <node id="CWinApp::Run(void)" label="CWinApp::Run(void)" />
      <node id="CWinThread::DispatchThreadMessageEx(tagMSG *)" label="CWinThread::DispatchThreadMessageEx(tagMSG *)" />
      <node id="CWinApp::ProcessWndProcException(CException *,tagMSG const *)" label="CWinApp::ProcessWndProcException(CException *,tagMSG const *)" />
      <node id="IsEnterKey(tagMSG *)" label="IsEnterKey(tagMSG *)" />
      <node id="AfxPreTranslateMessage(tagMSG *)" label="AfxPreTranslateMessage(tagMSG *)" />
      <node id="AfxInternalPumpMessage(void)" label="AfxInternalPumpMessage(void)" />
      <node id="AfxIsIdleMessage(tagMSG *)" label="AfxIsIdleMessage(tagMSG *)" />
      <node id="AfxPumpMessage(void)" label="AfxPumpMessage(void)" />
      <node id="AfxInitThread(void)" label="AfxInitThread(void)" />
      <node id="AfxWinInit(HINSTANCE__ *,HINSTANCE__ *,char *,int)" label="AfxWinInit(HINSTANCE__ *,HINSTANCE__ *,char *,int)" />
      <node id="CWinThread::OnIdle(long)" label="CWinThread::OnIdle(long)" />
      <node id="CWinApp::OnIdle(long)" label="CWinApp::OnIdle(long)" />
      <node id="CCmdTarget::CCmdTarget(void)" label="CCmdTarget::CCmdTarget(void)" />
      <node id="CWnd::CWnd(HWND__ *)" label="CWnd::CWnd(HWND__ *)" />
      <node id="CWnd::CWnd(void)" label="CWnd::CWnd(void)" />
      <node id="CCmdTarget::~CCmdTarget(void)" label="CCmdTarget::~CCmdTarget(void)" />
      <node id="_AfxDispatchCmdMsg(CCmdTarget *,uint,int,void (CCmdTarget::*)(void),void *,uint,AFX_CMDHANDLERINFO *)" label="_AfxDispatchCmdMsg(CCmdTarget *,uint,int,void (CCmdTarget::*)(void),void *,uint,AFX_CMDHANDLERINFO *)" />
      <node id="CWnd::ReflectChildNotify(uint,uint,long,long *)" label="CWnd::ReflectChildNotify(uint,uint,long,long *)" />
      <node id="CCmdUI::CCmdUI(void)" label="CCmdUI::CCmdUI(void)" />
      <node id="sub_41063D" label="sub_41063D" />
      <node id="CCmdTarget::BeginWaitCursor(void)" label="CCmdTarget::BeginWaitCursor(void)" />
      <node id="CCmdTarget::EndWaitCursor(void)" label="CCmdTarget::EndWaitCursor(void)" />
      <node id="AfxSetNewHandler(int (*)(uint))" label="AfxSetNewHandler(int (*)(uint))" />
      <node id="CDC::CreateObject(void)" label="CDC::CreateObject(void)" />
      <node id="sub_40FC20" label="sub_40FC20" />
      <node id="sub_4121C8" label="sub_4121C8" />
      <node id="sub_4148CE" label="sub_4148CE" />
      <node id="sub_41496C" label="sub_41496C" />
      <node id="sub_415ED9" label="sub_415ED9" />
      <node id="sub_416301" label="sub_416301" />
      <node id="sub_416A4C" label="sub_416A4C" />
      <node id="CDialog::EndDialog(int)" label="CDialog::EndDialog(int)" />
      <node id="CDialog::OnOK(void)" label="CDialog::OnOK(void)" />
      <node id="sub_40FAE8" label="sub_40FAE8" />
      <node id="CDialog::HandleInitDialog(uint,long)" label="CDialog::HandleInitDialog(uint,long)" />
      <node id="CDialog::OnInitDialog(void)" label="CDialog::OnInitDialog(void)" />
      <node id="CDialog::PreModal(void)" label="CDialog::PreModal(void)" />
      <node id="CDialog::PostModal(void)" label="CDialog::PostModal(void)" />
      <node id="CDialog::CreateIndirect(void *,CWnd *,HINSTANCE__ *)" label="CDialog::CreateIndirect(void *,CWnd *,HINSTANCE__ *)" />
      <node id="sub_4102C7" label="sub_4102C7" />
      <node id="sub_4102DD" label="sub_4102DD" />
      <node id="sub_410337" label="sub_410337" />
      <node id="CProcessLocalObject::~CProcessLocalObject(void)" label="CProcessLocalObject::~CProcessLocalObject(void)" />
      <node id="sub_4135EC" label="sub_4135EC" />
      <node id="CWnd::PreTranslateMessage(tagMSG *)" label="CWnd::PreTranslateMessage(tagMSG *)" />
      <node id="CDialog::PreTranslateMessage(tagMSG *)" label="CDialog::PreTranslateMessage(tagMSG *)" />
      <node id="unknown_libname_30" label="unknown_libname_30" />
      <node id="sub_410583" label="sub_410583" />
      <node id="sub_410598" label="sub_410598" />
      <node id="unknown_libname_18" label="unknown_libname_18" />
      <node id="CWnd::OnCommand(uint,long)" label="CWnd::OnCommand(uint,long)" />
      <node id="CWnd::PreTranslateInput(tagMSG *)" label="CWnd::PreTranslateInput(tagMSG *)" />
      <node id="_AfxInitCommonControls(tagINITCOMMONCONTROLSEX *,long)" label="_AfxInitCommonControls(tagINITCOMMONCONTROLSEX *,long)" />
      <node id="CFrameWnd::IsTracking(void)" label="CFrameWnd::IsTracking(void)" />
      <node id="_AfxPreInitDialog(CWnd *,tagRECT *,ulong *)" label="_AfxPreInitDialog(CWnd *,tagRECT *,ulong *)" />
      <node id="CWnd::CancelToolTips(int)" label="CWnd::CancelToolTips(int)" />
      <node id="CWnd::OnActivateTopLevel(uint,long)" label="CWnd::OnActivateTopLevel(uint,long)" />
      <node id="CWnd::OnMeasureItem(int,tagMEASUREITEMSTRUCT *)" label="CWnd::OnMeasureItem(int,tagMEASUREITEMSTRUCT *)" />
      <node id="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" label="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" />
      <node id="sub_4118BA" label="sub_4118BA" />
      <node id="CWnd::GetCurrentMessage(void)" label="CWnd::GetCurrentMessage(void)" />
      <node id="CWnd::Default(void)" label="CWnd::Default(void)" />
      <node id="CDialog::HandleSetFont(uint,long)" label="CDialog::HandleSetFont(uint,long)" />
      <node id="CWnd::OnDestroy(void)" label="CWnd::OnDestroy(void)" />
      <node id="CWnd::OnSetFocus(CWnd *)" label="CWnd::OnSetFocus(CWnd *)" />
      <node id="CWnd::OnGetObject(uint,long)" label="CWnd::OnGetObject(uint,long)" />
      <node id="sub_411C6D" label="sub_411C6D" />
      <node id="CWnd::OnEnterIdle(uint,CWnd *)" label="CWnd::OnEnterIdle(uint,CWnd *)" />
      <node id="CWnd::OnCtlColor(CDC *,CWnd *,uint)" label="CWnd::OnCtlColor(CDC *,CWnd *,uint)" />
      <node id="sub_411F22" label="sub_411F22" />
      <node id="CWnd::OnParentNotify(uint,long)" label="CWnd::OnParentNotify(uint,long)" />
      <node id="CWnd::OnDragList(uint,long)" label="CWnd::OnDragList(uint,long)" />
      <node id="CWnd::OnDrawItem(int,tagDRAWITEMSTRUCT *)" label="CWnd::OnDrawItem(int,tagDRAWITEMSTRUCT *)" />
      <node id="CWnd::OnCompareItem(int,tagCOMPAREITEMSTRUCT *)" label="CWnd::OnCompareItem(int,tagCOMPAREITEMSTRUCT *)" />
      <node id="CWnd::OnDeleteItem(int,tagDELETEITEMSTRUCT *)" label="CWnd::OnDeleteItem(int,tagDELETEITEMSTRUCT *)" />
      <node id="CWnd::OnSysColorChange(void)" label="CWnd::OnSysColorChange(void)" />
      <node id="CWnd::FromHandle(HWND__ *)" label="CWnd::FromHandle(HWND__ *)" />
      <node id="CWinThread::GetMainWnd(void)" label="CWinThread::GetMainWnd(void)" />
      <node id="CCmdUI::Enable(int)" label="CCmdUI::Enable(int)" />
      <node id="CWnd::GetDescendantWindow(HWND__ *,int,int)" label="CWnd::GetDescendantWindow(HWND__ *,int,int)" />
      <node id="CWnd::GetParentFrame(void)" label="CWnd::GetParentFrame(void)" />
      <node id="CWnd::GetTopLevelParent(void)" label="CWnd::GetTopLevelParent(void)" />
      <node id="_AfxHandleSetCursor(CWnd *,uint,uint)" label="_AfxHandleSetCursor(CWnd *,uint,uint)" />
      <node id="CWnd::GetDlgItem(int)" label="CWnd::GetDlgItem(int)" />
      <node id="CWnd::SetFocus(void)" label="CWnd::SetFocus(void)" />
      <node id="AfxDlgProc(HWND__ *,uint,uint,long)" label="AfxDlgProc(HWND__ *,uint,uint,long)" />
      <node id="CWnd::WalkPreTranslateTree(HWND__ *,tagMSG *)" label="CWnd::WalkPreTranslateTree(HWND__ *,tagMSG *)" />
      <node id="AfxWndProc(HWND__ *,uint,uint,long)" label="AfxWndProc(HWND__ *,uint,uint,long)" />
      <node id="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" label="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" />
      <node id="AfxUnhookWindowCreate(void)" label="AfxUnhookWindowCreate(void)" />
      <node id="CWnd::CreateEx(ulong,char const *,char const *,ulong,int,int,int,int,HWND__ *,HMENU__ *,void *)" label="CWnd::CreateEx(ulong,char const *,char const *,ulong,int,int,int,int,HWND__ *,HMENU__ *,void *)" />
      <node id="CWnd::SendChildNotifyLastMsg(long *)" label="CWnd::SendChildNotifyLastMsg(long *)" />
      <node id="sub_4135F6" label="sub_4135F6" />
      <node id="sub_413600" label="sub_413600" />
      <node id="sub_41360A" label="sub_41360A" />
      <node id="sub_413614" label="sub_413614" />
      <node id="CWnd::GetTopLevelFrame(void)" label="CWnd::GetTopLevelFrame(void)" />
      <node id="CWnd::PrepareForHelp(void)" label="CWnd::PrepareForHelp(void)" />
      <node id="CWnd::OnNotify(uint,long,long *)" label="CWnd::OnNotify(uint,long,long *)" />
      <node id="unknown_libname_31" label="unknown_libname_31" />
      <node id="CWnd::OnHelp(void)" label="CWnd::OnHelp(void)" />
      <node id="_AfxHandleActivate(CWnd *,uint,CWnd *)" label="_AfxHandleActivate(CWnd *,uint,CWnd *)" />
      <node id="CWnd::OnSettingChange(uint,char const *)" label="CWnd::OnSettingChange(uint,char const *)" />
      <node id="CWnd::ExecuteDlgInit(char const *)" label="CWnd::ExecuteDlgInit(char const *)" />
      <node id="CWnd::OnChildNotify(uint,uint,long,long *)" label="CWnd::OnChildNotify(uint,uint,long,long *)" />
      <node id="CWnd::PaintWindowlessControls(CDC *)" label="CWnd::PaintWindowlessControls(CDC *)" />
      <node id="CWnd::GetOleControlSite(uint)" label="CWnd::GetOleControlSite(uint)" />
      <node id="CWnd::GetDlgItem(int,HWND__ * *)" label="CWnd::GetDlgItem(int,HWND__ * *)" />
      <node id="CWnd::IsDialogMessageA(tagMSG *)" label="CWnd::IsDialogMessageA(tagMSG *)" />
      <node id="CWnd::GetStyle(void)" label="CWnd::GetStyle(void)" />
      <node id="CWnd::CalcWindowRect(tagRECT *,uint)" label="CWnd::CalcWindowRect(tagRECT *,uint)" />
      <node id="CWnd::GetExStyle(void)" label="CWnd::GetExStyle(void)" />
      <node id="CWnd::MoveWindow(int,int,int,int,int)" label="CWnd::MoveWindow(int,int,int,int,int)" />
      <node id="CWnd::ShowWindow(int)" label="CWnd::ShowWindow(int)" />
      <node id="CWnd::IsWindowEnabled(void)" label="CWnd::IsWindowEnabled(void)" />
      <node id="AfxOleOnReleaseAllObjects(void)" label="AfxOleOnReleaseAllObjects(void)" />
      <node id="CWnd::EnableWindow(int)" label="CWnd::EnableWindow(int)" />
      <node id="CWnd::SetWindowPos(CWnd const *,int,int,int,int,uint)" label="CWnd::SetWindowPos(CWnd const *,int,int,int,int,uint)" />
      <node id="CException::Delete(void)" label="CException::Delete(void)" />
      <node id="CException::CException(void)" label="CException::CException(void)" />
      <node id="CException::CException(int)" label="CException::CException(int)" />
      <node id="CMenu::FromHandle(HMENU__ *)" label="CMenu::FromHandle(HMENU__ *)" />
      <node id="AfxFindStringResourceHandle(uint)" label="AfxFindStringResourceHandle(uint)" />
      <node id="sub_413A06" label="sub_413A06" />
      <node id="CAfxStringMgr::CAfxStringMgr(void)" label="CAfxStringMgr::CAfxStringMgr(void)" />
      <node id="CRuntimeClass::IsDerivedFrom(CRuntimeClass const *)" label="CRuntimeClass::IsDerivedFrom(CRuntimeClass const *)" />
      <node id="CObject::IsKindOf(CRuntimeClass const *)" label="CObject::IsKindOf(CRuntimeClass const *)" />
      <node id="AfxDynamicDownCast(CRuntimeClass *,CObject *)" label="AfxDynamicDownCast(CRuntimeClass *,CObject *)" />
      <node id="AfxClassInit(CRuntimeClass *)" label="AfxClassInit(CRuntimeClass *)" />
      <node id="AUX_DATA::UpdateSysColors(void)" label="AUX_DATA::UpdateSysColors(void)" />
      <node id="AUX_DATA::AUX_DATA(void)" label="AUX_DATA::AUX_DATA(void)" />
      <node id="AUX_DATA::UpdateSysMetrics(void)" label="AUX_DATA::UpdateSysMetrics(void)" />
      <node id="AfxLockTempMaps(void)" label="AfxLockTempMaps(void)" />
      <node id="CDC::FromHandle(HDC__ *)" label="CDC::FromHandle(HDC__ *)" />
      <node id="CGdiObject::FromHandle(void *)" label="CGdiObject::FromHandle(void *)" />
      <node id="HasFont(DLGTEMPLATE const *)" label="HasFont(DLGTEMPLATE const *)" />
      <node id="CDialogTemplate::CDialogTemplate(DLGTEMPLATE const *)" label="CDialogTemplate::CDialogTemplate(DLGTEMPLATE const *)" />
      <node id="Concurrency::details::UMSFreeVirtualProcessorRoot::InitialThreadParam::~InitialThreadParam(void)" label="Concurrency::details::UMSFreeVirtualProcessorRoot::InitialThreadParam::~InitialThreadParam(void)" />
      <node id="ATL::CComPtrBase&lt;ICustomDestinationList&gt;::Detach(void)" label="ATL::CComPtrBase&lt;ICustomDestinationList&gt;::Detach(void)" />
      <node id="CDialogTemplate::GetFontSizeField(DLGTEMPLATE const *)" label="CDialogTemplate::GetFontSizeField(DLGTEMPLATE const *)" />
      <node id="CDC::CDC(void)" label="CDC::CDC(void)" />
      <node id="CDC::~CDC(void)" label="CDC::~CDC(void)" />
      <node id="CDC::SelectStockObject(int)" label="CDC::SelectStockObject(int)" />
      <node id="unknown_libname_36" label="unknown_libname_36" />
      <node id="AfxDeleteObject(void * *)" label="AfxDeleteObject(void * *)" />
      <node id="AfxGlobalFree(void *)" label="AfxGlobalFree(void *)" />
      <node id="_AfxChildWindowFromPoint(HWND__ *,tagPOINT)" label="_AfxChildWindowFromPoint(HWND__ *,tagPOINT)" />
      <node id="CWnd::OnToolHitTest(CPoint,tagTOOLINFOA *)" label="CWnd::OnToolHitTest(CPoint,tagTOOLINFOA *)" />
      <node id="CArchive::Flush(void)" label="CArchive::Flush(void)" />
      <node id="CCmdTarget::GetRoutingFrame_(void)" label="CCmdTarget::GetRoutingFrame_(void)" />
      <node id="AfxMessageBox(char const *,uint,uint)" label="AfxMessageBox(char const *,uint,uint)" />
      <node id="CWinApp::GetFirstDocTemplatePosition(void)" label="CWinApp::GetFirstDocTemplatePosition(void)" />
      <node id="CDataExchange::PrepareEditCtrl(int)" label="CDataExchange::PrepareEditCtrl(int)" />
      <node id="sub_401540" label="sub_401540" />
      <node id="CWinApp::SaveStdProfileSettings(void)" label="CWinApp::SaveStdProfileSettings(void)" />
      <node id="sub_4157E5" label="sub_4157E5" />
      <node id="AfxOleCanExitApp(void)" label="AfxOleCanExitApp(void)" />
      <node id="AfxOleLockApp(void)" label="AfxOleLockApp(void)" />
      <node id="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CMFCComObject&lt;ATL::CAccessibleProxy&gt;(void *)" label="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CMFCComObject&lt;ATL::CAccessibleProxy&gt;(void *)" />
      <node id="AfxOleSetUserCtrl(int)" label="AfxOleSetUserCtrl(int)" />
      <node id="AfxOleGetUserCtrl(void)" label="AfxOleGetUserCtrl(void)" />
      <node id="AfxOleUnlockApp(void)" label="AfxOleUnlockApp(void)" />
      <node id="CWinThread::CommonConstruct(void)" label="CWinThread::CommonConstruct(void)" />
      <node id="CCmdUI::SetRadio(int)" label="CCmdUI::SetRadio(int)" />
      <node id="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::AddRef(void)" label="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::AddRef(void)" />
      <node id="sub_416ADB" label="sub_416ADB" />
      <node id="sub_416AF9" label="sub_416AF9" />
      <node id="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::Release(void)" label="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::Release(void)" />
      <node id="sub_416AE5" label="sub_416AE5" />
      <node id="sub_416B03" label="sub_416B03" />
      <node id="[thunk]:CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface`adjustor{4}' (_GUID const &amp;,void * *)" label="[thunk]:CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface`adjustor{4}' (_GUID const &amp;,void * *)" />
      <node id="[thunk]:CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface`adjustor{16}' (_GUID const &amp;,void * *)" label="[thunk]:CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface`adjustor{16}' (_GUID const &amp;,void * *)" />
      <node id="CThreadLocalObject::~CThreadLocalObject(void)" label="CThreadLocalObject::~CThreadLocalObject(void)" />
      <node id="CTypeLibCache::Unlock(void)" label="CTypeLibCache::Unlock(void)" />
      <node id="CCmdTarget::OnFinalRelease(void)" label="CCmdTarget::OnFinalRelease(void)" />
      <node id="_AFX_THREAD_STATE::_AFX_THREAD_STATE(void)" label="_AFX_THREAD_STATE::_AFX_THREAD_STATE(void)" />
      <node id="_AFX_THREAD_STATE::`scalar deleting destructor'(uint)" label="_AFX_THREAD_STATE::`scalar deleting destructor'(uint)" />
      <node id="AFX_MODULE_STATE::`scalar deleting destructor'(uint)" label="AFX_MODULE_STATE::`scalar deleting destructor'(uint)" />
      <node id="AFX_MODULE_THREAD_STATE::`scalar deleting destructor'(uint)" label="AFX_MODULE_THREAD_STATE::`scalar deleting destructor'(uint)" />
      <node id="AFX_MODULE_STATE::AFX_MODULE_STATE(int)" label="AFX_MODULE_STATE::AFX_MODULE_STATE(int)" />
      <node id="CProcessLocal&lt;_AFX_BASE_MODULE_STATE&gt;::CreateObject(void)" label="CProcessLocal&lt;_AFX_BASE_MODULE_STATE&gt;::CreateObject(void)" />
      <node id="AFX_MODULE_THREAD_STATE::AFX_MODULE_THREAD_STATE(void)" label="AFX_MODULE_THREAD_STATE::AFX_MODULE_THREAD_STATE(void)" />
      <node id="AfxGetThreadState(void)" label="AfxGetThreadState(void)" />
      <node id="sub_40EFC6" label="sub_40EFC6" />
      <node id="AfxGetModuleState(void)" label="AfxGetModuleState(void)" />
      <node id="_AfxMsgFilterHook(int,uint,long)" label="_AfxMsgFilterHook(int,uint,long)" />
      <node id="CDialog::CheckAutoCenter(void)" label="CDialog::CheckAutoCenter(void)" />
      <node id="CDialog::OnCommandHelp(uint,long)" label="CDialog::OnCommandHelp(uint,long)" />
      <node id="CWnd::WinHelpInternal(ulong,uint)" label="CWnd::WinHelpInternal(ulong,uint)" />
      <node id="CWinApp::InitInstance(void)" label="CWinApp::InitInstance(void)" />
      <node id="AfxGetModuleThreadState(void)" label="AfxGetModuleThreadState(void)" />
      <node id="CWinApp::GetAppRegistryKey(void)" label="CWinApp::GetAppRegistryKey(void)" />
      <node id="CWinApp::GetSectionKey(char const *)" label="CWinApp::GetSectionKey(char const *)" />
      <node id="sub_416A0A" label="sub_416A0A" />
      <node id="CNoTrackObject::operator delete(void *)" label="CNoTrackObject::operator delete(void *)" />
      <node id="sub_417568" label="sub_417568" />
      <node id="CThreadSlotData::GetThreadValue(int)" label="CThreadSlotData::GetThreadValue(int)" />
      <node id="CThreadLocalObject::GetDataNA(void)" label="CThreadLocalObject::GetDataNA(void)" />
      <node id="unknown_libname_50" label="unknown_libname_50" />
      <node id="CSimpleList::Remove(void *)" label="CSimpleList::Remove(void *)" />
      <node id="CThreadSlotData::DeleteValues(CThreadData *,HINSTANCE__ *)" label="CThreadSlotData::DeleteValues(CThreadData *,HINSTANCE__ *)" />
      <node id="sub_4173B3" label="sub_4173B3" />
      <node id="CThreadSlotData::FreeSlot(int)" label="CThreadSlotData::FreeSlot(int)" />
      <node id="nullsub_1" label="nullsub_1" />
      <node id="CThreadSlotData::DeleteValues(HINSTANCE__ *,int)" label="CThreadSlotData::DeleteValues(HINSTANCE__ *,int)" />
      <node id="CThreadSlotData::~CThreadSlotData(void)" label="CThreadSlotData::~CThreadSlotData(void)" />
      <node id="AfxTermLocalData(HINSTANCE__ *,int)" label="AfxTermLocalData(HINSTANCE__ *,int)" />
      <node id="CWnd::OnNTCtlColor(uint,long)" label="CWnd::OnNTCtlColor(uint,long)" />
      <node id="sub_40E60B" label="sub_40E60B" />
      <node id="AfxTlsRelease(void)" label="AfxTlsRelease(void)" />
      <node id="AfxCriticalInit(void)" label="AfxCriticalInit(void)" />
      <node id="AfxLockGlobals(int)" label="AfxLockGlobals(int)" />
      <node id="AfxCriticalTerm(void)" label="AfxCriticalTerm(void)" />
      <node id="CWinApp::DoWaitCursor(int)" label="CWinApp::DoWaitCursor(int)" />
      <node id="AfxUnlockGlobals(int)" label="AfxUnlockGlobals(int)" />
      <node id="AfxGetFileName(char const *,char *,uint)" label="AfxGetFileName(char const *,char *,uint)" />
      <node id="CCmdTarget::InternalRelease(void)" label="CCmdTarget::InternalRelease(void)" />
      <node id="CCmdTarget::ExternalRelease(void)" label="CCmdTarget::ExternalRelease(void)" />
      <node id="unknown_libname_25" label="unknown_libname_25" />
      <node id="sub_410A18" label="sub_410A18" />
      <node id="CCmdTarget::GetInterface(void const *)" label="CCmdTarget::GetInterface(void const *)" />
      <node id="CCmdTarget::ExternalQueryInterface(void const *,void * *)" label="CCmdTarget::ExternalQueryInterface(void const *,void * *)" />
      <node id="CCmdTarget::QueryAggregates(void const *)" label="CCmdTarget::QueryAggregates(void const *)" />
      <node id="CCmdTarget::ExternalAddRef(void)" label="CCmdTarget::ExternalAddRef(void)" />
      <node id="unknown_libname_24" label="unknown_libname_24" />
      <node id="COleDataSource::XDataObject::AddRef(void)" label="COleDataSource::XDataObject::AddRef(void)" />
      <node id="unknown_libname_26" label="unknown_libname_26" />
      <node id="COleDataSource::XDataObject::QueryInterface(_GUID const &amp;,void * *)" label="COleDataSource::XDataObject::QueryInterface(_GUID const &amp;,void * *)" />
      <node id="GetSystemInfo" label="GetSystemInfo" />
      <node id="VirtualQuery" label="VirtualQuery" />
      <node id="GetStartupInfoA" label="GetStartupInfoA" />
      <node id="GetCommandLineA" label="GetCommandLineA" />
      <node id="ExitProcess" label="ExitProcess" />
      <node id="TerminateProcess" label="TerminateProcess" />
      <node id="HeapReAlloc" label="HeapReAlloc" />
      <node id="HeapSize" label="HeapSize" />
      <node id="SetUnhandledExceptionFilter" label="SetUnhandledExceptionFilter" />
      <node id="HeapDestroy" label="HeapDestroy" />
      <node id="HeapCreate" label="HeapCreate" />
      <node id="VirtualFree" label="VirtualFree" />
      <node id="IsBadWritePtr" label="IsBadWritePtr" />
      <node id="GetStdHandle" label="GetStdHandle" />
      <node id="UnhandledExceptionFilter" label="UnhandledExceptionFilter" />
      <node id="FreeEnvironmentStringsA" label="FreeEnvironmentStringsA" />
      <node id="GetEnvironmentStrings" label="GetEnvironmentStrings" />
      <node id="FreeEnvironmentStringsW" label="FreeEnvironmentStringsW" />
      <node id="GetEnvironmentStringsW" label="GetEnvironmentStringsW" />
      <node id="VirtualAlloc" label="VirtualAlloc" />
      <node id="GetFileType" label="GetFileType" />
      <node id="QueryPerformanceCounter" label="QueryPerformanceCounter" />
      <node id="___security_init_cookie" label="___security_init_cookie" />
      <node id="GetTickCount" label="GetTickCount" />
      <node id="GetCurrentProcessId" label="GetCurrentProcessId" />
      <node id="GetSystemTimeAsFileTime" label="GetSystemTimeAsFileTime" />
      <node id="LCMapStringA" label="LCMapStringA" />
      <node id="LCMapStringW" label="LCMapStringW" />
      <node id="GetStringTypeA" label="GetStringTypeA" />
      <node id="GetStringTypeW" label="GetStringTypeW" />
      <node id="IsBadReadPtr" label="IsBadReadPtr" />
      <node id="IsBadCodePtr" label="IsBadCodePtr" />
      <node id="SetStdHandle" label="SetStdHandle" />
      <node id="VirtualProtect" label="VirtualProtect" />
      <node id="HeapFree" label="HeapFree" />
      <node id="HeapAlloc" label="HeapAlloc" />
      <node id="SetErrorMode" label="SetErrorMode" />
      <node id="GetOEMCP" label="GetOEMCP" />
      <node id="GetCPInfo" label="GetCPInfo" />
      <node id="FlushFileBuffers" label="FlushFileBuffers" />
      <node id="SetFilePointer" label="SetFilePointer" />
      <node id="WriteFile" label="WriteFile" />
      <node id="ReadFile" label="ReadFile" />
      <node id="TlsFree" label="TlsFree" />
      <node id="LocalReAlloc" label="LocalReAlloc" />
      <node id="TlsSetValue" label="TlsSetValue" />
      <node id="TlsAlloc" label="TlsAlloc" />
      <node id="__crtTlsAlloc(x)" label="__crtTlsAlloc(x)" />
      <node id="TlsGetValue" label="TlsGetValue" />
      <node id="EnterCriticalSection" label="EnterCriticalSection" />
      <node id="GlobalHandle" label="GlobalHandle" />
      <node id="GlobalReAlloc" label="GlobalReAlloc" />
      <node id="LeaveCriticalSection" label="LeaveCriticalSection" />
      <node id="LocalAlloc" label="LocalAlloc" />
      <node id="DeleteCriticalSection" label="DeleteCriticalSection" />
      <node id="InitializeCriticalSection" label="InitializeCriticalSection" />
      <node id="__crtInitCritSecNoSpinCount(x,x)" label="__crtInitCritSecNoSpinCount(x,x)" />
      <node id="RaiseException" label="RaiseException" />
      <node id="GlobalFlags" label="GlobalFlags" />
      <node id="InterlockedIncrement" label="InterlockedIncrement" />
      <node id="WritePrivateProfileStringA" label="WritePrivateProfileStringA" />
      <node id="InterlockedDecrement" label="InterlockedDecrement" />
      <node id="SetLastError" label="SetLastError" />
      <node id="MulDiv" label="MulDiv" />
      <node id="FormatMessageA" label="FormatMessageA" />
      <node id="COleException::GetErrorMessage(char *,uint,uint *)" label="COleException::GetErrorMessage(char *,uint,uint *)" />
      <node id="LocalFree" label="LocalFree" />
      <node id="GlobalGetAtomNameA" label="GlobalGetAtomNameA" />
      <node id="GlobalFindAtomA" label="GlobalFindAtomA" />
      <node id="lstrcatA" label="lstrcatA" />
      <node id="lstrcmpW" label="lstrcmpW" />
      <node id="lstrcpynA" label="lstrcpynA" />
      <node id="GlobalUnlock" label="GlobalUnlock" />
      <node id="GlobalFree" label="GlobalFree" />
      <node id="FreeResource" label="FreeResource" />
      <node id="CloseHandle" label="CloseHandle" />
      <node id="GlobalAddAtomA" label="GlobalAddAtomA" />
      <node id="GetCurrentThread" label="GetCurrentThread" />
      <node id="GetCurrentThreadId" label="GetCurrentThreadId" />
      <node id="GlobalLock" label="GlobalLock" />
      <node id="GlobalAlloc" label="GlobalAlloc" />
      <node id="FreeLibrary" label="FreeLibrary" />
      <node id="GlobalDeleteAtom" label="GlobalDeleteAtom" />
      <node id="lstrcmpA" label="lstrcmpA" />
      <node id="GetModuleFileNameA" label="GetModuleFileNameA" />
      <node id="GetModuleHandleA" label="GetModuleHandleA" />
      <node id="GetProcAddress" label="GetProcAddress" />
      <node id="ConvertDefaultLocale" label="ConvertDefaultLocale" />
      <node id="EnumResourceLanguagesA" label="EnumResourceLanguagesA" />
      <node id="lstrcpyA" label="lstrcpyA" />
      <node id="LoadLibraryA" label="LoadLibraryA" />
      <node id="lstrlenA" label="lstrlenA" />
      <node id="lstrcmpiA" label="lstrcmpiA" />
      <node id="GetVersion" label="GetVersion" />
      <node id="`dynamic initializer for '_afxMsgMouseWheel''(void)" label="`dynamic initializer for '_afxMsgMouseWheel''(void)" />
      <node id="GetLastError" label="GetLastError" />
      <node id="MultiByteToWideChar" label="MultiByteToWideChar" />
      <node id="GetCurrentDirectoryA" label="GetCurrentDirectoryA" />
      <node id="LoadLibraryExW" label="LoadLibraryExW" />
      <node id="GetCurrentProcess" label="GetCurrentProcess" />
      <node id="WideCharToMultiByte" label="WideCharToMultiByte" />
      <node id="FindResourceA" label="FindResourceA" />
      <node id="LoadResource" label="LoadResource" />
      <node id="LockResource" label="LockResource" />
      <node id="SizeofResource" label="SizeofResource" />
      <node id="GetVersionExA" label="GetVersionExA" />
      <node id="GetThreadLocale" label="GetThreadLocale" />
      <node id="sub_4011B0" label="sub_4011B0" />
      <node id="GetLocaleInfoA" label="GetLocaleInfoA" />
      <node id="GetACP" label="GetACP" />
      <node id="SetHandleCount" label="SetHandleCount" />
      <node id="InterlockedExchange" label="InterlockedExchange" />
      <node id="GetSysColorBrush" label="GetSysColorBrush" />
      <node id="LoadCursorA" label="LoadCursorA" />
      <node id="EndPaint" label="EndPaint" />
      <node id="BeginPaint" label="BeginPaint" />
      <node id="ReleaseDC" label="ReleaseDC" />
      <node id="GetDC" label="GetDC" />
      <node id="ClientToScreen" label="ClientToScreen" />
      <node id="GrayStringA" label="GrayStringA" />
      <node id="CDC::GrayStringA(CBrush *,int (*)(HDC__ *,long,int),long,int,int,int,int,int)" label="CDC::GrayStringA(CBrush *,int (*)(HDC__ *,long,int),long,int,int,int,int,int)" />
      <node id="DrawTextExA" label="DrawTextExA" />
      <node id="CDC::DrawTextExA(char *,int,tagRECT *,uint,tagDRAWTEXTPARAMS *)" label="CDC::DrawTextExA(char *,int,tagRECT *,uint,tagDRAWTEXTPARAMS *)" />
      <node id="DrawTextA" label="DrawTextA" />
      <node id="sub_40385D" label="sub_40385D" />
      <node id="TabbedTextOutA" label="TabbedTextOutA" />
      <node id="CDC::TabbedTextOutA(int,int,char const *,int,int,int *,int)" label="CDC::TabbedTextOutA(int,int,char const *,int,int,int *,int)" />
      <node id="wsprintfA" label="wsprintfA" />
      <node id="DestroyMenu" label="DestroyMenu" />
      <node id="ShowWindow" label="ShowWindow" />
      <node id="MoveWindow" label="MoveWindow" />
      <node id="SetWindowTextA" label="SetWindowTextA" />
      <node id="IsDialogMessageA" label="IsDialogMessageA" />
      <node id="RegisterWindowMessageA" label="RegisterWindowMessageA" />
      <node id="WinHelpA" label="WinHelpA" />
      <node id="GetCapture" label="GetCapture" />
      <node id="GetClassLongA" label="GetClassLongA" />
      <node id="GetClassInfoExA" label="GetClassInfoExA" />
      <node id="GetClassNameA" label="GetClassNameA" />
      <node id="SetPropA" label="SetPropA" />
      <node id="GetPropA" label="GetPropA" />
      <node id="RemovePropA" label="RemovePropA" />
      <node id="SendDlgItemMessageA" label="SendDlgItemMessageA" />
      <node id="SetFocus" label="SetFocus" />
      <node id="GetWindowTextLengthA" label="GetWindowTextLengthA" />
      <node id="GetWindowTextA" label="GetWindowTextA" />
      <node id="GetForegroundWindow" label="GetForegroundWindow" />
      <node id="GetTopWindow" label="GetTopWindow" />
      <node id="GetMessageTime" label="GetMessageTime" />
      <node id="GetMessagePos" label="GetMessagePos" />
      <node id="MapWindowPoints" label="MapWindowPoints" />
      <node id="SetForegroundWindow" label="SetForegroundWindow" />
      <node id="UpdateWindow" label="UpdateWindow" />
      <node id="GetMenu" label="GetMenu" />
      <node id="GetSubMenu" label="GetSubMenu" />
      <node id="GetMenuItemID" label="GetMenuItemID" />
      <node id="GetMenuItemCount" label="GetMenuItemCount" />
      <node id="GetSysColor" label="GetSysColor" />
      <node id="AdjustWindowRectEx" label="AdjustWindowRectEx" />
      <node id="GetClassInfoA" label="GetClassInfoA" />
      <node id="RegisterClassA" label="RegisterClassA" />
      <node id="UnregisterClassA" label="UnregisterClassA" />
      <node id="IsRectEmpty" label="IsRectEmpty" />
      <node id="DrawIcon" label="DrawIcon" />
      <node id="CreateWindowExA" label="CreateWindowExA" />
      <node id="AppendMenuA" label="AppendMenuA" />
      <node id="SendMessageA" label="SendMessageA" />
      <node id="sub_402820" label="sub_402820" />
      <node id="CCmdUI::SetCheck(int)" label="CCmdUI::SetCheck(int)" />
      <node id="CWinApp::OnAppExit(void)" label="CWinApp::OnAppExit(void)" />
      <node id="GetSystemMenu" label="GetSystemMenu" />
      <node id="IsIconic" label="IsIconic" />
      <node id="GetWindowRect" label="GetWindowRect" />
      <node id="GetClientRect" label="GetClientRect" />
      <node id="InvalidateRect" label="InvalidateRect" />
      <node id="IsWindowVisible" label="IsWindowVisible" />
      <node id="EnableWindow" label="EnableWindow" />
      <node id="sub_4013F0" label="sub_4013F0" />
      <node id="sub_401400" label="sub_401400" />
      <node id="LoadIconA" label="LoadIconA" />
      <node id="GetSystemMetrics" label="GetSystemMetrics" />
      <node id="GetDlgCtrlID" label="GetDlgCtrlID" />
      <node id="DefWindowProcA" label="DefWindowProcA" />
      <node id="CWnd::DefWindowProcA(uint,uint,long)" label="CWnd::DefWindowProcA(uint,uint,long)" />
      <node id="CallWindowProcA" label="CallWindowProcA" />
      <node id="SetWindowLongA" label="SetWindowLongA" />
      <node id="SetWindowPos" label="SetWindowPos" />
      <node id="SystemParametersInfoA" label="SystemParametersInfoA" />
      <node id="GetWindowPlacement" label="GetWindowPlacement" />
      <node id="CopyRect" label="CopyRect" />
      <node id="PtInRect" label="PtInRect" />
      <node id="GetWindow" label="GetWindow" />
      <node id="GetDesktopWindow" label="GetDesktopWindow" />
      <node id="SetActiveWindow" label="SetActiveWindow" />
      <node id="CreateDialogIndirectParamA" label="CreateDialogIndirectParamA" />
      <node id="DestroyWindow" label="DestroyWindow" />
      <node id="IsWindow" label="IsWindow" />
      <node id="GetDlgItem" label="GetDlgItem" />
      <node id="GetNextDlgTabItem" label="GetNextDlgTabItem" />
      <node id="EndDialog" label="EndDialog" />
      <node id="SetMenuItemBitmaps" label="SetMenuItemBitmaps" />
      <node id="GetFocus" label="GetFocus" />
      <node id="ModifyMenuA" label="ModifyMenuA" />
      <node id="GetMenuState" label="GetMenuState" />
      <node id="EnableMenuItem" label="EnableMenuItem" />
      <node id="CheckMenuItem" label="CheckMenuItem" />
      <node id="UnhookWindowsHookEx" label="UnhookWindowsHookEx" />
      <node id="PostMessageA" label="PostMessageA" />
      <node id="CWnd::EndModalLoop(int)" label="CWnd::EndModalLoop(int)" />
      <node id="SetCursor" label="SetCursor" />
      <node id="IsWindowEnabled" label="IsWindowEnabled" />
      <node id="GetLastActivePopup" label="GetLastActivePopup" />
      <node id="GetWindowLongA" label="GetWindowLongA" />
      <node id="GetParent" label="GetParent" />
      <node id="MessageBoxA" label="MessageBoxA" />
      <node id="ValidateRect" label="ValidateRect" />
      <node id="GetCursorPos" label="GetCursorPos" />
      <node id="PeekMessageA" label="PeekMessageA" />
      <node id="GetKeyState" label="GetKeyState" />
      <node id="GetActiveWindow" label="GetActiveWindow" />
      <node id="DispatchMessageA" label="DispatchMessageA" />
      <node id="TranslateMessage" label="TranslateMessage" />
      <node id="GetMessageA" label="GetMessageA" />
      <node id="GetMenuCheckMarkDimensions" label="GetMenuCheckMarkDimensions" />
      <node id="LoadBitmapA" label="LoadBitmapA" />
      <node id="SetWindowsHookExA" label="SetWindowsHookExA" />
      <node id="CallNextHookEx" label="CallNextHookEx" />
      <node id="GetStockObject" label="GetStockObject" />
      <node id="DeleteDC" label="DeleteDC" />
      <node id="ScaleWindowExtEx" label="ScaleWindowExtEx" />
      <node id="CDC::ScaleWindowExt(int,int,int,int)" label="CDC::ScaleWindowExt(int,int,int,int)" />
      <node id="SetWindowExtEx" label="SetWindowExtEx" />
      <node id="CDC::SetWindowExt(int,int)" label="CDC::SetWindowExt(int,int)" />
      <node id="ScaleViewportExtEx" label="ScaleViewportExtEx" />
      <node id="CDC::ScaleViewportExt(int,int,int,int)" label="CDC::ScaleViewportExt(int,int,int,int)" />
      <node id="SetViewportExtEx" label="SetViewportExtEx" />
      <node id="CDC::SetViewportExt(int,int)" label="CDC::SetViewportExt(int,int)" />
      <node id="OffsetViewportOrgEx" label="OffsetViewportOrgEx" />
      <node id="CDC::OffsetViewportOrg(int,int)" label="CDC::OffsetViewportOrg(int,int)" />
      <node id="SetViewportOrgEx" label="SetViewportOrgEx" />
      <node id="CDC::SetViewportOrg(int,int)" label="CDC::SetViewportOrg(int,int)" />
      <node id="SelectObject" label="SelectObject" />
      <node id="Escape" label="Escape" />
      <node id="sub_4038C8" label="sub_4038C8" />
      <node id="TextOutA" label="TextOutA" />
      <node id="sub_4037E4" label="sub_4037E4" />
      <node id="RectVisible" label="RectVisible" />
      <node id="sub_4037D4" label="sub_4037D4" />
      <node id="PtVisible" label="PtVisible" />
      <node id="sub_4037C0" label="sub_4037C0" />
      <node id="CreateBitmap" label="CreateBitmap" />
      <node id="DeleteObject" label="DeleteObject" />
      <node id="SetMapMode" label="SetMapMode" />
      <node id="sub_4143F1" label="sub_4143F1" />
      <node id="RestoreDC" label="RestoreDC" />
      <node id="CDC::RestoreDC(int)" label="CDC::RestoreDC(int)" />
      <node id="SaveDC" label="SaveDC" />
      <node id="CDC::SaveDC(void)" label="CDC::SaveDC(void)" />
      <node id="ExtTextOutA" label="ExtTextOutA" />
      <node id="CDC::ExtTextOutA(int,int,uint,tagRECT const *,char const *,uint,int *)" label="CDC::ExtTextOutA(int,int,uint,tagRECT const *,char const *,uint,int *)" />
      <node id="GetDeviceCaps" label="GetDeviceCaps" />
      <node id="GetObjectA" label="GetObjectA" />
      <node id="SetBkColor" label="SetBkColor" />
      <node id="sub_414393" label="sub_414393" />
      <node id="SetTextColor" label="SetTextColor" />
      <node id="sub_4143C2" label="sub_4143C2" />
      <node id="GetClipBox" label="GetClipBox" />
      <node id="sub_41441F" label="sub_41441F" />
      <node id="RegQueryValueExA" label="RegQueryValueExA" />
      <node id="CWinApp::LoadSysPolicies(void)" label="CWinApp::LoadSysPolicies(void)" />
      <node id="RegOpenKeyExA" label="RegOpenKeyExA" />
      <node id="RegDeleteKeyA" label="RegDeleteKeyA" />
      <node id="RegEnumKeyA" label="RegEnumKeyA" />
      <node id="RegOpenKeyA" label="RegOpenKeyA" />
      <node id="RegQueryValueA" label="RegQueryValueA" />
      <node id="RegCreateKeyExA" label="RegCreateKeyExA" />
      <node id="RegSetValueExA" label="RegSetValueExA" />
      <node id="RegCloseKey" label="RegCloseKey" />
      <node id="SHBrowseForFolderA" label="SHBrowseForFolderA" />
      <node id="SHGetPathFromIDListA" label="SHGetPathFromIDListA" />
      <node id="InitCommonControls" label="InitCommonControls" />
      <node id="PathFindFileNameA" label="PathFindFileNameA" />
      <node id="PathFindExtensionA" label="PathFindExtensionA" />
      <node id="CoInitializeEx" label="CoInitializeEx" />
      <node id="CoGetMalloc" label="CoGetMalloc" />
      <node id="CoUninitialize" label="CoUninitialize" />
      <node id="VariantInit" label="VariantInit" />
      <node id="VariantClear" label="VariantClear" />
      <node id="VariantChangeType" label="VariantChangeType" />
    </nodes>
    <edges>
      <edge source="sub_401010" target="CWinApp::CWinApp(char const *)" id="0" />
      <edge source="" target="sub_401010" id="1" />
      <edge source="" target="sub_401730" id="2" />
      <edge source="" target="sub_401B80" id="3" />
      <edge source="" target="sub_403639" id="4" />
      <edge source="" target="sub_403640" id="5" />
      <edge source="" target="sub_403647" id="6" />
      <edge source="" target="sub_403682" id="7" />
      <edge source="" target="sub_4036C0" id="8" />
      <edge source="" target="sub_4036FE" id="9" />
      <edge source="" target="sub_40376E" id="10" />
      <edge source="" target="sub_403790" id="11" />
      <edge source="" target="sub_403797" id="12" />
      <edge source="" target="sub_4037B9" id="13" />
      <edge source="" target="_atexit" id="14" />
      <edge source="" target="_malloc" id="15" />
      <edge source="" target="__except_handler3" id="16" />
      <edge source="" target="_calloc" id="17" />
      <edge source="" target="__fcloseall" id="18" />
      <edge source="" target="sub_40B4A3" id="19" />
      <edge source="" target="sub_40E2C9" id="20" />
      <edge source="" target="sub_40E3A5" id="21" />
      <edge source="" target="AfxInitialize(int,ulong)" id="22" />
      <edge source="" target="CWinApp::DevModeChange(char *)" id="23" />
      <edge source="" target="operator new(uint)" id="24" />
      <edge source="" target="CDialog::OnPaint(void)" id="25" />
      <edge source="" target="CWnd::CWnd(HWND__ *)" id="26" />
      <edge source="" target="CWnd::GetCurrentMessage(void)" id="27" />
      <edge source="" target="CWnd::Default(void)" id="28" />
      <edge source="" target="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" id="29" />
      <edge source="" target="CWnd::GetStyle(void)" id="30" />
      <edge source="" target="CAfxStringMgr::CAfxStringMgr(void)" id="31" />
      <edge source="" target="AfxClassInit(CRuntimeClass *)" id="32" />
      <edge source="" target="CPaintDC::CPaintDC(CWnd *)" id="33" />
      <edge source="" target="CPaintDC::~CPaintDC(void)" id="34" />
      <edge source="" target="AfxDeleteObject(void * *)" id="35" />
      <edge source="" target="CThreadLocalObject::~CThreadLocalObject(void)" id="36" />
      <edge source="" target="AfxGetModuleState(void)" id="37" />
      <edge source="" target="CProcessLocalObject::~CProcessLocalObject(void)" id="38" />
      <edge source="" target="AUX_DATA::AUX_DATA(void)" id="39" />
      <edge source="" target="_AfxInitDBCS(void)" id="40" />
      <edge source="" target="SetUnhandledExceptionFilter" id="41" />
      <edge source="" target="RegisterWindowMessageA" id="42" />
      <edge source="" target="IsRectEmpty" id="43" />
      <edge source="" target="DrawIcon" id="44" />
      <edge source="" target="SendMessageA" id="45" />
      <edge source="" target="IsIconic" id="46" />
      <edge source="" target="GetWindowRect" id="47" />
      <edge source="" target="GetClientRect" id="48" />
      <edge source="" target="IsWindowVisible" id="49" />
      <edge source="" target="GetSystemMetrics" id="50" />
      <edge source="CWinApp::~CWinApp(void)" target="___CxxFrameHandler" id="51" />
      <edge source="CWinApp::~CWinApp(void)" target="_free" id="52" />
      <edge source="CWinApp::~CWinApp(void)" target="__EH_prolog" id="53" />
      <edge source="CWinApp::~CWinApp(void)" target="AfxGlobalFree(void *)" id="54" />
      <edge source="CWinApp::~CWinApp(void)" target="CWinApp::~CWinApp(void)" id="55" />
      <edge source="CWinApp::~CWinApp(void)" target="AfxGetModuleState(void)" id="56" />
      <edge source="CWinApp::~CWinApp(void)" target="CWinThread::~CWinThread(void)" id="57" />
      <edge source="CWinApp::~CWinApp(void)" target="GlobalDeleteAtom" id="58" />
      <edge source="sub_401070" target="CWinApp::~CWinApp(void)" id="59" />
      <edge source="sub_401070" target="j__free" id="60" />
      <edge source="sub_4183B0" target="CWinApp::~CWinApp(void)" id="61" />
      <edge source="CArchiveException::~CArchiveException(void)" target="ATL::CStringData::Release(void)" id="62" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="ATL::CStringData::Release(void)" id="63" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="___CxxFrameHandler" id="64" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="__EH_prolog" id="65" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="__mbscmp" id="66" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="AfxEndDeferRegisterClass(long)" id="67" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="AfxUnhookWindowCreate(void)" id="68" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="AfxHookWindowCreate(CWnd *)" id="69" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="CException::Delete(void)" id="70" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="sub_413A06" id="71" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="Concurrency::details::UMSFreeVirtualProcessorRoot::InitialThreadParam::~InitialThreadParam(void)" id="72" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="ATL::CComPtrBase&lt;ICustomDestinationList&gt;::Detach(void)" id="73" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="CDialogTemplate::SetSystemFont(ushort)" id="74" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="CDialogTemplate::CDialogTemplate(DLGTEMPLATE const *)" id="75" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="CDialogTemplate::GetFont(DLGTEMPLATE const *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,ushort &amp;)" id="76" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="AfxGetModuleState(void)" id="77" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="GlobalUnlock" id="78" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="GlobalFree" id="79" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="GlobalLock" id="80" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="GetSystemMetrics" id="81" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="CreateDialogIndirectParamA" id="82" />
      <edge source="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" target="DestroyWindow" id="83" />
      <edge source="sub_414ECB" target="ATL::CStringData::Release(void)" id="84" />
      <edge source="sub_414ECB" target="sub_401F50" id="85" />
      <edge source="sub_414ECB" target="sub_4027B0" id="86" />
      <edge source="sub_414ECB" target="___CxxFrameHandler" id="87" />
      <edge source="sub_414ECB" target="__EH_prolog" id="88" />
      <edge source="sub_414ECB" target="sub_413A06" id="89" />
      <edge source="sub_414ECB" target="sub_4157E5" id="90" />
      <edge source="sub_414ECB" target="lstrcpynA" id="91" />
      <edge source="AfxMessageBox(uint,uint,uint)" target="ATL::CStringData::Release(void)" id="92" />
      <edge source="AfxMessageBox(uint,uint,uint)" target="sub_401F50" id="93" />
      <edge source="AfxMessageBox(uint,uint,uint)" target="___CxxFrameHandler" id="94" />
      <edge source="AfxMessageBox(uint,uint,uint)" target="__EH_prolog" id="95" />
      <edge source="AfxMessageBox(uint,uint,uint)" target="sub_413A06" id="96" />
      <edge source="AfxMessageBox(uint,uint,uint)" target="AfxMessageBox(char const *,uint,uint)" id="97" />
      <edge source="ATL::operator+(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;,char const *)" target="ATL::CStringData::Release(void)" id="98" />
      <edge source="ATL::operator+(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;,char const *)" target="sub_4027B0" id="99" />
      <edge source="ATL::operator+(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;,char const *)" target="___CxxFrameHandler" id="100" />
      <edge source="ATL::operator+(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;,char const *)" target="__EH_prolog" id="101" />
      <edge source="ATL::operator+(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;,char const *)" target="_strlen" id="102" />
      <edge source="ATL::operator+(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;,char const *)" target="ATL::CSimpleStringT&lt;char,0&gt;::Concatenate(ATL::CSimpleStringT&lt;char,0&gt; &amp;,char const *,int,char const *,int)" id="103" />
      <edge source="sub_41577E" target="ATL::CStringData::Release(void)" id="104" />
      <edge source="sub_41577E" target="sub_401F50" id="105" />
      <edge source="sub_41577E" target="___CxxFrameHandler" id="106" />
      <edge source="sub_41577E" target="__EH_prolog" id="107" />
      <edge source="sub_41577E" target="sub_413A06" id="108" />
      <edge source="sub_41577E" target="AfxFormatStrings(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,char const *,char const * const *,int)" id="109" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="ATL::CStringData::Release(void)" id="110" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="sub_402610" id="111" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="___CxxFrameHandler" id="112" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="__security_check_cookie(x)" id="113" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="__EH_prolog" id="114" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="CException::Delete(void)" id="115" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" id="116" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="RegDeleteKeyA" id="117" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="RegEnumKeyA" id="118" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="RegOpenKeyA" id="119" />
      <edge source="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" target="RegCloseKey" id="120" />
      <edge source="CWinApp::Unregister(void)" target="ATL::CStringData::Release(void)" id="121" />
      <edge source="CWinApp::Unregister(void)" target="sub_402610" id="122" />
      <edge source="CWinApp::Unregister(void)" target="___CxxFrameHandler" id="123" />
      <edge source="CWinApp::Unregister(void)" target="__security_check_cookie(x)" id="124" />
      <edge source="CWinApp::Unregister(void)" target="__EH_prolog" id="125" />
      <edge source="CWinApp::Unregister(void)" target="CWinApp::GetFirstDocTemplatePosition(void)" id="126" />
      <edge source="CWinApp::Unregister(void)" target="ATL::operator+(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;,char const *)" id="127" />
      <edge source="CWinApp::Unregister(void)" target="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *)" id="128" />
      <edge source="CWinApp::Unregister(void)" target="AfxDelRegTreeHelper(HKEY__ *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; const &amp;)" id="129" />
      <edge source="CWinApp::Unregister(void)" target="RegEnumKeyA" id="130" />
      <edge source="CWinApp::Unregister(void)" target="RegOpenKeyA" id="131" />
      <edge source="CWinApp::Unregister(void)" target="RegQueryValueA" id="132" />
      <edge source="CWinApp::Unregister(void)" target="RegCloseKey" id="133" />
      <edge source="sub_4010B0" target="sub_40F9C9" id="134" />
      <edge source="sub_402310" target="sub_4010B0" id="135" />
      <edge source="sub_402310" target="j__free" id="136" />
      <edge source="sub_4010E0" target="sub_4010B0" id="137" />
      <edge source="sub_4010E0" target="sub_402280" id="138" />
      <edge source="sub_4010E0" target="___CxxFrameHandler" id="139" />
      <edge source="sub_4010E0" target="sub_40F9C9" id="140" />
      <edge source="sub_4010E0" target="CDialog::DoModal(void)" id="141" />
      <edge source="sub_401180" target="sub_40F9C9" id="142" />
      <edge source="sub_401520" target="sub_401180" id="143" />
      <edge source="sub_401520" target="j__free" id="144" />
      <edge source="sub_401560" target="sub_401180" id="145" />
      <edge source="sub_401560" target="___CxxFrameHandler" id="146" />
      <edge source="sub_401560" target="sub_40F9C9" id="147" />
      <edge source="sub_401560" target="CDialog::CDialog(uint,CWnd *)" id="148" />
      <edge source="sub_401560" target="CDialog::DoModal(void)" id="149" />
      <edge source="sub_401560" target="CWnd::Default(void)" id="150" />
      <edge source="sub_401220" target="sub_401220" id="151" />
      <edge source="sub_401220" target="GetVersionExA" id="152" />
      <edge source="sub_401220" target="InterlockedExchange" id="153" />
      <edge source="sub_401C00" target="sub_401220" id="154" />
      <edge source="sub_401C00" target="sub_401270" id="155" />
      <edge source="sub_401C00" target="sub_401290" id="156" />
      <edge source="sub_401C00" target="sub_401890" id="157" />
      <edge source="sub_401C00" target="WideCharToMultiByte" id="158" />
      <edge source="sub_401C00" target="FindResourceA" id="159" />
      <edge source="CWnd::ExecuteDlgInit(void *)" target="sub_401220" id="160" />
      <edge source="CWnd::ExecuteDlgInit(void *)" target="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" id="161" />
      <edge source="CWnd::ExecuteDlgInit(void *)" target="SendDlgItemMessageA" id="162" />
      <edge source="sub_401270" target="unknown_libname_8" id="163" />
      <edge source="sub_401270" target="AfxThrowOleException(long)" id="164" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::SetLength(int)" target="sub_401270" id="165" />
      <edge source="sub_401460" target="sub_401270" id="166" />
      <edge source="sub_401820" target="sub_401270" id="167" />
      <edge source="sub_401CD0" target="sub_401270" id="168" />
      <edge source="sub_401CD0" target="sub_401820" id="169" />
      <edge source="sub_401CD0" target="sub_401890" id="170" />
      <edge source="sub_401CD0" target="_memcpy" id="171" />
      <edge source="sub_401290" target="LoadResource" id="172" />
      <edge source="sub_401290" target="LockResource" id="173" />
      <edge source="sub_401290" target="SizeofResource" id="174" />
      <edge source="sub_4012F0" target="sub_401290" id="175" />
      <edge source="sub_4012F0" target="FindResourceA" id="176" />
      <edge source="AfxLoadString(uint,char *,uint)" target="sub_4012F0" id="177" />
      <edge source="AfxLoadString(uint,char *,uint)" target="AfxGetModuleState(void)" id="178" />
      <edge source="AfxLoadString(uint,char *,uint)" target="WideCharToMultiByte" id="179" />
      <edge source="sub_402330" target="sub_401330" id="180" />
      <edge source="sub_402330" target="sub_401BD0" id="181" />
      <edge source="sub_402330" target="sub_401E60" id="182" />
      <edge source="sub_402330" target="sub_402030" id="183" />
      <edge source="sub_402330" target="___CxxFrameHandler" id="184" />
      <edge source="sub_402330" target="j__free" id="185" />
      <edge source="sub_402330" target="LoadLibraryExW" id="186" />
      <edge source="sub_402330" target="GetCurrentProcess" id="187" />
      <edge source="sub_402330" target="FindResourceA" id="188" />
      <edge source="sub_402330" target="LoadResource" id="189" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::ReleaseBuffer(int)" target="ATL::CSimpleStringT&lt;char,0&gt;::SetLength(int)" id="190" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::ReleaseBuffer(int)" target="_strlen" id="191" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *,int)" target="ATL::CSimpleStringT&lt;char,0&gt;::SetLength(int)" id="192" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *,int)" target="sub_401BA0" id="193" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *,int)" target="_memcpy_0" id="194" />
      <edge source="sub_4035DB" target="ATL::CSimpleStringT&lt;char,0&gt;::SetLength(int)" id="195" />
      <edge source="sub_4035DB" target="sub_401BA0" id="196" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::Concatenate(ATL::CSimpleStringT&lt;char,0&gt; &amp;,char const *,int,char const *,int)" target="ATL::CSimpleStringT&lt;char,0&gt;::SetLength(int)" id="197" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::Concatenate(ATL::CSimpleStringT&lt;char,0&gt; &amp;,char const *,int,char const *,int)" target="sub_401BA0" id="198" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::Concatenate(ATL::CSimpleStringT&lt;char,0&gt; &amp;,char const *,int,char const *,int)" target="_memcpy_0" id="199" />
      <edge source="sub_401890" target="sub_401460" id="200" />
      <edge source="sub_4018E0" target="sub_401460" id="201" />
      <edge source="sub_401730" target="CWnd::GetDlgItem(int)" id="202" />
      <edge source="sub_401730" target="CWnd::MoveWindow(int,int,int,int,int)" id="203" />
      <edge source="sub_401730" target="GetWindowRect" id="204" />
      <edge source="sub_401730" target="GetClientRect" id="205" />
      <edge source="sub_401730" target="InvalidateRect" id="206" />
      <edge source="sub_4024E0" target="sub_401730" id="207" />
      <edge source="sub_4024E0" target="sub_401C00" id="208" />
      <edge source="sub_4024E0" target="sub_402330" id="209" />
      <edge source="sub_4024E0" target="___CxxFrameHandler" id="210" />
      <edge source="sub_4024E0" target="CDialog::OnInitDialog(void)" id="211" />
      <edge source="sub_4024E0" target="CMenu::FromHandle(HMENU__ *)" id="212" />
      <edge source="sub_4024E0" target="AfxFindStringResourceHandle(uint)" id="213" />
      <edge source="sub_4024E0" target="sub_413A06" id="214" />
      <edge source="sub_4024E0" target="AppendMenuA" id="215" />
      <edge source="sub_4024E0" target="SendMessageA" id="216" />
      <edge source="sub_4024E0" target="GetSystemMenu" id="217" />
      <edge source="std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt; const &amp;)" target="sub_401800" id="218" />
      <edge source="std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt; const &amp;)" target="sub_401D70" id="219" />
      <edge source="sub_401BA0" target="sub_401890" id="220" />
      <edge source="sub_401F80" target="sub_4018E0" id="221" />
      <edge source="sub_401F80" target="sub_401CD0" id="222" />
      <edge source="sub_4027B0" target="sub_4018E0" id="223" />
      <edge source="sub_4028C0" target="sub_4018E0" id="224" />
      <edge source="sub_401960" target="j__free" id="225" />
      <edge source="sub_40E102" target="sub_401960" id="226" />
      <edge source="sub_40E102" target="sub_40E679" id="227" />
      <edge source="sub_4019C0" target="_memcpy" id="228" />
      <edge source="sub_4019C0" target="std::_String_base::_Xran(void)" id="229" />
      <edge source="sub_401D70" target="sub_4019C0" id="230" />
      <edge source="sub_401D70" target="sub_401A40" id="231" />
      <edge source="sub_401D70" target="std::_String_base::_Xran(void)" id="232" />
      <edge source="sub_401D70" target="std::_String_base::_Xlen(void)" id="233" />
      <edge source="sub_401A40" target="___CxxFrameHandler" id="234" />
      <edge source="sub_401A40" target="_CxxThrowException(x,x)" id="235" />
      <edge source="sub_401A40" target="operator new(uint)" id="236" />
      <edge source="sub_401A40" target="j__free" id="237" />
      <edge source="sub_401E60" target="sub_401A40" id="238" />
      <edge source="sub_401E60" target="sub_401D70" id="239" />
      <edge source="sub_401E60" target="std::_String_base::_Xlen(void)" id="240" />
      <edge source="sub_401B80" target="sub_413A06" id="241" />
      <edge source="sub_403AEC" target="sub_401B80" id="242" />
      <edge source="sub_403AEC" target="sub_401FF0" id="243" />
      <edge source="sub_403AEC" target="___CxxFrameHandler" id="244" />
      <edge source="sub_403AEC" target="__EH_prolog" id="245" />
      <edge source="sub_403AEC" target="CException::CException(void)" id="246" />
      <edge source="AfxFormatStrings(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,char const *,char const * const *,int)" target="sub_401BA0" id="247" />
      <edge source="AfxFormatStrings(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,char const *,char const * const *,int)" target="ATL::CSimpleStringT&lt;char,0&gt;::ReleaseBuffer(int)" id="248" />
      <edge source="AfxFormatStrings(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,char const *,char const * const *,int)" target="lstrcpyA" id="249" />
      <edge source="AfxFormatStrings(ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,char const *,char const * const *,int)" target="lstrlenA" id="250" />
      <edge source="sub_401BD0" target="j__free" id="251" />
      <edge source="std::_String_base::_Xlen(void)" target="sub_401BD0" id="252" />
      <edge source="std::_String_base::_Xlen(void)" target="sub_402200" id="253" />
      <edge source="std::_String_base::_Xlen(void)" target="___CxxFrameHandler" id="254" />
      <edge source="std::_String_base::_Xlen(void)" target="_CxxThrowException(x,x)" id="255" />
      <edge source="std::_String_base::_Xlen(void)" target="__EH_prolog" id="256" />
      <edge source="std::_String_base::_Xlen(void)" target="sub_40E0B8" id="257" />
      <edge source="sub_401F50" target="sub_401C00" id="258" />
      <edge source="sub_401F50" target="AfxFindStringResourceHandle(uint)" id="259" />
      <edge source="sub_402030" target="sub_401C00" id="260" />
      <edge source="sub_402030" target="___CxxFrameHandler" id="261" />
      <edge source="sub_402030" target="sub_404527" id="262" />
      <edge source="sub_402030" target="AfxFindStringResourceHandle(uint)" id="263" />
      <edge source="sub_402030" target="sub_413A06" id="264" />
      <edge source="sub_402610" target="sub_401C00" id="265" />
      <edge source="sub_402610" target="sub_401CD0" id="266" />
      <edge source="sub_402610" target="___CxxFrameHandler" id="267" />
      <edge source="sub_402610" target="AfxFindStringResourceHandle(uint)" id="268" />
      <edge source="sub_402610" target="sub_413A06" id="269" />
      <edge source="sub_401FF0" target="sub_401CD0" id="270" />
      <edge source="sub_402240" target="sub_401CD0" id="271" />
      <edge source="sub_402280" target="sub_401CD0" id="272" />
      <edge source="sub_402280" target="___CxxFrameHandler" id="273" />
      <edge source="sub_402280" target="sub_40F9C9" id="274" />
      <edge source="sub_402280" target="CDialog::CDialog(uint,CWnd *)" id="275" />
      <edge source="sub_402280" target="sub_413A06" id="276" />
      <edge source="sub_402280" target="AfxGetModuleState(void)" id="277" />
      <edge source="sub_402280" target="LoadIconA" id="278" />
      <edge source="sub_402900" target="sub_401CD0" id="279" />
      <edge source="sub_402900" target="sub_401F80" id="280" />
      <edge source="sub_402900" target="___CxxFrameHandler" id="281" />
      <edge source="sub_402900" target="sub_413A06" id="282" />
      <edge source="sub_402900" target="GetCurrentDirectoryA" id="283" />
      <edge source="sub_4029F0" target="sub_401CD0" id="284" />
      <edge source="sub_4029F0" target="sub_402240" id="285" />
      <edge source="sub_4029F0" target="SHBrowseForFolderA" id="286" />
      <edge source="sub_4029F0" target="SHGetPathFromIDListA" id="287" />
      <edge source="sub_4029F0" target="CoInitializeEx" id="288" />
      <edge source="sub_4029F0" target="CoGetMalloc" id="289" />
      <edge source="sub_4029F0" target="CoUninitialize" id="290" />
      <edge source="sub_402200" target="sub_401E60" id="291" />
      <edge source="sub_4026C0" target="sub_401F80" id="292" />
      <edge source="sub_4026C0" target="sub_402610" id="293" />
      <edge source="sub_4026C0" target="sub_4027D0" id="294" />
      <edge source="sub_4026C0" target="sub_4028C0" id="295" />
      <edge source="sub_4026C0" target="sub_4028F0" id="296" />
      <edge source="sub_4026C0" target="sub_402900" id="297" />
      <edge source="sub_4026C0" target="sub_4029F0" id="298" />
      <edge source="sub_4026C0" target="___CxxFrameHandler" id="299" />
      <edge source="sub_4026C0" target="CWnd::UpdateData(int)" id="300" />
      <edge source="sub_4028F0" target="sub_401F80" id="301" />
      <edge source="std::_String_base::_Xran(void)" target="sub_402200" id="302" />
      <edge source="std::_String_base::_Xran(void)" target="_CxxThrowException(x,x)" id="303" />
      <edge source="std::_String_base::_Xran(void)" target="__EH_prolog" id="304" />
      <edge source="std::_String_base::_Xran(void)" target="sub_40E0B8" id="305" />
      <edge source="sub_4028A0" target="sub_4027D0" id="306" />
      <edge source="sub_4028A0" target="j__free" id="307" />
      <edge source="AfxGetMainWnd(void)" target="AfxGetThread(void)" id="308" />
      <edge source="sub_40EE42" target="AfxGetMainWnd(void)" id="309" />
      <edge source="sub_40EE42" target="PostMessageA" id="310" />
      <edge source="sub_40EE76" target="AfxGetMainWnd(void)" id="311" />
      <edge source="sub_40EE76" target="PostMessageA" id="312" />
      <edge source="CWinApp::WinHelpInternal(ulong,uint)" target="AfxGetMainWnd(void)" id="313" />
      <edge source="CWinApp::WinHelpInternal(ulong,uint)" target="PostMessageA" id="314" />
      <edge source="AfxInternalPreTranslateMessage(tagMSG *)" target="AfxGetMainWnd(void)" id="315" />
      <edge source="AfxInternalPreTranslateMessage(tagMSG *)" target="CWinThread::DispatchThreadMessageEx(tagMSG *)" id="316" />
      <edge source="AfxInternalPreTranslateMessage(tagMSG *)" target="CWnd::FromHandle(HWND__ *)" id="317" />
      <edge source="AfxInternalPreTranslateMessage(tagMSG *)" target="CWnd::WalkPreTranslateTree(HWND__ *,tagMSG *)" id="318" />
      <edge source="AfxInternalPreTranslateMessage(tagMSG *)" target="CWnd::GetTopLevelParent(void)" id="319" />
      <edge source="AfxInternalPreTranslateMessage(tagMSG *)" target="AfxGetModuleThreadState(void)" id="320" />
      <edge source="CWinThread::ProcessMessageFilter(int,tagMSG *)" target="AfxGetMainWnd(void)" id="321" />
      <edge source="CWinThread::ProcessMessageFilter(int,tagMSG *)" target="IsEnterKey(tagMSG *)" id="322" />
      <edge source="CWinThread::ProcessMessageFilter(int,tagMSG *)" target="CFrameWnd::IsTracking(void)" id="323" />
      <edge source="CWinThread::ProcessMessageFilter(int,tagMSG *)" target="CWnd::FromHandle(HWND__ *)" id="324" />
      <edge source="CWinThread::ProcessMessageFilter(int,tagMSG *)" target="CWnd::GetTopLevelFrame(void)" id="325" />
      <edge source="CWinThread::ProcessMessageFilter(int,tagMSG *)" target="CWnd::IsWindowEnabled(void)" id="326" />
      <edge source="CWinThread::ProcessMessageFilter(int,tagMSG *)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="327" />
      <edge source="CWinThread::ProcessMessageFilter(int,tagMSG *)" target="SendMessageA" id="328" />
      <edge source="AfxHelpEnabled(void)" target="AfxGetMainWnd(void)" id="329" />
      <edge source="AfxHelpEnabled(void)" target="AfxGetModuleState(void)" id="330" />
      <edge source="CDialog::CreateIndirect(DLGTEMPLATE const *,CWnd *,void *,HINSTANCE__ *)" target="AfxGetMainWnd(void)" id="331" />
      <edge source="CDialog::CreateIndirect(DLGTEMPLATE const *,CWnd *,void *,HINSTANCE__ *)" target="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" id="332" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="AfxGetMainWnd(void)" id="333" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="xMonitorFromWindow(x,x)" id="334" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="xGetMonitorInfo(x,x)" id="335" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="CWnd::GetStyle(void)" id="336" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="CWnd::SetWindowPos(CWnd const *,int,int,int,int,uint)" id="337" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="MapWindowPoints" id="338" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="SendMessageA" id="339" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="GetWindowRect" id="340" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="GetClientRect" id="341" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="CopyRect" id="342" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="GetWindow" id="343" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="GetWindowLongA" id="344" />
      <edge source="CWnd::CenterWindow(CWnd *)" target="GetParent" id="345" />
      <edge source="CWnd::OnHelpInfo(tagHELPINFO *)" target="AfxGetMainWnd(void)" id="346" />
      <edge source="CWnd::OnHelpInfo(tagHELPINFO *)" target="CWnd::Default(void)" id="347" />
      <edge source="CWnd::OnHelpInfo(tagHELPINFO *)" target="CWnd::GetStyle(void)" id="348" />
      <edge source="CWnd::OnHelpInfo(tagHELPINFO *)" target="SendMessageA" id="349" />
      <edge source="CWnd::OnHelpInfo(tagHELPINFO *)" target="GetKeyState" id="350" />
      <edge source="CWnd::OnDisplayChange(uint,long)" target="AfxGetMainWnd(void)" id="351" />
      <edge source="CWnd::OnDisplayChange(uint,long)" target="CWnd::GetCurrentMessage(void)" id="352" />
      <edge source="CWnd::OnDisplayChange(uint,long)" target="CWnd::Default(void)" id="353" />
      <edge source="CWnd::OnDisplayChange(uint,long)" target="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" id="354" />
      <edge source="CWnd::OnDisplayChange(uint,long)" target="CWnd::GetStyle(void)" id="355" />
      <edge source="CWnd::OnDisplayChange(uint,long)" target="AUX_DATA::UpdateSysMetrics(void)" id="356" />
      <edge source="CWinApp::OnHelp(void)" target="AfxGetMainWnd(void)" id="357" />
      <edge source="CWinApp::OnHelp(void)" target="CWnd::OnHelp(void)" id="358" />
      <edge source="CWinApp::OnHelp(void)" target="AfxGetModuleState(void)" id="359" />
      <edge source="CWinApp::EnableModeless(int)" target="AfxGetMainWnd(void)" id="360" />
      <edge source="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" target="AfxGetMainWnd(void)" id="361" />
      <edge source="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" target="CCmdTarget::GetRoutingFrame_(void)" id="362" />
      <edge source="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" target="EnableWindow" id="363" />
      <edge source="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" target="IsWindowEnabled" id="364" />
      <edge source="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" target="GetLastActivePopup" id="365" />
      <edge source="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" target="GetWindowLongA" id="366" />
      <edge source="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" target="GetParent" id="367" />
      <edge source="std::allocator&lt;char&gt;::allocate(uint)" target="_free" id="368" />
      <edge source="std::allocator&lt;char&gt;::allocate(uint)" target="AfxInternalPreTranslateMessage(tagMSG *)" id="369" />
      <edge source="std::allocator&lt;char&gt;::allocate(uint)" target="AfxInternalIsIdleMessage(tagMSG *)" id="370" />
      <edge source="std::allocator&lt;char&gt;::allocate(uint)" target="j__free" id="371" />
      <edge source="CWnd::CreateObject(void)" target="std::allocator&lt;char&gt;::allocate(uint)" id="372" />
      <edge source="CWnd::CreateObject(void)" target="___CxxFrameHandler" id="373" />
      <edge source="CWnd::CreateObject(void)" target="__EH_prolog" id="374" />
      <edge source="CWnd::CreateObject(void)" target="operator new(uint)" id="375" />
      <edge source="CWnd::CreateObject(void)" target="CWnd::CWnd(void)" id="376" />
      <edge source="AfxThrowOleException(long)" target="std::allocator&lt;char&gt;::allocate(uint)" id="377" />
      <edge source="AfxThrowOleException(long)" target="COleException::COleException(void)" id="378" />
      <edge source="AfxThrowOleException(long)" target="___CxxFrameHandler" id="379" />
      <edge source="AfxThrowOleException(long)" target="_CxxThrowException(x,x)" id="380" />
      <edge source="AfxThrowOleException(long)" target="__EH_prolog" id="381" />
      <edge source="AfxThrowOleException(long)" target="operator new(uint)" id="382" />
      <edge source="sub_414F92" target="std::allocator&lt;char&gt;::allocate(uint)" id="383" />
      <edge source="sub_414F92" target="sub_403AEC" id="384" />
      <edge source="sub_414F92" target="___CxxFrameHandler" id="385" />
      <edge source="sub_414F92" target="_CxxThrowException(x,x)" id="386" />
      <edge source="sub_414F92" target="__EH_prolog" id="387" />
      <edge source="sub_414F92" target="operator new(uint)" id="388" />
      <edge source="CDialogTemplate::GetFont(DLGTEMPLATE const *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,ushort &amp;)" target="ATL::CSimpleStringT&lt;char,0&gt;::ReleaseBuffer(int)" id="389" />
      <edge source="CDialogTemplate::GetFont(DLGTEMPLATE const *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,ushort &amp;)" target="sub_4035DB" id="390" />
      <edge source="CDialogTemplate::GetFont(DLGTEMPLATE const *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,ushort &amp;)" target="HasFont(DLGTEMPLATE const *)" id="391" />
      <edge source="CDialogTemplate::GetFont(DLGTEMPLATE const *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,ushort &amp;)" target="CDialogTemplate::GetFontSizeField(DLGTEMPLATE const *)" id="392" />
      <edge source="CDialogTemplate::GetFont(DLGTEMPLATE const *,ATL::CStringT&lt;char,StrTraitMFC&lt;char,ATL::ChTraitsCRT&lt;char&gt;&gt;&gt; &amp;,ushort &amp;)" target="WideCharToMultiByte" id="393" />
      <edge source="sub_4154DB" target="ATL::CSimpleStringT&lt;char,0&gt;::ReleaseBuffer(int)" id="394" />
      <edge source="sub_4154DB" target="sub_4035DB" id="395" />
      <edge source="sub_4154DB" target="AfxSetWindowText(HWND__ *,char const *)" id="396" />
      <edge source="sub_4154DB" target="CDataExchange::PrepareEditCtrl(int)" id="397" />
      <edge source="sub_4154DB" target="GetWindowTextLengthA" id="398" />
      <edge source="sub_4154DB" target="GetWindowTextA" id="399" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *)" target="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *,int)" id="400" />
      <edge source="ATL::CSimpleStringT&lt;char,0&gt;::Append(char const *)" target="_strlen" id="401" />
      <edge source="AfxInternalIsIdleMessage(tagMSG *)" target="unknown_libname_2" id="402" />
      <edge source="AfxInternalIsIdleMessage(tagMSG *)" target="AfxGetThreadState(void)" id="403" />
      <edge source="unknown_libname_3" target="_memcmp" id="404" />
      <edge source="CCmdTarget::OnCmdMsg(uint,int,void *,AFX_CMDHANDLERINFO *)" target="unknown_libname_3" id="405" />
      <edge source="CCmdTarget::OnCmdMsg(uint,int,void *,AFX_CMDHANDLERINFO *)" target="_AfxDispatchCmdMsg(CCmdTarget *,uint,int,void (CCmdTarget::*)(void),void *,uint,AFX_CMDHANDLERINFO *)" id="406" />
      <edge source="CCmdTarget::OnCmdMsg(uint,int,void *,AFX_CMDHANDLERINFO *)" target="unknown_libname_18" id="407" />
      <edge source="CCmdTarget::OnCmdMsg(uint,int,void *,AFX_CMDHANDLERINFO *)" target="AfxGetModuleState(void)" id="408" />
      <edge source="sub_402B9E" target="ModifyMenuA" id="409" />
      <edge source="sub_40F8EE" target="sub_402B9E" id="410" />
      <edge source="sub_40F8EE" target="AfxSetWindowText(HWND__ *,char const *)" id="411" />
      <edge source="sub_40F8EE" target="GetMenuState" id="412" />
      <edge source="CObject::operator delete(void *,void *)" target="j__free" id="413" />
      <edge source="ConstructDestruct&lt;CWnd&gt;::Construct(CObject *)" target="CObject::operator delete(void *,void *)" id="414" />
      <edge source="ConstructDestruct&lt;CWnd&gt;::Construct(CObject *)" target="___CxxFrameHandler" id="415" />
      <edge source="ConstructDestruct&lt;CWnd&gt;::Construct(CObject *)" target="__EH_prolog" id="416" />
      <edge source="ConstructDestruct&lt;CWnd&gt;::Construct(CObject *)" target="CWnd::CWnd(void)" id="417" />
      <edge source="_IsPlatformNT" target="__security_check_cookie(x)" id="418" />
      <edge source="_IsPlatformNT" target="GetVersionExA" id="419" />
      <edge source="_InitMultipleMonitorStubs" target="_IsPlatformNT" id="420" />
      <edge source="_InitMultipleMonitorStubs" target="GetModuleHandleA" id="421" />
      <edge source="_InitMultipleMonitorStubs" target="GetProcAddress" id="422" />
      <edge source="xMonitorFromRect(x,x)" target="_InitMultipleMonitorStubs" id="423" />
      <edge source="xMonitorFromRect(x,x)" target="GetSystemMetrics" id="424" />
      <edge source="xMonitorFromWindow(x,x)" target="_InitMultipleMonitorStubs" id="425" />
      <edge source="xMonitorFromWindow(x,x)" target="xMonitorFromRect(x,x)" id="426" />
      <edge source="xMonitorFromWindow(x,x)" target="IsIconic" id="427" />
      <edge source="xMonitorFromWindow(x,x)" target="GetWindowRect" id="428" />
      <edge source="xMonitorFromWindow(x,x)" target="GetWindowPlacement" id="429" />
      <edge source="xGetMonitorInfo(x,x)" target="_InitMultipleMonitorStubs" id="430" />
      <edge source="xGetMonitorInfo(x,x)" target="lstrcpynA" id="431" />
      <edge source="xGetMonitorInfo(x,x)" target="GetSystemMetrics" id="432" />
      <edge source="xGetMonitorInfo(x,x)" target="SystemParametersInfoA" id="433" />
      <edge source="ATL::AtlIAccessibleInvokeHelper(IAccessible *,long,_GUID const &amp;,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)" target="VariantInit" id="434" />
      <edge source="ATL::AtlIAccessibleInvokeHelper(IAccessible *,long,_GUID const &amp;,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)" target="VariantClear" id="435" />
      <edge source="ATL::AtlIAccessibleInvokeHelper(IAccessible *,long,_GUID const &amp;,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)" target="VariantChangeType" id="436" />
      <edge source="sub_4106CF" target="ATL::AtlIAccessibleInvokeHelper(IAccessible *,long,_GUID const &amp;,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)" id="437" />
      <edge source="ATL::AtlIAccessibleGetIDsOfNamesHelper(_GUID const &amp;,wchar_t * *,uint,ulong,long *)" target="lstrcmpW" id="438" />
      <edge source="CWnd::XAccessible::GetIDsOfNames(_GUID const &amp;,wchar_t * *,uint,ulong,long *)" target="ATL::AtlIAccessibleGetIDsOfNamesHelper(_GUID const &amp;,wchar_t * *,uint,ulong,long *)" id="439" />
      <edge source="CMenu::GetSubMenu(int)" target="CMenu::FromHandle(HMENU__ *)" id="440" />
      <edge source="CMenu::GetSubMenu(int)" target="GetSubMenu" id="441" />
      <edge source="_AfxFindPopupMenuFromID(CMenu *,uint)" target="CMenu::GetSubMenu(int)" id="442" />
      <edge source="_AfxFindPopupMenuFromID(CMenu *,uint)" target="_AfxFindPopupMenuFromID(CMenu *,uint)" id="443" />
      <edge source="_AfxFindPopupMenuFromID(CMenu *,uint)" target="CMenu::FromHandlePermanent(HMENU__ *)" id="444" />
      <edge source="_AfxFindPopupMenuFromID(CMenu *,uint)" target="GetMenuItemID" id="445" />
      <edge source="_AfxFindPopupMenuFromID(CMenu *,uint)" target="GetMenuItemCount" id="446" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::~CMFCComObject&lt;ATL::CAccessibleProxy&gt;(void)" target="ATL::CAccessibleProxy::FinalRelease(void)" id="447" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::~CMFCComObject&lt;ATL::CAccessibleProxy&gt;(void)" target="AfxOleUnlockApp(void)" id="448" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface(_GUID const &amp;,void * *)" target="ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &amp;,void * *)" id="449" />
      <edge source="CWnd::GetOwner(void)" target="CWnd::FromHandle(HWND__ *)" id="450" />
      <edge source="CWnd::GetOwner(void)" target="GetParent" id="451" />
      <edge source="AfxGetParentOwner(HWND__ *)" target="CWnd::GetOwner(void)" id="452" />
      <edge source="AfxGetParentOwner(HWND__ *)" target="CWnd::FromHandlePermanent(HWND__ *)" id="453" />
      <edge source="AfxGetParentOwner(HWND__ *)" target="GetWindow" id="454" />
      <edge source="AfxGetParentOwner(HWND__ *)" target="GetWindowLongA" id="455" />
      <edge source="AfxGetParentOwner(HWND__ *)" target="GetParent" id="456" />
      <edge source="COleException::COleException(void)" target="CException::CException(void)" id="457" />
      <edge source="sub_403616" target="sub_403632" id="458" />
      <edge source="sub_403616" target="j__free" id="459" />
      <edge source="sub_403666" target="sub_403639" id="460" />
      <edge source="sub_403666" target="j__free" id="461" />
      <edge source="sub_4036A4" target="sub_403640" id="462" />
      <edge source="sub_4036A4" target="j__free" id="463" />
      <edge source="sub_4036E2" target="sub_403647" id="464" />
      <edge source="sub_4036E2" target="j__free" id="465" />
      <edge source="CSimpleException::CSimpleException(int)" target="CException::CException(int)" id="466" />
      <edge source="sub_403682" target="CSimpleException::CSimpleException(int)" id="467" />
      <edge source="sub_4036C0" target="CSimpleException::CSimpleException(int)" id="468" />
      <edge source="sub_4036FE" target="CSimpleException::CSimpleException(int)" id="469" />
      <edge source="sub_40376E" target="CSimpleException::CSimpleException(int)" id="470" />
      <edge source="sub_403797" target="CSimpleException::CSimpleException(int)" id="471" />
      <edge source="sub_403720" target="sub_41488E" id="472" />
      <edge source="sub_403720" target="DeleteObject" id="473" />
      <edge source="sub_40372B" target="sub_403720" id="474" />
      <edge source="sub_40372B" target="j__free" id="475" />
      <edge source="sub_403747" target="sub_413970" id="476" />
      <edge source="sub_403747" target="DestroyMenu" id="477" />
      <edge source="sub_403752" target="sub_403747" id="478" />
      <edge source="sub_403752" target="j__free" id="479" />
      <edge source="sub_4038E4" target="sub_403790" id="480" />
      <edge source="sub_4038E4" target="j__free" id="481" />
      <edge source="sub_403900" target="sub_4037B9" id="482" />
      <edge source="sub_403900" target="j__free" id="483" />
      <edge source="ATL::CComCriticalSection::CComCriticalSection(void)" target="_memset" id="484" />
      <edge source="sub_40E299" target="ATL::CComCriticalSection::CComCriticalSection(void)" id="485" />
      <edge source="ATL::CComCriticalSection::Init(void)" target="__SEH_prolog" id="486" />
      <edge source="ATL::CComCriticalSection::Init(void)" target="__SEH_epilog" id="487" />
      <edge source="ATL::CComCriticalSection::Init(void)" target="InitializeCriticalSection" id="488" />
      <edge source="sub_40E2C9" target="ATL::CComCriticalSection::Init(void)" id="489" />
      <edge source="sub_40E2C9" target="__security_check_cookie(x)" id="490" />
      <edge source="sub_40E2C9" target="_memset" id="491" />
      <edge source="sub_40E2C9" target="sub_40E299" id="492" />
      <edge source="sub_40E2C9" target="GetVersionExA" id="493" />
      <edge source="CHandleMap::~CHandleMap(void)" target="CFixedAllocNoSync::FreeAll(void)" id="494" />
      <edge source="CHandleMap::~CHandleMap(void)" target="___CxxFrameHandler" id="495" />
      <edge source="CHandleMap::~CHandleMap(void)" target="__EH_prolog" id="496" />
      <edge source="CHandleMap::~CHandleMap(void)" target="sub_40EBDB" id="497" />
      <edge source="CHandleMap::~CHandleMap(void)" target="CHandleMap::DeleteTemp(void)" id="498" />
      <edge source="CHandleMap::`scalar deleting destructor'(uint)" target="CHandleMap::~CHandleMap(void)" id="499" />
      <edge source="CHandleMap::`scalar deleting destructor'(uint)" target="j__free" id="500" />
      <edge source="CArchive::operator&lt;&lt;(ushort)" target="CArchive::Flush(void)" id="501" />
      <edge source="CArchive::operator&lt;&lt;(ushort)" target="sub_414F92" id="502" />
      <edge source="CArchive::WriteCount(ulong)" target="CArchive::operator&lt;&lt;(ushort)" id="503" />
      <edge source="CArchive::WriteCount(ulong)" target="unknown_libname_4" id="504" />
      <edge source="unknown_libname_4" target="CArchive::Flush(void)" id="505" />
      <edge source="unknown_libname_4" target="sub_414F92" id="506" />
      <edge source="unknown_libname_5" target="CArchive::FillBuffer(uint)" id="507" />
      <edge source="unknown_libname_5" target="sub_414F92" id="508" />
      <edge source="CArchive::ReadCount(void)" target="unknown_libname_5" id="509" />
      <edge source="CArchive::ReadCount(void)" target="unknown_libname_6" id="510" />
      <edge source="unknown_libname_6" target="CArchive::FillBuffer(uint)" id="511" />
      <edge source="unknown_libname_6" target="sub_414F92" id="512" />
      <edge source="sub_403B39" target="CArchiveException::~CArchiveException(void)" id="513" />
      <edge source="sub_403B39" target="j__free" id="514" />
      <edge source="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" target="CFixedAllocNoSync::CFixedAllocNoSync(uint,uint)" id="515" />
      <edge source="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" target="__EH_prolog" id="516" />
      <edge source="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" target="unknown_libname_14" id="517" />
      <edge source="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" target="sub_40EBAD" id="518" />
      <edge source="CFixedAllocNoSync::FreeAll(void)" target="CFixedAllocNoSync::FreeAll(void)" id="519" />
      <edge source="CFixedAllocNoSync::FreeAll(void)" target="CPlex::FreeDataChain(void)" id="520" />
      <edge source="CHandleMap::DeleteTemp(void)" target="CFixedAllocNoSync::FreeAll(void)" id="521" />
      <edge source="CHandleMap::DeleteTemp(void)" target="sub_40EA3D" id="522" />
      <edge source="CHandleMap::DeleteTemp(void)" target="CMapPtrToPtr::GetNextAssoc(__POSITION * &amp;,void * &amp;,void * &amp;)" id="523" />
      <edge source="CFixedAllocNoSync::Alloc(void)" target="unknown_libname_13" id="524" />
      <edge source="CHandleMap::FromHandle(void *)" target="CFixedAllocNoSync::Alloc(void)" id="525" />
      <edge source="CHandleMap::FromHandle(void *)" target="___CxxFrameHandler" id="526" />
      <edge source="CHandleMap::FromHandle(void *)" target="_CxxThrowException(x,x)" id="527" />
      <edge source="CHandleMap::FromHandle(void *)" target="__EH_prolog" id="528" />
      <edge source="CHandleMap::FromHandle(void *)" target="unknown_libname_8" id="529" />
      <edge source="CHandleMap::FromHandle(void *)" target="CMapPtrToPtr::GetValueAt(void *)" id="530" />
      <edge source="CHandleMap::FromHandle(void *)" target="sub_40EC31" id="531" />
      <edge source="CHandleMap::FromHandle(void *)" target="AfxSetNewHandler(int (*)(uint))" id="532" />
      <edge source="CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)" target="_JumpToContinuation(void *,EHRegistrationNode *)" id="533" />
      <edge source="CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)" target="_UnwindNestedFrames(EHRegistrationNode *,EHExceptionRecord *)" id="534" />
      <edge source="CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)" target="___FrameUnwindToState" id="535" />
      <edge source="CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)" target="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" id="536" />
      <edge source="CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)" target="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" id="537" />
      <edge source="___DestructExceptionObject" target="sub_403C1B" id="538" />
      <edge source="___DestructExceptionObject" target="__SEH_prolog" id="539" />
      <edge source="___DestructExceptionObject" target="__SEH_epilog" id="540" />
      <edge source="___DestructExceptionObject" target="terminate(void)" id="541" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="sub_403C1B" id="542" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="_memcpy" id="543" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="__SEH_prolog" id="544" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="__SEH_epilog" id="545" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="AdjustPointer(void *,PMD const &amp;)" id="546" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="terminate(void)" id="547" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="sub_406BF6" id="548" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="_ValidateRead(void const *,uint)" id="549" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="_ValidateWrite(void *,uint)" id="550" />
      <edge source="BuildCatchObject(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)" target="_ValidateExecute(int (*)(void))" id="551" />
      <edge source="_UnwindNestedFrames(EHRegistrationNode *,EHExceptionRecord *)" target="RtlUnwind" id="552" />
      <edge source="TranslatorGuardHandler(EHExceptionRecord *,TranslatorGuardRN *,void *,void *)" target="_UnwindNestedFrames(EHRegistrationNode *,EHExceptionRecord *)" id="553" />
      <edge source="TranslatorGuardHandler(EHExceptionRecord *,TranslatorGuardRN *,void *,void *)" target="_CallSETranslator(EHExceptionRecord *,EHRegistrationNode *,void *,void *,_s_FuncInfo const *,int,EHRegistrationNode *)" id="554" />
      <edge source="TranslatorGuardHandler(EHExceptionRecord *,TranslatorGuardRN *,void *,void *)" target="___InternalCxxFrameHandler" id="555" />
      <edge source="___CxxFrameHandler" target="___InternalCxxFrameHandler" id="556" />
      <edge source="CThreadLocal&lt;AFX_MODULE_THREAD_STATE&gt;::CreateObject(void)" target="___CxxFrameHandler" id="557" />
      <edge source="CThreadLocal&lt;AFX_MODULE_THREAD_STATE&gt;::CreateObject(void)" target="__EH_prolog" id="558" />
      <edge source="CThreadLocal&lt;AFX_MODULE_THREAD_STATE&gt;::CreateObject(void)" target="AFX_MODULE_THREAD_STATE::AFX_MODULE_THREAD_STATE(void)" id="559" />
      <edge source="CThreadLocal&lt;AFX_MODULE_THREAD_STATE&gt;::CreateObject(void)" target="unknown_libname_49" id="560" />
      <edge source="CThreadLocal&lt;AFX_MODULE_THREAD_STATE&gt;::CreateObject(void)" target="CNoTrackObject::operator delete(void *)" id="561" />
      <edge source="CWinThread::~CWinThread(void)" target="___CxxFrameHandler" id="562" />
      <edge source="CWinThread::~CWinThread(void)" target="__EH_prolog" id="563" />
      <edge source="CWinThread::~CWinThread(void)" target="CCmdTarget::~CCmdTarget(void)" id="564" />
      <edge source="CWinThread::~CWinThread(void)" target="AfxGetModuleThreadState(void)" id="565" />
      <edge source="CWinThread::~CWinThread(void)" target="CloseHandle" id="566" />
      <edge source="CThreadLocal&lt;_AFX_THREAD_STATE&gt;::CreateObject(void)" target="___CxxFrameHandler" id="567" />
      <edge source="CThreadLocal&lt;_AFX_THREAD_STATE&gt;::CreateObject(void)" target="__EH_prolog" id="568" />
      <edge source="CThreadLocal&lt;_AFX_THREAD_STATE&gt;::CreateObject(void)" target="_AFX_THREAD_STATE::_AFX_THREAD_STATE(void)" id="569" />
      <edge source="CThreadLocal&lt;_AFX_THREAD_STATE&gt;::CreateObject(void)" target="unknown_libname_49" id="570" />
      <edge source="CThreadLocal&lt;_AFX_THREAD_STATE&gt;::CreateObject(void)" target="CNoTrackObject::operator delete(void *)" id="571" />
      <edge source="sub_40F9C9" target="___CxxFrameHandler" id="572" />
      <edge source="sub_40F9C9" target="__EH_prolog" id="573" />
      <edge source="sub_40F9C9" target="CWnd::DestroyWindow(void)" id="574" />
      <edge source="sub_40F9C9" target="CWnd::~CWnd(void)" id="575" />
      <edge source="CDialog::OnPaint(void)" target="___CxxFrameHandler" id="576" />
      <edge source="CDialog::OnPaint(void)" target="__security_check_cookie(x)" id="577" />
      <edge source="CDialog::OnPaint(void)" target="__EH_prolog" id="578" />
      <edge source="CDialog::OnPaint(void)" target="CWnd::Default(void)" id="579" />
      <edge source="CDialog::OnPaint(void)" target="CWnd::PaintWindowlessControls(CDC *)" id="580" />
      <edge source="CDialog::OnPaint(void)" target="CPaintDC::CPaintDC(CWnd *)" id="581" />
      <edge source="CDialog::OnPaint(void)" target="CPaintDC::~CPaintDC(void)" id="582" />
      <edge source="CDialog::DoModal(void)" target="___CxxFrameHandler" id="583" />
      <edge source="CDialog::DoModal(void)" target="__EH_prolog" id="584" />
      <edge source="CDialog::DoModal(void)" target="CDialog::PreModal(void)" id="585" />
      <edge source="CDialog::DoModal(void)" target="CDialog::PostModal(void)" id="586" />
      <edge source="CDialog::DoModal(void)" target="CWnd::CreateDlgIndirect(DLGTEMPLATE const *,CWnd *,HINSTANCE__ *)" id="587" />
      <edge source="CDialog::DoModal(void)" target="CWnd::RunModalLoop(ulong)" id="588" />
      <edge source="CDialog::DoModal(void)" target="CWnd::FromHandle(HWND__ *)" id="589" />
      <edge source="CDialog::DoModal(void)" target="AfxUnhookWindowCreate(void)" id="590" />
      <edge source="CDialog::DoModal(void)" target="AfxHookWindowCreate(CWnd *)" id="591" />
      <edge source="CDialog::DoModal(void)" target="CWnd::GetStyle(void)" id="592" />
      <edge source="CDialog::DoModal(void)" target="CWnd::SetWindowPos(CWnd const *,int,int,int,int,uint)" id="593" />
      <edge source="CDialog::DoModal(void)" target="CException::Delete(void)" id="594" />
      <edge source="CDialog::DoModal(void)" target="AfxGetModuleState(void)" id="595" />
      <edge source="CDialog::DoModal(void)" target="FreeResource" id="596" />
      <edge source="CDialog::DoModal(void)" target="FindResourceA" id="597" />
      <edge source="CDialog::DoModal(void)" target="LoadResource" id="598" />
      <edge source="CDialog::DoModal(void)" target="LockResource" id="599" />
      <edge source="CDialog::DoModal(void)" target="EnableWindow" id="600" />
      <edge source="CDialog::DoModal(void)" target="GetDesktopWindow" id="601" />
      <edge source="CDialog::DoModal(void)" target="SetActiveWindow" id="602" />
      <edge source="CDialog::DoModal(void)" target="IsWindowEnabled" id="603" />
      <edge source="CDialog::DoModal(void)" target="GetActiveWindow" id="604" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="___CxxFrameHandler" id="605" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="_CxxThrowException(x,x)" id="606" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="__EH_prolog" id="607" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="AfxGetModuleState(void)" id="608" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="AfxLockGlobals(int)" id="609" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="AfxUnlockGlobals(int)" id="610" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="lstrcatA" id="611" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="lstrlenA" id="612" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="GetClassInfoA" id="613" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="RegisterClassA" id="614" />
      <edge source="AfxRegisterClass(tagWNDCLASSA *)" target="UnregisterClassA" id="615" />
      <edge source="CWnd::UpdateData(int)" target="___CxxFrameHandler" id="616" />
      <edge source="CWnd::UpdateData(int)" target="__EH_prolog" id="617" />
      <edge source="CWnd::UpdateData(int)" target="CException::Delete(void)" id="618" />
      <edge source="CWnd::UpdateData(int)" target="AfxGetThreadState(void)" id="619" />
      <edge source="afxMapHWND(int)" target="___CxxFrameHandler" id="620" />
      <edge source="afxMapHWND(int)" target="__EH_prolog" id="621" />
      <edge source="afxMapHWND(int)" target="AfxSetNewHandler(int (*)(uint))" id="622" />
      <edge source="afxMapHWND(int)" target="operator new(uint)" id="623" />
      <edge source="afxMapHWND(int)" target="j__free" id="624" />
      <edge source="afxMapHWND(int)" target="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" id="625" />
      <edge source="afxMapHWND(int)" target="AfxGetModuleThreadState(void)" id="626" />
      <edge source="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" target="___CxxFrameHandler" id="627" />
      <edge source="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" target="__EH_prolog" id="628" />
      <edge source="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" target="AfxProcessWndProcException(CException *,tagMSG const *)" id="629" />
      <edge source="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" target="_AfxPreInitDialog(CWnd *,tagRECT *,ulong *)" id="630" />
      <edge source="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" target="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" id="631" />
      <edge source="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" target="CException::Delete(void)" id="632" />
      <edge source="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="633" />
      <edge source="CWnd::~CWnd(void)" target="___CxxFrameHandler" id="634" />
      <edge source="CWnd::~CWnd(void)" target="__EH_prolog" id="635" />
      <edge source="CWnd::~CWnd(void)" target="CCmdTarget::~CCmdTarget(void)" id="636" />
      <edge source="CWnd::~CWnd(void)" target="CWnd::DestroyWindow(void)" id="637" />
      <edge source="CWnd::ReflectLastMsg(HWND__ *,long *)" target="___CxxFrameHandler" id="638" />
      <edge source="CWnd::ReflectLastMsg(HWND__ *,long *)" target="__EH_prolog" id="639" />
      <edge source="CWnd::ReflectLastMsg(HWND__ *,long *)" target="CMapPtrToPtr::GetValueAt(void *)" id="640" />
      <edge source="CWnd::ReflectLastMsg(HWND__ *,long *)" target="CWnd::CWnd(HWND__ *)" id="641" />
      <edge source="CWnd::ReflectLastMsg(HWND__ *,long *)" target="afxMapHWND(int)" id="642" />
      <edge source="CWnd::ReflectLastMsg(HWND__ *,long *)" target="CWnd::SendChildNotifyLastMsg(long *)" id="643" />
      <edge source="CWnd::ReflectLastMsg(HWND__ *,long *)" target="CWnd::~CWnd(void)" id="644" />
      <edge source="CWnd::ReflectLastMsg(HWND__ *,long *)" target="GetParent" id="645" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CreateInstance(CMFCComObject&lt;ATL::CAccessibleProxy&gt; * *)" target="___CxxFrameHandler" id="646" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CreateInstance(CMFCComObject&lt;ATL::CAccessibleProxy&gt; * *)" target="__EH_prolog" id="647" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CreateInstance(CMFCComObject&lt;ATL::CAccessibleProxy&gt; * *)" target="operator new(uint)" id="648" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CreateInstance(CMFCComObject&lt;ATL::CAccessibleProxy&gt; * *)" target="j__free" id="649" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CreateInstance(CMFCComObject&lt;ATL::CAccessibleProxy&gt; * *)" target="CException::Delete(void)" id="650" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CreateInstance(CMFCComObject&lt;ATL::CAccessibleProxy&gt; * *)" target="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CMFCComObject&lt;ATL::CAccessibleProxy&gt;(void *)" id="651" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="___CxxFrameHandler" id="652" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="__EH_prolog" id="653" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="AfxProcessWndProcException(CException *,tagMSG const *)" id="654" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="_AfxPreInitDialog(CWnd *,tagRECT *,ulong *)" id="655" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="CWnd::FromHandle(HWND__ *)" id="656" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" id="657" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="_AfxHandleActivate(CWnd *,uint,CWnd *)" id="658" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="_AfxHandleSetCursor(CWnd *,uint,uint)" id="659" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="CException::Delete(void)" id="660" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="GlobalFindAtomA" id="661" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="GlobalDeleteAtom" id="662" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="GetPropA" id="663" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="RemovePropA" id="664" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="CallWindowProcA" id="665" />
      <edge source="_AfxActivationWndProc(HWND__ *,uint,uint,long)" target="SetWindowLongA" id="666" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="___CxxFrameHandler" id="667" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="__EH_prolog" id="668" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="CMapPtrToPtr::GetValueAt(void *)" id="669" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="unknown_libname_18" id="670" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="CWnd::CWnd(void)" id="671" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="CWnd::FromHandle(HWND__ *)" id="672" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="CWnd::FromHandlePermanent(HWND__ *)" id="673" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="CWnd::~CWnd(void)" id="674" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="_AfxHandleActivate(CWnd *,uint,CWnd *)" id="675" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="_AfxHandleSetCursor(CWnd *,uint,uint)" id="676" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="CMenu::FromHandle(HMENU__ *)" id="677" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="CDC::CDC(void)" id="678" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="CDC::FromHandle(HDC__ *)" id="679" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="CDC::~CDC(void)" id="680" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="AfxLockGlobals(int)" id="681" />
      <edge source="CWnd::OnWndMsg(uint,uint,long,long *)" target="AfxUnlockGlobals(int)" id="682" />
      <edge source="CWnd::CreateAccessibleProxy(uint,long,long *)" target="___CxxFrameHandler" id="683" />
      <edge source="CWnd::CreateAccessibleProxy(uint,long,long *)" target="__EH_prolog" id="684" />
      <edge source="CWnd::CreateAccessibleProxy(uint,long,long *)" target="LresultFromObject" id="685" />
      <edge source="CWnd::CreateAccessibleProxy(uint,long,long *)" target="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CreateInstance(CMFCComObject&lt;ATL::CAccessibleProxy&gt; * *)" id="686" />
      <edge source="sub_41342B" target="___CxxFrameHandler" id="687" />
      <edge source="sub_41342B" target="__EH_prolog" id="688" />
      <edge source="sub_41342B" target="CCmdTarget::BeginWaitCursor(void)" id="689" />
      <edge source="sub_41342B" target="CCmdTarget::EndWaitCursor(void)" id="690" />
      <edge source="sub_41342B" target="CWnd::GetTopLevelParent(void)" id="691" />
      <edge source="sub_41342B" target="CWnd::PrepareForHelp(void)" id="692" />
      <edge source="sub_41342B" target="AfxMessageBox(uint,uint,uint)" id="693" />
      <edge source="sub_41342B" target="AfxGetModuleState(void)" id="694" />
      <edge source="sub_41342B" target="WinHelpA" id="695" />
      <edge source="AFX_MODULE_STATE::~AFX_MODULE_STATE(void)" target="___CxxFrameHandler" id="696" />
      <edge source="AFX_MODULE_STATE::~AFX_MODULE_STATE(void)" target="__EH_prolog" id="697" />
      <edge source="AFX_MODULE_STATE::~AFX_MODULE_STATE(void)" target="CThreadLocalObject::~CThreadLocalObject(void)" id="698" />
      <edge source="AFX_MODULE_STATE::~AFX_MODULE_STATE(void)" target="AFX_MODULE_STATE::~AFX_MODULE_STATE(void)" id="699" />
      <edge source="afxMapHMENU(int)" target="___CxxFrameHandler" id="700" />
      <edge source="afxMapHMENU(int)" target="__EH_prolog" id="701" />
      <edge source="afxMapHMENU(int)" target="AfxSetNewHandler(int (*)(uint))" id="702" />
      <edge source="afxMapHMENU(int)" target="operator new(uint)" id="703" />
      <edge source="afxMapHMENU(int)" target="j__free" id="704" />
      <edge source="afxMapHMENU(int)" target="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" id="705" />
      <edge source="afxMapHMENU(int)" target="AfxGetModuleThreadState(void)" id="706" />
      <edge source="afxMapHDC(int)" target="___CxxFrameHandler" id="707" />
      <edge source="afxMapHDC(int)" target="__EH_prolog" id="708" />
      <edge source="afxMapHDC(int)" target="AfxSetNewHandler(int (*)(uint))" id="709" />
      <edge source="afxMapHDC(int)" target="operator new(uint)" id="710" />
      <edge source="afxMapHDC(int)" target="j__free" id="711" />
      <edge source="afxMapHDC(int)" target="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" id="712" />
      <edge source="afxMapHDC(int)" target="AfxGetModuleThreadState(void)" id="713" />
      <edge source="CPaintDC::CPaintDC(CWnd *)" target="___CxxFrameHandler" id="714" />
      <edge source="CPaintDC::CPaintDC(CWnd *)" target="__EH_prolog" id="715" />
      <edge source="CPaintDC::CPaintDC(CWnd *)" target="unknown_libname_34" id="716" />
      <edge source="CPaintDC::CPaintDC(CWnd *)" target="CDC::Attach(HDC__ *)" id="717" />
      <edge source="CPaintDC::CPaintDC(CWnd *)" target="CDC::~CDC(void)" id="718" />
      <edge source="CPaintDC::CPaintDC(CWnd *)" target="BeginPaint" id="719" />
      <edge source="CProcessLocalObject::GetData(CNoTrackObject * (*)(void))" target="___CxxFrameHandler" id="720" />
      <edge source="CProcessLocalObject::GetData(CNoTrackObject * (*)(void))" target="_CxxThrowException(x,x)" id="721" />
      <edge source="CProcessLocalObject::GetData(CNoTrackObject * (*)(void))" target="__EH_prolog" id="722" />
      <edge source="CProcessLocalObject::GetData(CNoTrackObject * (*)(void))" target="AfxLockGlobals(int)" id="723" />
      <edge source="CProcessLocalObject::GetData(CNoTrackObject * (*)(void))" target="AfxUnlockGlobals(int)" id="724" />
      <edge source="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" target="___CxxFrameHandler" id="725" />
      <edge source="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" target="__EH_prolog" id="726" />
      <edge source="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" target="nullsub_2" id="727" />
      <edge source="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" target="CThreadSlotData::AllocSlot(void)" id="728" />
      <edge source="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" target="CThreadSlotData::GetThreadValue(int)" id="729" />
      <edge source="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" target="CThreadSlotData::CThreadSlotData(void)" id="730" />
      <edge source="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" target="CThreadSlotData::SetValue(int,void *)" id="731" />
      <edge source="sub_40E0B8" target="___CxxFrameHandler" id="732" />
      <edge source="sub_40E0B8" target="__EH_prolog" id="733" />
      <edge source="sub_40E0B8" target="std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt; const &amp;)" id="734" />
      <edge source="sub_40E0B8" target="sub_40E61E" id="735" />
      <edge source="sub_40E0B8" target="sub_40E679" id="736" />
      <edge source="_CallSETranslator(EHExceptionRecord *,EHRegistrationNode *,void *,void *,_s_FuncInfo const *,int,EHRegistrationNode *)" target="__getptd" id="737" />
      <edge source="FindHandlerForForeignException(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,int,int,EHRegistrationNode *)" target="_CallSETranslator(EHExceptionRecord *,EHRegistrationNode *,void *,void *,_s_FuncInfo const *,int,EHRegistrationNode *)" id="738" />
      <edge source="FindHandlerForForeignException(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,int,int,EHRegistrationNode *)" target="_GetRangeOfTrysToCheck(_s_FuncInfo const *,int,int,uint *,uint *)" id="739" />
      <edge source="FindHandlerForForeignException(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,int,int,EHRegistrationNode *)" target="CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)" id="740" />
      <edge source="FindHandlerForForeignException(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,int,int,EHRegistrationNode *)" target="__getptd" id="741" />
      <edge source="_GetRangeOfTrysToCheck(_s_FuncInfo const *,int,int,uint *,uint *)" target="sub_406BF6" id="742" />
      <edge source="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" target="_GetRangeOfTrysToCheck(_s_FuncInfo const *,int,int,uint *,uint *)" id="743" />
      <edge source="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" target="TypeMatch(_s_HandlerType const *,_s_CatchableType const *,_s_ThrowInfo const *)" id="744" />
      <edge source="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" target="___DestructExceptionObject" id="745" />
      <edge source="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" target="CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)" id="746" />
      <edge source="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" target="FindHandlerForForeignException(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,int,int,EHRegistrationNode *)" id="747" />
      <edge source="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" target="__getptd" id="748" />
      <edge source="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" target="terminate(void)" id="749" />
      <edge source="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" target="sub_406BF6" id="750" />
      <edge source="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" target="_ValidateRead(void const *,uint)" id="751" />
      <edge source="_CreateFrameInfo(FrameInfo *,void *)" target="__getptd" id="752" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="_CreateFrameInfo(FrameInfo *,void *)" id="753" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="IsExceptionObjectToBeDestroyed(void *)" id="754" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="_FindAndUnlinkFrame(FrameInfo *)" id="755" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="_CallCatchBlock2(EHRegistrationNode *,_s_FuncInfo const *,void *,int,ulong)" id="756" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="__abnormal_termination" id="757" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="__SEH_prolog" id="758" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="__SEH_epilog" id="759" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="___FrameUnwindToState" id="760" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="___DestructExceptionObject" id="761" />
      <edge source="CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)" target="__getptd" id="762" />
      <edge source="IsExceptionObjectToBeDestroyed(void *)" target="__getptd" id="763" />
      <edge source="_FindAndUnlinkFrame(FrameInfo *)" target="__getptd" id="764" />
      <edge source="_FindAndUnlinkFrame(FrameInfo *)" target="sub_406BF6" id="765" />
      <edge source="_CallCatchBlock2(EHRegistrationNode *,_s_FuncInfo const *,void *,int,ulong)" target="_CallSettingFrame(x,x,x)" id="766" />
      <edge source="__global_unwind2" target="RtlUnwind" id="767" />
      <edge source="__except_handler3" target="__global_unwind2" id="768" />
      <edge source="__except_handler3" target="__local_unwind2" id="769" />
      <edge source="__except_handler3" target="__NLG_Notify" id="770" />
      <edge source="__except_handler3" target="__ValidateEH3RN" id="771" />
      <edge source="__local_unwind2" target="__NLG_Notify" id="772" />
      <edge source="_seh_longjmp_unwind(x)" target="__local_unwind2" id="773" />
      <edge source="__mtinitlocknum" target="__local_unwind2" id="774" />
      <edge source="__mtinitlocknum" target="_malloc" id="775" />
      <edge source="__mtinitlocknum" target="_free" id="776" />
      <edge source="__mtinitlocknum" target="__SEH_prolog" id="777" />
      <edge source="__mtinitlocknum" target="__SEH_epilog" id="778" />
      <edge source="__mtinitlocknum" target="__errno" id="779" />
      <edge source="__mtinitlocknum" target="__unlock" id="780" />
      <edge source="__mtinitlocknum" target="__lock" id="781" />
      <edge source="__mtinitlocknum" target="___crtInitCritSecAndSpinCount" id="782" />
      <edge source="__lock_fhandle" target="__local_unwind2" id="783" />
      <edge source="__lock_fhandle" target="__SEH_prolog" id="784" />
      <edge source="__lock_fhandle" target="__SEH_epilog" id="785" />
      <edge source="__lock_fhandle" target="__unlock" id="786" />
      <edge source="__lock_fhandle" target="__lock" id="787" />
      <edge source="__lock_fhandle" target="___crtInitCritSecAndSpinCount" id="788" />
      <edge source="__lock_fhandle" target="EnterCriticalSection" id="789" />
      <edge source="_CallSettingFrame(x,x,x)" target="__NLG_Notify1" id="790" />
      <edge source="__onexit_lk" target="_realloc" id="791" />
      <edge source="__onexit_lk" target="__msize" id="792" />
      <edge source="__onexit" target="__onexit_lk" id="793" />
      <edge source="__onexit" target="__lockexit" id="794" />
      <edge source="__onexit" target="__unlockexit" id="795" />
      <edge source="__onexit" target="__SEH_prolog" id="796" />
      <edge source="__onexit" target="__SEH_epilog" id="797" />
      <edge source="_atexit" target="__onexit" id="798" />
      <edge source="__cinit" target="_atexit" id="799" />
      <edge source="__cinit" target="__fpmath" id="800" />
      <edge source="`dynamic initializer for 'CWnd const CWnd::wndTop''(void)" target="_atexit" id="801" />
      <edge source="`dynamic initializer for 'CWnd const CWnd::wndTop''(void)" target="CWnd::CWnd(HWND__ *)" id="802" />
      <edge source="`dynamic initializer for 'CWnd const CWnd::wndTopMost''(void)" target="_atexit" id="803" />
      <edge source="`dynamic initializer for 'CWnd const CWnd::wndTopMost''(void)" target="CWnd::CWnd(HWND__ *)" id="804" />
      <edge source="`dynamic initializer for 'CWnd const CWnd::wndNoTopMost''(void)" target="_atexit" id="805" />
      <edge source="`dynamic initializer for 'CWnd const CWnd::wndNoTopMost''(void)" target="CWnd::CWnd(HWND__ *)" id="806" />
      <edge source="___sbh_free_block" target="_memcpy" id="807" />
      <edge source="___sbh_free_block" target="VirtualFree" id="808" />
      <edge source="___sbh_free_block" target="HeapFree" id="809" />
      <edge source="__shift" target="_memcpy" id="810" />
      <edge source="__shift" target="_strlen" id="811" />
      <edge source="__fptostr" target="_memcpy" id="812" />
      <edge source="__fptostr" target="_strlen" id="813" />
      <edge source="CDialogTemplate::SetFont(char const *,ushort)" target="_memcpy" id="814" />
      <edge source="CDialogTemplate::SetFont(char const *,ushort)" target="__security_check_cookie(x)" id="815" />
      <edge source="CDialogTemplate::SetFont(char const *,ushort)" target="_wcslen" id="816" />
      <edge source="CDialogTemplate::SetFont(char const *,ushort)" target="HasFont(DLGTEMPLATE const *)" id="817" />
      <edge source="CDialogTemplate::SetFont(char const *,ushort)" target="CDialogTemplate::GetFontSizeField(DLGTEMPLATE const *)" id="818" />
      <edge source="CDialogTemplate::SetFont(char const *,ushort)" target="GlobalUnlock" id="819" />
      <edge source="CDialogTemplate::SetFont(char const *,ushort)" target="GlobalLock" id="820" />
      <edge source="CDialogTemplate::SetFont(char const *,ushort)" target="lstrlenA" id="821" />
      <edge source="CDialogTemplate::SetFont(char const *,ushort)" target="MultiByteToWideChar" id="822" />
      <edge source="CArchive::FillBuffer(uint)" target="_memcpy" id="823" />
      <edge source="CArchive::FillBuffer(uint)" target="sub_414F92" id="824" />
      <edge source="_CxxThrowException(x,x)" target="RaiseException" id="825" />
      <edge source="unknown_libname_8" target="_CxxThrowException(x,x)" id="826" />
      <edge source="unknown_libname_9" target="_CxxThrowException(x,x)" id="827" />
      <edge source="unknown_libname_10" target="_CxxThrowException(x,x)" id="828" />
      <edge source="unknown_libname_34" target="_CxxThrowException(x,x)" id="829" />
      <edge source="unknown_libname_35" target="_CxxThrowException(x,x)" id="830" />
      <edge source="sub_404527" target="__SEH_prolog" id="831" />
      <edge source="sub_404527" target="__SEH_epilog" id="832" />
      <edge source="sub_404527" target="__lock_file2" id="833" />
      <edge source="sub_404527" target="__unlock_file2" id="834" />
      <edge source="sub_404527" target="__stbuf" id="835" />
      <edge source="sub_404527" target="__ftbuf" id="836" />
      <edge source="sub_404527" target="__output" id="837" />
      <edge source="__heap_alloc" target="__SEH_prolog" id="838" />
      <edge source="__heap_alloc" target="__SEH_epilog" id="839" />
      <edge source="__heap_alloc" target="__unlock" id="840" />
      <edge source="__heap_alloc" target="__lock" id="841" />
      <edge source="__heap_alloc" target="___sbh_alloc_block" id="842" />
      <edge source="__heap_alloc" target="HeapAlloc" id="843" />
      <edge source="__nh_malloc" target="__heap_alloc" id="844" />
      <edge source="__nh_malloc" target="__callnewh" id="845" />
      <edge source="_malloc" target="__nh_malloc" id="846" />
      <edge source="__strdup" target="_malloc" id="847" />
      <edge source="__strdup" target="_strlen" id="848" />
      <edge source="__strdup" target="_strcpy" id="849" />
      <edge source="_realloc" target="_malloc" id="850" />
      <edge source="_realloc" target="_free" id="851" />
      <edge source="_realloc" target="_memcpy_0" id="852" />
      <edge source="_realloc" target="__SEH_prolog" id="853" />
      <edge source="_realloc" target="__SEH_epilog" id="854" />
      <edge source="_realloc" target="__unlock" id="855" />
      <edge source="_realloc" target="__lock" id="856" />
      <edge source="_realloc" target="___sbh_find_block" id="857" />
      <edge source="_realloc" target="___sbh_free_block" id="858" />
      <edge source="_realloc" target="___sbh_resize_block" id="859" />
      <edge source="_realloc" target="___sbh_alloc_block" id="860" />
      <edge source="_realloc" target="__callnewh" id="861" />
      <edge source="_realloc" target="HeapReAlloc" id="862" />
      <edge source="_realloc" target="HeapAlloc" id="863" />
      <edge source="__setmbcp" target="_malloc" id="864" />
      <edge source="__setmbcp" target="_free" id="865" />
      <edge source="__setmbcp" target="__setmbcp_lk" id="866" />
      <edge source="__setmbcp" target="__SEH_prolog" id="867" />
      <edge source="__setmbcp" target="__SEH_epilog" id="868" />
      <edge source="__setmbcp" target="__unlock" id="869" />
      <edge source="__setmbcp" target="__lock" id="870" />
      <edge source="__setmbcp" target="GetOEMCP" id="871" />
      <edge source="__setmbcp" target="GetACP" id="872" />
      <edge source="__stbuf" target="_malloc" id="873" />
      <edge source="__stbuf" target="__isatty" id="874" />
      <edge source="__output" target="_malloc" id="875" />
      <edge source="__output" target="_free" id="876" />
      <edge source="__output" target="__security_check_cookie(x)" id="877" />
      <edge source="__output" target="_strlen" id="878" />
      <edge source="__output" target="_write_char" id="879" />
      <edge source="__output" target="_write_multi_char" id="880" />
      <edge source="__output" target="_write_string" id="881" />
      <edge source="__output" target="_wctomb" id="882" />
      <edge source="__output" target="__aulldvrm" id="883" />
      <edge source="__output" target="__fptrap" id="884" />
      <edge source="__setenvp" target="_malloc" id="885" />
      <edge source="__setenvp" target="_free" id="886" />
      <edge source="__setenvp" target="_strlen" id="887" />
      <edge source="__setenvp" target="___initmbctable" id="888" />
      <edge source="__setenvp" target="_strcpy" id="889" />
      <edge source="__setargv" target="_malloc" id="890" />
      <edge source="__setargv" target="___initmbctable" id="891" />
      <edge source="__setargv" target="_parse_cmdline" id="892" />
      <edge source="__setargv" target="GetModuleFileNameA" id="893" />
      <edge source="___crtGetEnvironmentStringsA" target="_malloc" id="894" />
      <edge source="___crtGetEnvironmentStringsA" target="_free" id="895" />
      <edge source="___crtGetEnvironmentStringsA" target="_memcpy_0" id="896" />
      <edge source="___crtGetEnvironmentStringsA" target="FreeEnvironmentStringsA" id="897" />
      <edge source="___crtGetEnvironmentStringsA" target="GetEnvironmentStrings" id="898" />
      <edge source="___crtGetEnvironmentStringsA" target="FreeEnvironmentStringsW" id="899" />
      <edge source="___crtGetEnvironmentStringsA" target="GetEnvironmentStringsW" id="900" />
      <edge source="___crtGetEnvironmentStringsA" target="GetLastError" id="901" />
      <edge source="___crtGetEnvironmentStringsA" target="WideCharToMultiByte" id="902" />
      <edge source="__ioinit" target="_malloc" id="903" />
      <edge source="__ioinit" target="___crtInitCritSecAndSpinCount" id="904" />
      <edge source="__ioinit" target="GetStartupInfoA" id="905" />
      <edge source="__ioinit" target="GetStdHandle" id="906" />
      <edge source="__ioinit" target="GetFileType" id="907" />
      <edge source="__ioinit" target="SetHandleCount" id="908" />
      <edge source="__input" target="_malloc" id="909" />
      <edge source="__input" target="_free" id="910" />
      <edge source="__input" target="__resetstkoflw" id="911" />
      <edge source="__input" target="__alloca_probe" id="912" />
      <edge source="__input" target="__security_check_cookie(x)" id="913" />
      <edge source="__input" target="_memset" id="914" />
      <edge source="__input" target="__SEH_prolog" id="915" />
      <edge source="__input" target="__SEH_epilog" id="916" />
      <edge source="__input" target="__allmul" id="917" />
      <edge source="__input" target="__inc" id="918" />
      <edge source="__input" target="_isdigit" id="919" />
      <edge source="__input" target="_isxdigit" id="920" />
      <edge source="__input" target="_isspace" id="921" />
      <edge source="__input" target="_ungetc" id="922" />
      <edge source="__input" target="_mbtowc" id="923" />
      <edge source="__input" target="__fptrap" id="924" />
      <edge source="___crtLCMapStringA" target="_malloc" id="925" />
      <edge source="___crtLCMapStringA" target="_free" id="926" />
      <edge source="___crtLCMapStringA" target="__resetstkoflw" id="927" />
      <edge source="___crtLCMapStringA" target="__alloca_probe" id="928" />
      <edge source="___crtLCMapStringA" target="_memset" id="929" />
      <edge source="___crtLCMapStringA" target="__SEH_prolog" id="930" />
      <edge source="___crtLCMapStringA" target="__SEH_epilog" id="931" />
      <edge source="___crtLCMapStringA" target="___ansicp" id="932" />
      <edge source="___crtLCMapStringA" target="___convertcp" id="933" />
      <edge source="___crtLCMapStringA" target="LCMapStringA" id="934" />
      <edge source="___crtLCMapStringA" target="LCMapStringW" id="935" />
      <edge source="___crtLCMapStringA" target="GetLastError" id="936" />
      <edge source="___crtLCMapStringA" target="MultiByteToWideChar" id="937" />
      <edge source="___crtLCMapStringA" target="WideCharToMultiByte" id="938" />
      <edge source="__getbuf" target="_malloc" id="939" />
      <edge source="exception::exception(exception const &amp;)" target="_malloc" id="940" />
      <edge source="exception::exception(exception const &amp;)" target="_strlen" id="941" />
      <edge source="exception::exception(exception const &amp;)" target="_strcpy" id="942" />
      <edge source="operator new(uint)" target="_malloc" id="943" />
      <edge source="operator new(uint)" target="j_unknown_libname_8" id="944" />
      <edge source="CAfxStringMgr::Allocate(int,int)" target="_malloc" id="945" />
      <edge source="AfxUnlockTempMaps(int)" target="_malloc" id="946" />
      <edge source="AfxUnlockTempMaps(int)" target="_free" id="947" />
      <edge source="AfxUnlockTempMaps(int)" target="__msize" id="948" />
      <edge source="AfxUnlockTempMaps(int)" target="AfxGetThread(void)" id="949" />
      <edge source="AfxUnlockTempMaps(int)" target="CHandleMap::DeleteTemp(void)" id="950" />
      <edge source="AfxUnlockTempMaps(int)" target="AfxGetModuleState(void)" id="951" />
      <edge source="AfxUnlockTempMaps(int)" target="AfxGetModuleThreadState(void)" id="952" />
      <edge source="AfxUnlockTempMaps(int)" target="CThreadLocalObject::GetDataNA(void)" id="953" />
      <edge source="_free" target="__SEH_prolog" id="954" />
      <edge source="_free" target="__SEH_epilog" id="955" />
      <edge source="_free" target="__unlock" id="956" />
      <edge source="_free" target="__lock" id="957" />
      <edge source="_free" target="___sbh_find_block" id="958" />
      <edge source="_free" target="___sbh_free_block" id="959" />
      <edge source="_free" target="HeapFree" id="960" />
      <edge source="type_info::~type_info(void)" target="_free" id="961" />
      <edge source="type_info::~type_info(void)" target="__SEH_prolog" id="962" />
      <edge source="type_info::~type_info(void)" target="__SEH_epilog" id="963" />
      <edge source="type_info::~type_info(void)" target="__unlock" id="964" />
      <edge source="type_info::~type_info(void)" target="__lock" id="965" />
      <edge source="___updatetmbcinfo" target="_free" id="966" />
      <edge source="___updatetmbcinfo" target="__SEH_prolog" id="967" />
      <edge source="___updatetmbcinfo" target="__SEH_epilog" id="968" />
      <edge source="___updatetmbcinfo" target="__getptd" id="969" />
      <edge source="___updatetmbcinfo" target="__unlock" id="970" />
      <edge source="___updatetmbcinfo" target="__lock" id="971" />
      <edge source="_freefls(x)" target="_free" id="972" />
      <edge source="_freefls(x)" target="__SEH_prolog" id="973" />
      <edge source="_freefls(x)" target="__SEH_epilog" id="974" />
      <edge source="_freefls(x)" target="__unlock" id="975" />
      <edge source="_freefls(x)" target="__lock" id="976" />
      <edge source="_freefls(x)" target="___freetlocinfo" id="977" />
      <edge source="__mtterm" target="_free" id="978" />
      <edge source="__mtterm" target="DeleteCriticalSection" id="979" />
      <edge source="___crtGetStringTypeA" target="_free" id="980" />
      <edge source="___crtGetStringTypeA" target="__resetstkoflw" id="981" />
      <edge source="___crtGetStringTypeA" target="__alloca_probe" id="982" />
      <edge source="___crtGetStringTypeA" target="_memset" id="983" />
      <edge source="___crtGetStringTypeA" target="__SEH_prolog" id="984" />
      <edge source="___crtGetStringTypeA" target="__SEH_epilog" id="985" />
      <edge source="___crtGetStringTypeA" target="_calloc" id="986" />
      <edge source="___crtGetStringTypeA" target="___ansicp" id="987" />
      <edge source="___crtGetStringTypeA" target="___convertcp" id="988" />
      <edge source="___crtGetStringTypeA" target="GetStringTypeA" id="989" />
      <edge source="___crtGetStringTypeA" target="GetStringTypeW" id="990" />
      <edge source="___crtGetStringTypeA" target="GetLastError" id="991" />
      <edge source="___crtGetStringTypeA" target="MultiByteToWideChar" id="992" />
      <edge source="___freetlocinfo" target="_free" id="993" />
      <edge source="___freetlocinfo" target="__free_lc_time" id="994" />
      <edge source="___freetlocinfo" target="___free_lconv_num" id="995" />
      <edge source="___freetlocinfo" target="___free_lconv_mon" id="996" />
      <edge source="__fcloseall" target="_free" id="997" />
      <edge source="__fcloseall" target="__SEH_prolog" id="998" />
      <edge source="__fcloseall" target="__SEH_epilog" id="999" />
      <edge source="__fcloseall" target="__unlock" id="1000" />
      <edge source="__fcloseall" target="__lock" id="1001" />
      <edge source="__fcloseall" target="_fclose" id="1002" />
      <edge source="__fcloseall" target="DeleteCriticalSection" id="1003" />
      <edge source="___convertcp" target="_free" id="1004" />
      <edge source="___convertcp" target="__resetstkoflw" id="1005" />
      <edge source="___convertcp" target="__alloca_probe" id="1006" />
      <edge source="___convertcp" target="__security_check_cookie(x)" id="1007" />
      <edge source="___convertcp" target="_strlen" id="1008" />
      <edge source="___convertcp" target="_memset" id="1009" />
      <edge source="___convertcp" target="__SEH_prolog" id="1010" />
      <edge source="___convertcp" target="__SEH_epilog" id="1011" />
      <edge source="___convertcp" target="_calloc" id="1012" />
      <edge source="___convertcp" target="GetCPInfo" id="1013" />
      <edge source="___convertcp" target="MultiByteToWideChar" id="1014" />
      <edge source="___convertcp" target="WideCharToMultiByte" id="1015" />
      <edge source="__free_lc_time" target="_free" id="1016" />
      <edge source="___free_lconv_num" target="_free" id="1017" />
      <edge source="___free_lconv_mon" target="_free" id="1018" />
      <edge source="__fclose_lk" target="_free" id="1019" />
      <edge source="__fclose_lk" target="__flush" id="1020" />
      <edge source="__fclose_lk" target="__close" id="1021" />
      <edge source="__fclose_lk" target="__freebuf" id="1022" />
      <edge source="__freebuf" target="_free" id="1023" />
      <edge source="sub_4183CA" target="_free" id="1024" />
      <edge source="sub_4183CA" target="DeleteCriticalSection" id="1025" />
      <edge source="sub_40E679" target="_free" id="1026" />
      <edge source="j__free" target="_free" id="1027" />
      <edge source="AfxCriticalNewHandler(uint)" target="_free" id="1028" />
      <edge source="AfxCriticalNewHandler(uint)" target="__expand" id="1029" />
      <edge source="AfxCriticalNewHandler(uint)" target="__msize" id="1030" />
      <edge source="AfxCriticalNewHandler(uint)" target="unknown_libname_8" id="1031" />
      <edge source="AfxCriticalNewHandler(uint)" target="AfxGetThreadState(void)" id="1032" />
      <edge source="_AFX_THREAD_STATE::~_AFX_THREAD_STATE(void)" target="_free" id="1033" />
      <edge source="_AFX_THREAD_STATE::~_AFX_THREAD_STATE(void)" target="UnhookWindowsHookEx" id="1034" />
      <edge source="__resetstkoflw" target="__alloca_probe" id="1035" />
      <edge source="__resetstkoflw" target="GetSystemInfo" id="1036" />
      <edge source="__resetstkoflw" target="VirtualQuery" id="1037" />
      <edge source="__resetstkoflw" target="VirtualAlloc" id="1038" />
      <edge source="__resetstkoflw" target="VirtualProtect" id="1039" />
      <edge source="start" target="__alloca_probe" id="1040" />
      <edge source="start" target="__amsg_exit" id="1041" />
      <edge source="start" target="_fast_error_exit" id="1042" />
      <edge source="start" target="__cinit" id="1043" />
      <edge source="start" target="_exit" id="1044" />
      <edge source="start" target="__exit" id="1045" />
      <edge source="start" target="__cexit" id="1046" />
      <edge source="start" target="__c_exit" id="1047" />
      <edge source="start" target="__SEH_prolog" id="1048" />
      <edge source="start" target="__SEH_epilog" id="1049" />
      <edge source="start" target="__mtinit" id="1050" />
      <edge source="start" target="__heap_init" id="1051" />
      <edge source="start" target="__XcptFilter" id="1052" />
      <edge source="start" target="__wincmdln" id="1053" />
      <edge source="start" target="__setenvp" id="1054" />
      <edge source="start" target="__setargv" id="1055" />
      <edge source="start" target="___crtGetEnvironmentStringsA" id="1056" />
      <edge source="start" target="__ioinit" id="1057" />
      <edge source="start" target="sub_409041" id="1058" />
      <edge source="start" target="WinMain(x,x,x,x)" id="1059" />
      <edge source="start" target="GetStartupInfoA" id="1060" />
      <edge source="start" target="GetCommandLineA" id="1061" />
      <edge source="start" target="GetModuleHandleA" id="1062" />
      <edge source="start" target="GetVersionExA" id="1063" />
      <edge source="__NMSG_WRITE" target="__alloca_probe" id="1064" />
      <edge source="__NMSG_WRITE" target="__security_check_cookie(x)" id="1065" />
      <edge source="__NMSG_WRITE" target="_strlen" id="1066" />
      <edge source="__NMSG_WRITE" target="_strcpy" id="1067" />
      <edge source="__NMSG_WRITE" target="_strcat" id="1068" />
      <edge source="__NMSG_WRITE" target="___crtMessageBoxA" id="1069" />
      <edge source="__NMSG_WRITE" target="_strncpy" id="1070" />
      <edge source="__NMSG_WRITE" target="GetStdHandle" id="1071" />
      <edge source="__NMSG_WRITE" target="WriteFile" id="1072" />
      <edge source="__NMSG_WRITE" target="GetModuleFileNameA" id="1073" />
      <edge source="___security_error_handler" target="__alloca_probe" id="1074" />
      <edge source="___security_error_handler" target="__exit" id="1075" />
      <edge source="___security_error_handler" target="_strlen" id="1076" />
      <edge source="___security_error_handler" target="__SEH_prolog" id="1077" />
      <edge source="___security_error_handler" target="_strcpy" id="1078" />
      <edge source="___security_error_handler" target="_strcat" id="1079" />
      <edge source="___security_error_handler" target="___crtMessageBoxA" id="1080" />
      <edge source="___security_error_handler" target="_strncpy" id="1081" />
      <edge source="___security_error_handler" target="GetModuleFileNameA" id="1082" />
      <edge source="__amsg_exit" target="__exit" id="1083" />
      <edge source="__amsg_exit" target="__NMSG_WRITE" id="1084" />
      <edge source="__amsg_exit" target="__FF_MSGBANNER" id="1085" />
      <edge source="__getptd" target="__amsg_exit" id="1086" />
      <edge source="__getptd" target="_calloc" id="1087" />
      <edge source="__getptd" target="SetLastError" id="1088" />
      <edge source="__getptd" target="GetCurrentThreadId" id="1089" />
      <edge source="__getptd" target="GetLastError" id="1090" />
      <edge source="__lock" target="__amsg_exit" id="1091" />
      <edge source="__lock" target="__mtinitlocknum" id="1092" />
      <edge source="__lock" target="EnterCriticalSection" id="1093" />
      <edge source="__fptrap" target="__amsg_exit" id="1094" />
      <edge source="_fast_error_exit" target="___crtExitProcess" id="1095" />
      <edge source="_fast_error_exit" target="__NMSG_WRITE" id="1096" />
      <edge source="_fast_error_exit" target="__FF_MSGBANNER" id="1097" />
      <edge source="__snprintf" target="__output" id="1098" />
      <edge source="__snprintf" target="__flsbuf" id="1099" />
      <edge source="_AfxLoadLangDLL(char const *,ulong)" target="__snprintf" id="1100" />
      <edge source="_AfxLoadLangDLL(char const *,ulong)" target="__security_check_cookie(x)" id="1101" />
      <edge source="_AfxLoadLangDLL(char const *,ulong)" target="lstrcpyA" id="1102" />
      <edge source="_AfxLoadLangDLL(char const *,ulong)" target="LoadLibraryA" id="1103" />
      <edge source="_AfxLoadLangDLL(char const *,ulong)" target="GetLocaleInfoA" id="1104" />
      <edge source="_report_failure" target="__SEH_prolog" id="1105" />
      <edge source="_report_failure" target="___security_error_handler" id="1106" />
      <edge source="_report_failure" target="ExitProcess" id="1107" />
      <edge source="__security_check_cookie(x)" target="_report_failure" id="1108" />
      <edge source="_setSBUpLow" target="__security_check_cookie(x)" id="1109" />
      <edge source="_setSBUpLow" target="___crtLCMapStringA" id="1110" />
      <edge source="_setSBUpLow" target="___crtGetStringTypeA" id="1111" />
      <edge source="_setSBUpLow" target="GetCPInfo" id="1112" />
      <edge source="__setmbcp_lk" target="__security_check_cookie(x)" id="1113" />
      <edge source="__setmbcp_lk" target="_CPtoLCID" id="1114" />
      <edge source="__setmbcp_lk" target="_setSBCS" id="1115" />
      <edge source="__setmbcp_lk" target="_setSBUpLow" id="1116" />
      <edge source="__setmbcp_lk" target="GetCPInfo" id="1117" />
      <edge source="__cftoe" target="__security_check_cookie(x)" id="1118" />
      <edge source="__cftoe" target="__cftoe2" id="1119" />
      <edge source="__cftoe" target="__fptostr" id="1120" />
      <edge source="__cftoe" target="__fltout2" id="1121" />
      <edge source="__cftof" target="__security_check_cookie(x)" id="1122" />
      <edge source="__cftof" target="__cftof2" id="1123" />
      <edge source="__cftof" target="__fptostr" id="1124" />
      <edge source="__cftof" target="__fltout2" id="1125" />
      <edge source="__cftog" target="__security_check_cookie(x)" id="1126" />
      <edge source="__cftog" target="__cftoe2" id="1127" />
      <edge source="__cftog" target="__cftof2" id="1128" />
      <edge source="__cftog" target="__fptostr" id="1129" />
      <edge source="__cftog" target="__fltout2" id="1130" />
      <edge source="__write_lk" target="__security_check_cookie(x)" id="1131" />
      <edge source="__write_lk" target="__errno" id="1132" />
      <edge source="__write_lk" target="___doserrno" id="1133" />
      <edge source="__write_lk" target="__dosmaperr" id="1134" />
      <edge source="__write_lk" target="__lseeki64_lk" id="1135" />
      <edge source="__write_lk" target="WriteFile" id="1136" />
      <edge source="__write_lk" target="GetLastError" id="1137" />
      <edge source="___ansicp" target="__security_check_cookie(x)" id="1138" />
      <edge source="___ansicp" target="_atol" id="1139" />
      <edge source="___ansicp" target="GetLocaleInfoA" id="1140" />
      <edge source="sub_40C827" target="__security_check_cookie(x)" id="1141" />
      <edge source="sub_40C827" target="sub_40C7FB" id="1142" />
      <edge source="sub_40C827" target="___strgtold12" id="1143" />
      <edge source="sub_40C864" target="__security_check_cookie(x)" id="1144" />
      <edge source="sub_40C864" target="sub_40C811" id="1145" />
      <edge source="sub_40C864" target="___strgtold12" id="1146" />
      <edge source="__fltout2" target="__security_check_cookie(x)" id="1147" />
      <edge source="__fltout2" target="_strcpy" id="1148" />
      <edge source="__fltout2" target="___dtold" id="1149" />
      <edge source="__fltout2" target="_$I10_OUTPUT" id="1150" />
      <edge source="___mtold12" target="__security_check_cookie(x)" id="1151" />
      <edge source="___mtold12" target="___add_12" id="1152" />
      <edge source="___mtold12" target="___shl_12" id="1153" />
      <edge source="___strgtold12" target="__security_check_cookie(x)" id="1154" />
      <edge source="___strgtold12" target="_isdigit" id="1155" />
      <edge source="___strgtold12" target="___mtold12" id="1156" />
      <edge source="___strgtold12" target="___multtenpow12" id="1157" />
      <edge source="_$I10_OUTPUT" target="__security_check_cookie(x)" id="1158" />
      <edge source="_$I10_OUTPUT" target="_strcpy" id="1159" />
      <edge source="_$I10_OUTPUT" target="___add_12" id="1160" />
      <edge source="_$I10_OUTPUT" target="___shl_12" id="1161" />
      <edge source="_$I10_OUTPUT" target="___shr_12" id="1162" />
      <edge source="_$I10_OUTPUT" target="___ld12mul" id="1163" />
      <edge source="_$I10_OUTPUT" target="___multtenpow12" id="1164" />
      <edge source="___ld12mul" target="__security_check_cookie(x)" id="1165" />
      <edge source="___ld12mul" target="___addl" id="1166" />
      <edge source="___ld12mul" target="___shl_12" id="1167" />
      <edge source="___ld12mul" target="___shr_12" id="1168" />
      <edge source="___multtenpow12" target="__security_check_cookie(x)" id="1169" />
      <edge source="___multtenpow12" target="___ld12mul" id="1170" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="__security_check_cookie(x)" id="1171" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="_memset" id="1172" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="__mbscmp" id="1173" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="CWnd::Attach(HWND__ *)" id="1174" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="AfxGetModuleState(void)" id="1175" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1176" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="GlobalGetAtomNameA" id="1177" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="GlobalAddAtomA" id="1178" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="lstrcmpiA" id="1179" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="GetClassLongA" id="1180" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="GetClassInfoExA" id="1181" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="GetClassNameA" id="1182" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="SetPropA" id="1183" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="GetPropA" id="1184" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="SetWindowLongA" id="1185" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="UnhookWindowsHookEx" id="1186" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="GetWindowLongA" id="1187" />
      <edge source="_AfxCbtFilterHook(int,uint,long)" target="CallNextHookEx" id="1188" />
      <edge source="CException::ReportError(uint,uint)" target="__security_check_cookie(x)" id="1189" />
      <edge source="CException::ReportError(uint,uint)" target="AfxMessageBox(char const *,uint,uint)" id="1190" />
      <edge source="CException::ReportError(uint,uint)" target="AfxMessageBox(uint,uint,uint)" id="1191" />
      <edge source="CDialogTemplate::SetSystemFont(ushort)" target="__security_check_cookie(x)" id="1192" />
      <edge source="CDialogTemplate::SetSystemFont(ushort)" target="CDialogTemplate::SetFont(char const *,ushort)" id="1193" />
      <edge source="CDialogTemplate::SetSystemFont(ushort)" target="MulDiv" id="1194" />
      <edge source="CDialogTemplate::SetSystemFont(ushort)" target="ReleaseDC" id="1195" />
      <edge source="CDialogTemplate::SetSystemFont(ushort)" target="GetDC" id="1196" />
      <edge source="CDialogTemplate::SetSystemFont(ushort)" target="GetStockObject" id="1197" />
      <edge source="CDialogTemplate::SetSystemFont(ushort)" target="GetDeviceCaps" id="1198" />
      <edge source="CDialogTemplate::SetSystemFont(ushort)" target="GetObjectA" id="1199" />
      <edge source="_AfxCompareClassName(HWND__ *,char const *)" target="__security_check_cookie(x)" id="1200" />
      <edge source="_AfxCompareClassName(HWND__ *,char const *)" target="lstrcmpiA" id="1201" />
      <edge source="_AfxCompareClassName(HWND__ *,char const *)" target="GetClassNameA" id="1202" />
      <edge source="AfxSetWindowText(HWND__ *,char const *)" target="__security_check_cookie(x)" id="1203" />
      <edge source="AfxSetWindowText(HWND__ *,char const *)" target="lstrcmpA" id="1204" />
      <edge source="AfxSetWindowText(HWND__ *,char const *)" target="lstrlenA" id="1205" />
      <edge source="AfxSetWindowText(HWND__ *,char const *)" target="SetWindowTextA" id="1206" />
      <edge source="AfxSetWindowText(HWND__ *,char const *)" target="GetWindowTextA" id="1207" />
      <edge source="CWinApp::DoMessageBox(char const *,uint,uint)" target="__security_check_cookie(x)" id="1208" />
      <edge source="CWinApp::DoMessageBox(char const *,uint,uint)" target="CWinApp::EnableModeless(int)" id="1209" />
      <edge source="CWinApp::DoMessageBox(char const *,uint,uint)" target="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" id="1210" />
      <edge source="CWinApp::DoMessageBox(char const *,uint,uint)" target="GetModuleFileNameA" id="1211" />
      <edge source="CWinApp::DoMessageBox(char const *,uint,uint)" target="SendMessageA" id="1212" />
      <edge source="CWinApp::DoMessageBox(char const *,uint,uint)" target="EnableWindow" id="1213" />
      <edge source="CWinApp::DoMessageBox(char const *,uint,uint)" target="MessageBoxA" id="1214" />
      <edge source="CWinApp::WriteProfileInt(char const *,char const *,int)" target="__security_check_cookie(x)" id="1215" />
      <edge source="CWinApp::WriteProfileInt(char const *,char const *,int)" target="CWinApp::GetSectionKey(char const *)" id="1216" />
      <edge source="CWinApp::WriteProfileInt(char const *,char const *,int)" target="WritePrivateProfileStringA" id="1217" />
      <edge source="CWinApp::WriteProfileInt(char const *,char const *,int)" target="wsprintfA" id="1218" />
      <edge source="CWinApp::WriteProfileInt(char const *,char const *,int)" target="RegSetValueExA" id="1219" />
      <edge source="CWinApp::WriteProfileInt(char const *,char const *,int)" target="RegCloseKey" id="1220" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="__security_check_cookie(x)" id="1221" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="_sscanf" id="1222" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="_AfxLoadLangDLL(char const *,ulong)" id="1223" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="GetModuleHandleA" id="1224" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="GetProcAddress" id="1225" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="ConvertDefaultLocale" id="1226" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="EnumResourceLanguagesA" id="1227" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="GetVersion" id="1228" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="RegQueryValueExA" id="1229" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="RegOpenKeyExA" id="1230" />
      <edge source="AfxLoadLangResourceDLL(char const *)" target="RegCloseKey" id="1231" />
      <edge source="CWinApp::LoadAppLangResourceDLL(void)" target="__security_check_cookie(x)" id="1232" />
      <edge source="CWinApp::LoadAppLangResourceDLL(void)" target="AfxLoadLangResourceDLL(char const *)" id="1233" />
      <edge source="CWinApp::LoadAppLangResourceDLL(void)" target="GetModuleFileNameA" id="1234" />
      <edge source="CWinApp::LoadAppLangResourceDLL(void)" target="lstrcpyA" id="1235" />
      <edge source="CWinApp::LoadAppLangResourceDLL(void)" target="PathFindExtensionA" id="1236" />
      <edge source="_AfxLoadDotBitmap(void)" target="__security_check_cookie(x)" id="1237" />
      <edge source="_AfxLoadDotBitmap(void)" target="_memset" id="1238" />
      <edge source="_AfxLoadDotBitmap(void)" target="GetMenuCheckMarkDimensions" id="1239" />
      <edge source="_AfxLoadDotBitmap(void)" target="LoadBitmapA" id="1240" />
      <edge source="_AfxLoadDotBitmap(void)" target="CreateBitmap" id="1241" />
      <edge source="_AfxInitDBCS(void)" target="__security_check_cookie(x)" id="1242" />
      <edge source="_AfxInitDBCS(void)" target="GetOEMCP" id="1243" />
      <edge source="_AfxInitDBCS(void)" target="GetCPInfo" id="1244" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="__security_check_cookie(x)" id="1245" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="__strdup" id="1246" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="AfxLoadString(uint,char *,uint)" id="1247" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="unknown_libname_35" id="1248" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="AfxGetModuleState(void)" id="1249" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="AfxGetFileName(char const *,char *,uint)" id="1250" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="lstrcatA" id="1251" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="GetModuleFileNameA" id="1252" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="lstrcpyA" id="1253" />
      <edge source="CWinApp::SetCurrentHandles(void)" target="PathFindExtensionA" id="1254" />
      <edge source="_sscanf" target="_strlen" id="1255" />
      <edge source="_sscanf" target="__input" id="1256" />
      <edge source="sub_40E1C9" target="__EH_prolog" id="1257" />
      <edge source="sub_40E1C9" target="std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt; const &amp;)" id="1258" />
      <edge source="sub_40E1C9" target="exception::exception(exception const &amp;)" id="1259" />
      <edge source="sub_4134A5" target="__EH_prolog" id="1260" />
      <edge source="sub_4134A5" target="CCmdTarget::BeginWaitCursor(void)" id="1261" />
      <edge source="sub_4134A5" target="CCmdTarget::EndWaitCursor(void)" id="1262" />
      <edge source="sub_4134A5" target="unknown_libname_31" id="1263" />
      <edge source="sub_4134A5" target="CWnd::GetTopLevelParent(void)" id="1264" />
      <edge source="sub_4134A5" target="CWnd::PrepareForHelp(void)" id="1265" />
      <edge source="sub_4134A5" target="AfxMessageBox(uint,uint,uint)" id="1266" />
      <edge source="sub_4134A5" target="AfxGetModuleState(void)" id="1267" />
      <edge source="CPaintDC::~CPaintDC(void)" target="__EH_prolog" id="1268" />
      <edge source="CPaintDC::~CPaintDC(void)" target="CDC::Detach(void)" id="1269" />
      <edge source="CPaintDC::~CPaintDC(void)" target="CDC::~CDC(void)" id="1270" />
      <edge source="CPaintDC::~CPaintDC(void)" target="EndPaint" id="1271" />
      <edge source="afxMapHGDIOBJ(int)" target="__EH_prolog" id="1272" />
      <edge source="afxMapHGDIOBJ(int)" target="AfxSetNewHandler(int (*)(uint))" id="1273" />
      <edge source="afxMapHGDIOBJ(int)" target="operator new(uint)" id="1274" />
      <edge source="afxMapHGDIOBJ(int)" target="CHandleMap::CHandleMap(CRuntimeClass *,void (*)(CObject *),void (*)(CObject *),uint,int)" id="1275" />
      <edge source="afxMapHGDIOBJ(int)" target="AfxGetModuleThreadState(void)" id="1276" />
      <edge source="CWinApp::CWinApp(char const *)" target="__EH_prolog" id="1277" />
      <edge source="CWinApp::CWinApp(char const *)" target="__strdup" id="1278" />
      <edge source="CWinApp::CWinApp(char const *)" target="CWinThread::CWinThread(void)" id="1279" />
      <edge source="CWinApp::CWinApp(char const *)" target="AfxGetModuleState(void)" id="1280" />
      <edge source="CWinApp::CWinApp(char const *)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1281" />
      <edge source="CWinApp::CWinApp(char const *)" target="GetCurrentThread" id="1282" />
      <edge source="CWinApp::CWinApp(char const *)" target="GetCurrentThreadId" id="1283" />
      <edge source="CWinThread::CWinThread(void)" target="__EH_prolog" id="1284" />
      <edge source="CWinThread::CWinThread(void)" target="CCmdTarget::CCmdTarget(void)" id="1285" />
      <edge source="CWinThread::CWinThread(void)" target="CWinThread::CommonConstruct(void)" id="1286" />
      <edge source="___crtExitProcess" target="ExitProcess" id="1287" />
      <edge source="___crtExitProcess" target="GetModuleHandleA" id="1288" />
      <edge source="___crtExitProcess" target="GetProcAddress" id="1289" />
      <edge source="_doexit" target="___crtExitProcess" id="1290" />
      <edge source="_doexit" target="__initterm" id="1291" />
      <edge source="_doexit" target="__SEH_prolog" id="1292" />
      <edge source="_doexit" target="__SEH_epilog" id="1293" />
      <edge source="_doexit" target="__unlock" id="1294" />
      <edge source="_doexit" target="__lock" id="1295" />
      <edge source="_doexit" target="TerminateProcess" id="1296" />
      <edge source="_doexit" target="GetCurrentProcess" id="1297" />
      <edge source="__lockexit" target="__lock" id="1298" />
      <edge source="__unlockexit" target="__unlock" id="1299" />
      <edge source="_exit" target="_doexit" id="1300" />
      <edge source="__exit" target="_doexit" id="1301" />
      <edge source="__cexit" target="_doexit" id="1302" />
      <edge source="__c_exit" target="_doexit" id="1303" />
      <edge source="_abort" target="__exit" id="1304" />
      <edge source="_abort" target="__NMSG_WRITE" id="1305" />
      <edge source="_abort" target="_raise" id="1306" />
      <edge source="_raise" target="__exit" id="1307" />
      <edge source="_raise" target="__SEH_prolog" id="1308" />
      <edge source="_raise" target="__SEH_epilog" id="1309" />
      <edge source="_raise" target="__getptd" id="1310" />
      <edge source="_raise" target="__unlock" id="1311" />
      <edge source="_raise" target="__lock" id="1312" />
      <edge source="_raise" target="_siglookup" id="1313" />
      <edge source="type_info::`scalar deleting destructor'(uint)" target="type_info::~type_info(void)" id="1314" />
      <edge source="type_info::`scalar deleting destructor'(uint)" target="j__free" id="1315" />
      <edge source="CByteArray::SetSize(int,int)" target="_memcpy_0" id="1316" />
      <edge source="CByteArray::SetSize(int,int)" target="_memset" id="1317" />
      <edge source="CByteArray::SetSize(int,int)" target="unknown_libname_10" id="1318" />
      <edge source="CByteArray::SetSize(int,int)" target="operator new(uint)" id="1319" />
      <edge source="CByteArray::SetSize(int,int)" target="j__free" id="1320" />
      <edge source="CDialogTemplate::SetTemplate(DLGTEMPLATE const *,uint)" target="_memcpy_0" id="1321" />
      <edge source="CDialogTemplate::SetTemplate(DLGTEMPLATE const *,uint)" target="HasFont(DLGTEMPLATE const *)" id="1322" />
      <edge source="CDialogTemplate::SetTemplate(DLGTEMPLATE const *,uint)" target="GlobalUnlock" id="1323" />
      <edge source="CDialogTemplate::SetTemplate(DLGTEMPLATE const *,uint)" target="GlobalLock" id="1324" />
      <edge source="CDialogTemplate::SetTemplate(DLGTEMPLATE const *,uint)" target="GlobalAlloc" id="1325" />
      <edge source="CArchive::Read(void *,uint)" target="_memcpy_0" id="1326" />
      <edge source="CArchive::Read(void *,uint)" target="sub_414F92" id="1327" />
      <edge source="CArchive::Write(void const *,uint)" target="_memcpy_0" id="1328" />
      <edge source="CArchive::Write(void const *,uint)" target="CArchive::Flush(void)" id="1329" />
      <edge source="CArchive::Write(void const *,uint)" target="sub_414F92" id="1330" />
      <edge source="_calloc" target="_memset" id="1331" />
      <edge source="_calloc" target="__SEH_prolog" id="1332" />
      <edge source="_calloc" target="__SEH_epilog" id="1333" />
      <edge source="_calloc" target="__unlock" id="1334" />
      <edge source="_calloc" target="__lock" id="1335" />
      <edge source="_calloc" target="___sbh_alloc_block" id="1336" />
      <edge source="_calloc" target="__callnewh" id="1337" />
      <edge source="_calloc" target="HeapAlloc" id="1338" />
      <edge source="__cftof2" target="_memset" id="1339" />
      <edge source="__cftof2" target="__shift" id="1340" />
      <edge source="unknown_libname_14" target="_memset" id="1341" />
      <edge source="unknown_libname_14" target="operator new(uint)" id="1342" />
      <edge source="unknown_libname_14" target="j__free" id="1343" />
      <edge source="CDialog::CDialog(uint,CWnd *)" target="_memset" id="1344" />
      <edge source="CDialog::CDialog(uint,CWnd *)" target="CWnd::CWnd(void)" id="1345" />
      <edge source="AfxEndDeferRegisterClass(long)" target="_memset" id="1346" />
      <edge source="AfxEndDeferRegisterClass(long)" target="AfxRegisterClass(tagWNDCLASSA *)" id="1347" />
      <edge source="AfxEndDeferRegisterClass(long)" target="_AfxInitCommonControls(tagINITCOMMONCONTROLSEX *,long)" id="1348" />
      <edge source="AfxEndDeferRegisterClass(long)" target="unknown_libname_30" id="1349" />
      <edge source="AfxEndDeferRegisterClass(long)" target="AfxGetModuleState(void)" id="1350" />
      <edge source="CWnd::OnNcDestroy(void)" target="_memset" id="1351" />
      <edge source="CWnd::OnNcDestroy(void)" target="AfxGetThread(void)" id="1352" />
      <edge source="CWnd::OnNcDestroy(void)" target="CWnd::Default(void)" id="1353" />
      <edge source="CWnd::OnNcDestroy(void)" target="CWnd::Detach(void)" id="1354" />
      <edge source="CWnd::OnNcDestroy(void)" target="AfxOleCanExitApp(void)" id="1355" />
      <edge source="CWnd::OnNcDestroy(void)" target="AfxGetModuleState(void)" id="1356" />
      <edge source="CWnd::OnNcDestroy(void)" target="AfxGetModuleThreadState(void)" id="1357" />
      <edge source="CWnd::OnNcDestroy(void)" target="AfxPostQuitMessage(int)" id="1358" />
      <edge source="CWnd::OnNcDestroy(void)" target="SendMessageA" id="1359" />
      <edge source="CWnd::OnNcDestroy(void)" target="SetWindowLongA" id="1360" />
      <edge source="CWnd::OnNcDestroy(void)" target="GetWindowLongA" id="1361" />
      <edge source="CThreadSlotData::AllocSlot(void)" target="_memset" id="1362" />
      <edge source="CThreadSlotData::AllocSlot(void)" target="unknown_libname_8" id="1363" />
      <edge source="CThreadSlotData::AllocSlot(void)" target="EnterCriticalSection" id="1364" />
      <edge source="CThreadSlotData::AllocSlot(void)" target="GlobalHandle" id="1365" />
      <edge source="CThreadSlotData::AllocSlot(void)" target="GlobalReAlloc" id="1366" />
      <edge source="CThreadSlotData::AllocSlot(void)" target="LeaveCriticalSection" id="1367" />
      <edge source="CThreadSlotData::AllocSlot(void)" target="GlobalUnlock" id="1368" />
      <edge source="CThreadSlotData::AllocSlot(void)" target="GlobalLock" id="1369" />
      <edge source="CThreadSlotData::AllocSlot(void)" target="GlobalAlloc" id="1370" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="_memset" id="1371" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="unknown_libname_8" id="1372" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="unknown_libname_49" id="1373" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="sub_4173B3" id="1374" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="LocalReAlloc" id="1375" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="TlsSetValue" id="1376" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="TlsGetValue" id="1377" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="EnterCriticalSection" id="1378" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="LeaveCriticalSection" id="1379" />
      <edge source="CThreadSlotData::SetValue(int,void *)" target="LocalAlloc" id="1380" />
      <edge source="__mbscmp" target="___updatetmbcinfo" id="1381" />
      <edge source="__mbscmp" target="__getptd" id="1382" />
      <edge source="__mbscmp" target="_strcmp" id="1383" />
      <edge source="__mbschr" target="___updatetmbcinfo" id="1384" />
      <edge source="__mbschr" target="__getptd" id="1385" />
      <edge source="__mbschr" target="_strchr" id="1386" />
      <edge source="AfxWinTerm(void)" target="__mbschr" id="1387" />
      <edge source="AfxWinTerm(void)" target="AfxGetThreadState(void)" id="1388" />
      <edge source="AfxWinTerm(void)" target="AfxGetModuleState(void)" id="1389" />
      <edge source="AfxWinTerm(void)" target="AfxGetModuleThreadState(void)" id="1390" />
      <edge source="AfxWinTerm(void)" target="AfxLockGlobals(int)" id="1391" />
      <edge source="AfxWinTerm(void)" target="AfxUnlockGlobals(int)" id="1392" />
      <edge source="AfxWinTerm(void)" target="UnregisterClassA" id="1393" />
      <edge source="AfxWinTerm(void)" target="UnhookWindowsHookEx" id="1394" />
      <edge source="CAfxStringMgr::Reallocate(ATL::CStringData *,int,int)" target="_realloc" id="1395" />
      <edge source="CDialogTemplate::GetTemplateSize(DLGTEMPLATE const *)" target="_wcslen" id="1396" />
      <edge source="CDialogTemplate::GetTemplateSize(DLGTEMPLATE const *)" target="HasFont(DLGTEMPLATE const *)" id="1397" />
      <edge source="CDialogTemplate::GetTemplateSize(DLGTEMPLATE const *)" target="CDialogTemplate::GetFontSizeField(DLGTEMPLATE const *)" id="1398" />
      <edge source="___initmbctable" target="__setmbcp" id="1399" />
      <edge source="AfxInitialize(int,ulong)" target="__setmbcp" id="1400" />
      <edge source="AfxInitialize(int,ulong)" target="AfxGetModuleState(void)" id="1401" />
      <edge source="__wincmdln" target="___initmbctable" id="1402" />
      <edge source="__wincmdln" target="__ismbblead" id="1403" />
      <edge source="__expand" target="__SEH_prolog" id="1404" />
      <edge source="__expand" target="__SEH_epilog" id="1405" />
      <edge source="__expand" target="__unlock" id="1406" />
      <edge source="__expand" target="__lock" id="1407" />
      <edge source="__expand" target="___sbh_find_block" id="1408" />
      <edge source="__expand" target="___sbh_resize_block" id="1409" />
      <edge source="__expand" target="HeapReAlloc" id="1410" />
      <edge source="__msize" target="__SEH_prolog" id="1411" />
      <edge source="__msize" target="__SEH_epilog" id="1412" />
      <edge source="__msize" target="__unlock" id="1413" />
      <edge source="__msize" target="__lock" id="1414" />
      <edge source="__msize" target="___sbh_find_block" id="1415" />
      <edge source="__msize" target="HeapSize" id="1416" />
      <edge source="_atol" target="__getptd" id="1417" />
      <edge source="_atol" target="___isctype_mt" id="1418" />
      <edge source="_atol" target="___updatetlocinfo" id="1419" />
      <edge source="___FrameUnwindToState" target="__SEH_prolog" id="1420" />
      <edge source="___FrameUnwindToState" target="__SEH_epilog" id="1421" />
      <edge source="___FrameUnwindToState" target="FrameUnwindFilter(_EXCEPTION_POINTERS *)" id="1422" />
      <edge source="___FrameUnwindToState" target="__getptd" id="1423" />
      <edge source="___FrameUnwindToState" target="sub_406BF6" id="1424" />
      <edge source="___FrameUnwindToState" target="_CallSettingFrame(x,x,x)" id="1425" />
      <edge source="terminate(void)" target="__SEH_prolog" id="1426" />
      <edge source="terminate(void)" target="__getptd" id="1427" />
      <edge source="terminate(void)" target="_abort" id="1428" />
      <edge source="sub_406BF6" target="__SEH_prolog" id="1429" />
      <edge source="sub_406BF6" target="terminate(void)" id="1430" />
      <edge source="sub_409041" target="__SEH_prolog" id="1431" />
      <edge source="sub_409041" target="__SEH_epilog" id="1432" />
      <edge source="sub_409085" target="__SEH_prolog" id="1433" />
      <edge source="sub_409085" target="__SEH_epilog" id="1434" />
      <edge source="___updatetlocinfo" target="__SEH_prolog" id="1435" />
      <edge source="___updatetlocinfo" target="__SEH_epilog" id="1436" />
      <edge source="___updatetlocinfo" target="__unlock" id="1437" />
      <edge source="___updatetlocinfo" target="__lock" id="1438" />
      <edge source="___updatetlocinfo" target="___updatetlocinfo_lk" id="1439" />
      <edge source="_flsall" target="__SEH_prolog" id="1440" />
      <edge source="_flsall" target="__SEH_epilog" id="1441" />
      <edge source="_flsall" target="__lock_file2" id="1442" />
      <edge source="_flsall" target="__unlock_file2" id="1443" />
      <edge source="_flsall" target="__unlock" id="1444" />
      <edge source="_flsall" target="__lock" id="1445" />
      <edge source="_flsall" target="__fflush_lk" id="1446" />
      <edge source="___crtInitCritSecAndSpinCount" target="__SEH_prolog" id="1447" />
      <edge source="___crtInitCritSecAndSpinCount" target="__SEH_epilog" id="1448" />
      <edge source="___crtInitCritSecAndSpinCount" target="SetLastError" id="1449" />
      <edge source="___crtInitCritSecAndSpinCount" target="GetModuleHandleA" id="1450" />
      <edge source="___crtInitCritSecAndSpinCount" target="GetProcAddress" id="1451" />
      <edge source="__lseek" target="__SEH_prolog" id="1452" />
      <edge source="__lseek" target="__SEH_epilog" id="1453" />
      <edge source="__lseek" target="__errno" id="1454" />
      <edge source="__lseek" target="___doserrno" id="1455" />
      <edge source="__lseek" target="__lseek_lk" id="1456" />
      <edge source="__lseek" target="__lock_fhandle" id="1457" />
      <edge source="__lseek" target="__unlock_fhandle" id="1458" />
      <edge source="__write" target="__SEH_prolog" id="1459" />
      <edge source="__write" target="__SEH_epilog" id="1460" />
      <edge source="__write" target="__errno" id="1461" />
      <edge source="__write" target="___doserrno" id="1462" />
      <edge source="__write" target="__write_lk" id="1463" />
      <edge source="__write" target="__lock_fhandle" id="1464" />
      <edge source="__write" target="__unlock_fhandle" id="1465" />
      <edge source="_fclose" target="__SEH_prolog" id="1466" />
      <edge source="_fclose" target="__SEH_epilog" id="1467" />
      <edge source="_fclose" target="__lock_file" id="1468" />
      <edge source="_fclose" target="__unlock_file" id="1469" />
      <edge source="_fclose" target="__fclose_lk" id="1470" />
      <edge source="__commit" target="__SEH_prolog" id="1471" />
      <edge source="__commit" target="__SEH_epilog" id="1472" />
      <edge source="__commit" target="__errno" id="1473" />
      <edge source="__commit" target="___doserrno" id="1474" />
      <edge source="__commit" target="__get_osfhandle" id="1475" />
      <edge source="__commit" target="__lock_fhandle" id="1476" />
      <edge source="__commit" target="__unlock_fhandle" id="1477" />
      <edge source="__commit" target="FlushFileBuffers" id="1478" />
      <edge source="__commit" target="GetLastError" id="1479" />
      <edge source="__read" target="__SEH_prolog" id="1480" />
      <edge source="__read" target="__SEH_epilog" id="1481" />
      <edge source="__read" target="__errno" id="1482" />
      <edge source="__read" target="___doserrno" id="1483" />
      <edge source="__read" target="__lock_fhandle" id="1484" />
      <edge source="__read" target="__unlock_fhandle" id="1485" />
      <edge source="__read" target="__read_lk" id="1486" />
      <edge source="__close" target="__SEH_prolog" id="1487" />
      <edge source="__close" target="__SEH_epilog" id="1488" />
      <edge source="__close" target="__errno" id="1489" />
      <edge source="__close" target="___doserrno" id="1490" />
      <edge source="__close" target="__lock_fhandle" id="1491" />
      <edge source="__close" target="__unlock_fhandle" id="1492" />
      <edge source="__close" target="__close_lk" id="1493" />
      <edge source="__fpmath" target="__cfltcvt_init" id="1494" />
      <edge source="__fpmath" target="__setdefaultprecision" id="1495" />
      <edge source="__fpmath" target="__ms_p5_mp_test_fdiv" id="1496" />
      <edge source="__errno" target="__getptd" id="1497" />
      <edge source="___wctomb_mt" target="__errno" id="1498" />
      <edge source="___wctomb_mt" target="WideCharToMultiByte" id="1499" />
      <edge source="__lseek_lk" target="__errno" id="1500" />
      <edge source="__lseek_lk" target="__dosmaperr" id="1501" />
      <edge source="__lseek_lk" target="__get_osfhandle" id="1502" />
      <edge source="__lseek_lk" target="SetFilePointer" id="1503" />
      <edge source="__lseek_lk" target="GetLastError" id="1504" />
      <edge source="___mbtowc_mt" target="__errno" id="1505" />
      <edge source="___mbtowc_mt" target="MultiByteToWideChar" id="1506" />
      <edge source="__free_osfhnd" target="__errno" id="1507" />
      <edge source="__free_osfhnd" target="___doserrno" id="1508" />
      <edge source="__free_osfhnd" target="SetStdHandle" id="1509" />
      <edge source="__get_osfhandle" target="__errno" id="1510" />
      <edge source="__get_osfhandle" target="___doserrno" id="1511" />
      <edge source="__lseeki64_lk" target="__errno" id="1512" />
      <edge source="__lseeki64_lk" target="__dosmaperr" id="1513" />
      <edge source="__lseeki64_lk" target="__get_osfhandle" id="1514" />
      <edge source="__lseeki64_lk" target="SetFilePointer" id="1515" />
      <edge source="__lseeki64_lk" target="GetLastError" id="1516" />
      <edge source="__read_lk" target="__errno" id="1517" />
      <edge source="__read_lk" target="___doserrno" id="1518" />
      <edge source="__read_lk" target="__dosmaperr" id="1519" />
      <edge source="__read_lk" target="__lseek_lk" id="1520" />
      <edge source="__read_lk" target="ReadFile" id="1521" />
      <edge source="__read_lk" target="GetLastError" id="1522" />
      <edge source="___doserrno" target="__getptd" id="1523" />
      <edge source="__dosmaperr" target="__getptd" id="1524" />
      <edge source="__close_lk" target="__dosmaperr" id="1525" />
      <edge source="__close_lk" target="__free_osfhnd" id="1526" />
      <edge source="__close_lk" target="__get_osfhandle" id="1527" />
      <edge source="__close_lk" target="CloseHandle" id="1528" />
      <edge source="__close_lk" target="GetLastError" id="1529" />
      <edge source="__mtinit" target="_calloc" id="1530" />
      <edge source="__mtinit" target="__mtterm" id="1531" />
      <edge source="__mtinit" target="__mtinitlocks" id="1532" />
      <edge source="__mtinit" target="GetCurrentThreadId" id="1533" />
      <edge source="__mtinit" target="GetModuleHandleA" id="1534" />
      <edge source="__mtinit" target="GetProcAddress" id="1535" />
      <edge source="TypeMatch(_s_HandlerType const *,_s_CatchableType const *,_s_ThrowInfo const *)" target="_strcmp" id="1536" />
      <edge source="FrameUnwindFilter(_EXCEPTION_POINTERS *)" target="__getptd" id="1537" />
      <edge source="FrameUnwindFilter(_EXCEPTION_POINTERS *)" target="terminate(void)" id="1538" />
      <edge source="___InternalCxxFrameHandler" target="___FrameUnwindToState" id="1539" />
      <edge source="___InternalCxxFrameHandler" target="FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)" id="1540" />
      <edge source="___InternalCxxFrameHandler" target="sub_406BF6" id="1541" />
      <edge source="CatchGuardHandler(EHExceptionRecord *,CatchGuardRN *,void *,void *)" target="___InternalCxxFrameHandler" id="1542" />
      <edge source="__XcptFilter" target="__getptd" id="1543" />
      <edge source="__XcptFilter" target="UnhandledExceptionFilter" id="1544" />
      <edge source="___updatetlocinfo_lk" target="__getptd" id="1545" />
      <edge source="___updatetlocinfo_lk" target="___freetlocinfo" id="1546" />
      <edge source="_isdigit" target="__getptd" id="1547" />
      <edge source="_isdigit" target="___isctype_mt" id="1548" />
      <edge source="_isdigit" target="___updatetlocinfo" id="1549" />
      <edge source="_isxdigit" target="__getptd" id="1550" />
      <edge source="_isxdigit" target="___isctype_mt" id="1551" />
      <edge source="_isxdigit" target="___updatetlocinfo" id="1552" />
      <edge source="_isspace" target="__getptd" id="1553" />
      <edge source="_isspace" target="___isctype_mt" id="1554" />
      <edge source="_isspace" target="___updatetlocinfo" id="1555" />
      <edge source="_wctomb" target="__getptd" id="1556" />
      <edge source="_wctomb" target="___updatetlocinfo" id="1557" />
      <edge source="_wctomb" target="___wctomb_mt" id="1558" />
      <edge source="_mbtowc" target="__getptd" id="1559" />
      <edge source="_mbtowc" target="___updatetlocinfo" id="1560" />
      <edge source="_mbtowc" target="___mbtowc_mt" id="1561" />
      <edge source="_tolower" target="__getptd" id="1562" />
      <edge source="_tolower" target="___updatetlocinfo" id="1563" />
      <edge source="_tolower" target="___tolower_mt" id="1564" />
      <edge source="__CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)" target="terminate(void)" id="1565" />
      <edge source="__CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)" target="_ValidateExecute(int (*)(void))" id="1566" />
      <edge source="__lock_file" target="__lock" id="1567" />
      <edge source="__lock_file" target="EnterCriticalSection" id="1568" />
      <edge source="__lock_file2" target="__lock" id="1569" />
      <edge source="__lock_file2" target="EnterCriticalSection" id="1570" />
      <edge source="__unlock_file" target="__unlock" id="1571" />
      <edge source="__unlock_file" target="LeaveCriticalSection" id="1572" />
      <edge source="__unlock_file2" target="__unlock" id="1573" />
      <edge source="__unlock_file2" target="LeaveCriticalSection" id="1574" />
      <edge source="__ftbuf" target="__flush" id="1575" />
      <edge source="_write_char" target="__flsbuf" id="1576" />
      <edge source="_write_multi_char" target="_write_char" id="1577" />
      <edge source="_write_string" target="_write_char" id="1578" />
      <edge source="__mtinitlocks" target="___crtInitCritSecAndSpinCount" id="1579" />
      <edge source="__unlock" target="LeaveCriticalSection" id="1580" />
      <edge source="__heap_init" target="___heap_select" id="1581" />
      <edge source="__heap_init" target="___sbh_heap_init" id="1582" />
      <edge source="__heap_init" target="HeapDestroy" id="1583" />
      <edge source="__heap_init" target="HeapCreate" id="1584" />
      <edge source="___sbh_heap_init" target="HeapAlloc" id="1585" />
      <edge source="___sbh_alloc_new_region" target="HeapReAlloc" id="1586" />
      <edge source="___sbh_alloc_new_region" target="VirtualAlloc" id="1587" />
      <edge source="___sbh_alloc_new_region" target="HeapFree" id="1588" />
      <edge source="___sbh_alloc_new_region" target="HeapAlloc" id="1589" />
      <edge source="___sbh_alloc_block" target="___sbh_alloc_new_region" id="1590" />
      <edge source="___sbh_alloc_block" target="___sbh_alloc_new_group" id="1591" />
      <edge source="___sbh_alloc_new_group" target="VirtualAlloc" id="1592" />
      <edge source="__ValidateEH3RN" target="VirtualQuery" id="1593" />
      <edge source="__ValidateEH3RN" target="InterlockedExchange" id="1594" />
      <edge source="__FF_MSGBANNER" target="__NMSG_WRITE" id="1595" />
      <edge source="__flsbuf" target="__isatty" id="1596" />
      <edge source="__flsbuf" target="__lseek" id="1597" />
      <edge source="__flsbuf" target="__write" id="1598" />
      <edge source="__flsbuf" target="__getbuf" id="1599" />
      <edge source="__inc" target="__filbuf" id="1600" />
      <edge source="__cftoe2" target="_strcpy" id="1601" />
      <edge source="__cftoe2" target="__shift" id="1602" />
      <edge source="___tolower_mt" target="___crtLCMapStringA" id="1603" />
      <edge source="___tolower_mt" target="___isctype_mt" id="1604" />
      <edge source="___isctype_mt" target="___crtGetStringTypeA" id="1605" />
      <edge source="__cfltcvt" target="__cftoe" id="1606" />
      <edge source="__cfltcvt" target="__cftof" id="1607" />
      <edge source="__cfltcvt" target="__cftog" id="1608" />
      <edge source="__setdefaultprecision" target="__controlfp" id="1609" />
      <edge source="__ms_p5_mp_test_fdiv" target="__ms_p5_test_fdiv" id="1610" />
      <edge source="__ms_p5_mp_test_fdiv" target="GetModuleHandleA" id="1611" />
      <edge source="__ms_p5_mp_test_fdiv" target="GetProcAddress" id="1612" />
      <edge source="__forcdecpt" target="_isdigit" id="1613" />
      <edge source="__forcdecpt" target="_tolower" id="1614" />
      <edge source="_ValidateRead(void const *,uint)" target="IsBadReadPtr" id="1615" />
      <edge source="_ValidateWrite(void *,uint)" target="IsBadWritePtr" id="1616" />
      <edge source="_ValidateExecute(int (*)(void))" target="IsBadCodePtr" id="1617" />
      <edge source="__flush" target="__write" id="1618" />
      <edge source="__fflush_lk" target="__flush" id="1619" />
      <edge source="__fflush_lk" target="__commit" id="1620" />
      <edge source="sub_40B4A3" target="_flsall" id="1621" />
      <edge source="___crtMessageBoxA" target="GetProcAddress" id="1622" />
      <edge source="___crtMessageBoxA" target="LoadLibraryA" id="1623" />
      <edge source="__ismbblead" target="_x_ismbbtype" id="1624" />
      <edge source="__filbuf" target="__getbuf" id="1625" />
      <edge source="__filbuf" target="__read" id="1626" />
      <edge source="_ungetc" target="__getbuf" id="1627" />
      <edge source="__RoundMan" target="__ZeroTail" id="1628" />
      <edge source="__RoundMan" target="__IncMan" id="1629" />
      <edge source="__IncMan" target="___addl" id="1630" />
      <edge source="__ld12cvt" target="__RoundMan" id="1631" />
      <edge source="__ld12cvt" target="__CopyMan" id="1632" />
      <edge source="__ld12cvt" target="__IsZeroMan" id="1633" />
      <edge source="__ld12cvt" target="__ShrMan" id="1634" />
      <edge source="sub_40C7FB" target="__ld12cvt" id="1635" />
      <edge source="sub_40C811" target="__ld12cvt" id="1636" />
      <edge source="__fassign" target="sub_40C827" id="1637" />
      <edge source="__fassign" target="sub_40C864" id="1638" />
      <edge source="__control87" target="__abstract_cw" id="1639" />
      <edge source="__control87" target="__hw_cw" id="1640" />
      <edge source="__controlfp" target="__control87" id="1641" />
      <edge source="__unlock_fhandle" target="LeaveCriticalSection" id="1642" />
      <edge source="___add_12" target="___addl" id="1643" />
      <edge source="CWinApp::DevModeChange(char *)" target="ClosePrinter" id="1644" />
      <edge source="CWinApp::DevModeChange(char *)" target="DocumentPropertiesA" id="1645" />
      <edge source="CWinApp::DevModeChange(char *)" target="OpenPrinterA" id="1646" />
      <edge source="CWinApp::DevModeChange(char *)" target="AfxGlobalFree(void *)" id="1647" />
      <edge source="CWinApp::DevModeChange(char *)" target="GlobalLock" id="1648" />
      <edge source="CWinApp::DevModeChange(char *)" target="GlobalAlloc" id="1649" />
      <edge source="CWinApp::DevModeChange(char *)" target="lstrcmpA" id="1650" />
      <edge source="sub_40E11F" target="sub_40E102" id="1651" />
      <edge source="sub_40E11F" target="j__free" id="1652" />
      <edge source="sub_40E157" target="sub_40E102" id="1653" />
      <edge source="sub_40E17E" target="sub_40E102" id="1654" />
      <edge source="sub_40E13B" target="sub_40E157" id="1655" />
      <edge source="sub_40E13B" target="j__free" id="1656" />
      <edge source="sub_40E162" target="sub_40E17E" id="1657" />
      <edge source="sub_40E162" target="j__free" id="1658" />
      <edge source="sub_40E20C" target="sub_40E1C9" id="1659" />
      <edge source="sub_40E264" target="sub_40E1C9" id="1660" />
      <edge source="CWnd::EnsureStdObj(void)" target="CreateStdAccessibleObject" id="1661" />
      <edge source="sub_40E3A5" target="LocalAlloc" id="1662" />
      <edge source="sub_40E3A5" target="RaiseException" id="1663" />
      <edge source="sub_40E3A5" target="FreeLibrary" id="1664" />
      <edge source="sub_40E3A5" target="GetProcAddress" id="1665" />
      <edge source="sub_40E3A5" target="LoadLibraryA" id="1666" />
      <edge source="sub_40E3A5" target="GetLastError" id="1667" />
      <edge source="sub_40E3A5" target="InterlockedExchange" id="1668" />
      <edge source="WinMain(x,x,x,x)" target="_WinMain@16_0" id="1669" />
      <edge source="sub_40E69C" target="sub_40E679" id="1670" />
      <edge source="sub_40E69C" target="j__free" id="1671" />
      <edge source="CSimpleException::InitString(void)" target="AfxLoadString(uint,char *,uint)" id="1672" />
      <edge source="CSimpleException::GetErrorMessage(char *,uint,uint *)" target="CSimpleException::InitString(void)" id="1673" />
      <edge source="CSimpleException::GetErrorMessage(char *,uint,uint *)" target="lstrcpynA" id="1674" />
      <edge source="j_unknown_libname_8" target="unknown_libname_8" id="1675" />
      <edge source="AfxHookWindowCreate(CWnd *)" target="unknown_libname_8" id="1676" />
      <edge source="AfxHookWindowCreate(CWnd *)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1677" />
      <edge source="AfxHookWindowCreate(CWnd *)" target="GetCurrentThreadId" id="1678" />
      <edge source="AfxHookWindowCreate(CWnd *)" target="SetWindowsHookExA" id="1679" />
      <edge source="unknown_libname_49" target="unknown_libname_8" id="1680" />
      <edge source="unknown_libname_49" target="LocalAlloc" id="1681" />
      <edge source="CThreadSlotData::CThreadSlotData(void)" target="unknown_libname_8" id="1682" />
      <edge source="CThreadSlotData::CThreadSlotData(void)" target="TlsAlloc" id="1683" />
      <edge source="CThreadSlotData::CThreadSlotData(void)" target="InitializeCriticalSection" id="1684" />
      <edge source="unknown_libname_40" target="unknown_libname_9" id="1685" />
      <edge source="unknown_libname_40" target="CWnd::GetOleControlSite(uint)" id="1686" />
      <edge source="unknown_libname_40" target="CWnd::GetDlgItem(int,HWND__ * *)" id="1687" />
      <edge source="unknown_libname_12" target="unknown_libname_10" id="1688" />
      <edge source="unknown_libname_12" target="unknown_libname_11" id="1689" />
      <edge source="unknown_libname_13" target="unknown_libname_10" id="1690" />
      <edge source="unknown_libname_13" target="operator new(uint)" id="1691" />
      <edge source="unknown_libname_11" target="CPlex::FreeDataChain(void)" id="1692" />
      <edge source="sub_40E7C1" target="unknown_libname_12" id="1693" />
      <edge source="AFX_MODULE_THREAD_STATE::~AFX_MODULE_THREAD_STATE(void)" target="sub_40E7C1" id="1694" />
      <edge source="AFX_MODULE_THREAD_STATE::~AFX_MODULE_THREAD_STATE(void)" target="j__free" id="1695" />
      <edge source="CMapPtrToPtr::NewAssoc(void)" target="unknown_libname_13" id="1696" />
      <edge source="CPlex::FreeDataChain(void)" target="j__free" id="1697" />
      <edge source="sub_40EA3D" target="CPlex::FreeDataChain(void)" id="1698" />
      <edge source="sub_40EA3D" target="j__free" id="1699" />
      <edge source="CByteArray::Serialize(CArchive &amp;)" target="CByteArray::SetSize(int,int)" id="1700" />
      <edge source="CByteArray::Serialize(CArchive &amp;)" target="CArchive::Read(void *,uint)" id="1701" />
      <edge source="CByteArray::Serialize(CArchive &amp;)" target="CArchive::Write(void const *,uint)" id="1702" />
      <edge source="CByteArray::Serialize(CArchive &amp;)" target="CArchive::WriteCount(ulong)" id="1703" />
      <edge source="CByteArray::Serialize(CArchive &amp;)" target="CArchive::ReadCount(void)" id="1704" />
      <edge source="sub_40E948" target="j__free" id="1705" />
      <edge source="sub_40E9D5" target="sub_40E948" id="1706" />
      <edge source="sub_40E9D5" target="j__free" id="1707" />
      <edge source="sub_40EC31" target="unknown_libname_14" id="1708" />
      <edge source="sub_40EC31" target="unknown_libname_15" id="1709" />
      <edge source="sub_40EC31" target="CMapPtrToPtr::NewAssoc(void)" id="1710" />
      <edge source="sub_40EA68" target="sub_40EA3D" id="1711" />
      <edge source="sub_40EBDB" target="sub_40EA3D" id="1712" />
      <edge source="sub_40EAF0" target="sub_40EA68" id="1713" />
      <edge source="CWnd::FromHandlePermanent(HWND__ *)" target="CMapPtrToPtr::GetValueAt(void *)" id="1714" />
      <edge source="CWnd::FromHandlePermanent(HWND__ *)" target="afxMapHWND(int)" id="1715" />
      <edge source="CWnd::DestroyWindow(void)" target="CMapPtrToPtr::GetValueAt(void *)" id="1716" />
      <edge source="CWnd::DestroyWindow(void)" target="afxMapHWND(int)" id="1717" />
      <edge source="CWnd::DestroyWindow(void)" target="DestroyWindow" id="1718" />
      <edge source="CWnd::AttachControlSite(CHandleMap *)" target="CMapPtrToPtr::GetValueAt(void *)" id="1719" />
      <edge source="CWnd::AttachControlSite(CHandleMap *)" target="GetParent" id="1720" />
      <edge source="CMenu::FromHandlePermanent(HMENU__ *)" target="CMapPtrToPtr::GetValueAt(void *)" id="1721" />
      <edge source="CMenu::FromHandlePermanent(HMENU__ *)" target="afxMapHMENU(int)" id="1722" />
      <edge source="CWnd::Detach(void)" target="sub_40EAF0" id="1723" />
      <edge source="CWnd::Detach(void)" target="afxMapHWND(int)" id="1724" />
      <edge source="sub_413970" target="sub_40EAF0" id="1725" />
      <edge source="sub_413970" target="afxMapHMENU(int)" id="1726" />
      <edge source="CDC::Detach(void)" target="sub_40EAF0" id="1727" />
      <edge source="CDC::Detach(void)" target="afxMapHDC(int)" id="1728" />
      <edge source="sub_41488E" target="sub_40EAF0" id="1729" />
      <edge source="sub_41488E" target="afxMapHGDIOBJ(int)" id="1730" />
      <edge source="sub_40EC86" target="sub_40EBDB" id="1731" />
      <edge source="sub_40EC86" target="j__free" id="1732" />
      <edge source="CWnd::Attach(HWND__ *)" target="sub_40EC31" id="1733" />
      <edge source="CWnd::Attach(HWND__ *)" target="afxMapHWND(int)" id="1734" />
      <edge source="CWnd::Attach(HWND__ *)" target="CWnd::AttachControlSite(CHandleMap *)" id="1735" />
      <edge source="CDC::Attach(HDC__ *)" target="sub_40EC31" id="1736" />
      <edge source="CDC::Attach(HDC__ *)" target="afxMapHDC(int)" id="1737" />
      <edge source="AfxGetThread(void)" target="AfxGetModuleThreadState(void)" id="1738" />
      <edge source="unknown_libname_17" target="AfxGetThread(void)" id="1739" />
      <edge source="unknown_libname_17" target="CCmdTarget::OnCmdMsg(uint,int,void *,AFX_CMDHANDLERINFO *)" id="1740" />
      <edge source="unknown_libname_17" target="CWnd::FromHandle(HWND__ *)" id="1741" />
      <edge source="unknown_libname_17" target="GetParent" id="1742" />
      <edge source="_WinMain@16_0" target="AfxGetThread(void)" id="1743" />
      <edge source="_WinMain@16_0" target="AfxGetModuleState(void)" id="1744" />
      <edge source="_WinMain@16_0" target="AfxWinInit(HINSTANCE__ *,HINSTANCE__ *,char *,int)" id="1745" />
      <edge source="_WinMain@16_0" target="AfxWinTerm(void)" id="1746" />
      <edge source="AfxPostQuitMessage(int)" target="AfxGetThread(void)" id="1747" />
      <edge source="AfxGetCurrentMessage(void)" target="AfxGetThreadState(void)" id="1748" />
      <edge source="CWnd::RunModalLoop(ulong)" target="AfxGetCurrentMessage(void)" id="1749" />
      <edge source="CWnd::RunModalLoop(ulong)" target="AfxIsIdleMessage(tagMSG *)" id="1750" />
      <edge source="CWnd::RunModalLoop(ulong)" target="AfxPumpMessage(void)" id="1751" />
      <edge source="CWnd::RunModalLoop(ulong)" target="CWnd::GetStyle(void)" id="1752" />
      <edge source="CWnd::RunModalLoop(ulong)" target="CWnd::ShowWindow(int)" id="1753" />
      <edge source="CWnd::RunModalLoop(ulong)" target="AfxPostQuitMessage(int)" id="1754" />
      <edge source="CWnd::RunModalLoop(ulong)" target="UpdateWindow" id="1755" />
      <edge source="CWnd::RunModalLoop(ulong)" target="SendMessageA" id="1756" />
      <edge source="CWnd::RunModalLoop(ulong)" target="GetParent" id="1757" />
      <edge source="CWnd::RunModalLoop(ulong)" target="PeekMessageA" id="1758" />
      <edge source="CWinApp::ExitInstance(void)" target="AfxGetCurrentMessage(void)" id="1759" />
      <edge source="CWinApp::ExitInstance(void)" target="CWinApp::SaveStdProfileSettings(void)" id="1760" />
      <edge source="CWinApp::ExitInstance(void)" target="AfxGetModuleState(void)" id="1761" />
      <edge source="CWinApp::ExitInstance(void)" target="FreeLibrary" id="1762" />
      <edge source="unknown_libname_16" target="ValidateRect" id="1763" />
      <edge source="AfxProcessWndProcException(CException *,tagMSG const *)" target="unknown_libname_16" id="1764" />
      <edge source="AfxProcessWndProcException(CException *,tagMSG const *)" target="AfxGetModuleThreadState(void)" id="1765" />
      <edge source="j_unknown_libname_16" target="unknown_libname_16" id="1766" />
      <edge source="CWinThread::Run(void)" target="AfxGetThreadState(void)" id="1767" />
      <edge source="CWinThread::Run(void)" target="PeekMessageA" id="1768" />
      <edge source="CWinApp::Run(void)" target="CWinThread::Run(void)" id="1769" />
      <edge source="CWinApp::Run(void)" target="AfxOleGetUserCtrl(void)" id="1770" />
      <edge source="CWinApp::Run(void)" target="AfxPostQuitMessage(int)" id="1771" />
      <edge source="CWinThread::DispatchThreadMessageEx(tagMSG *)" target="unknown_libname_18" id="1772" />
      <edge source="CWinApp::ProcessWndProcException(CException *,tagMSG const *)" target="j_unknown_libname_16" id="1773" />
      <edge source="CWinApp::ProcessWndProcException(CException *,tagMSG const *)" target="CObject::IsKindOf(CRuntimeClass const *)" id="1774" />
      <edge source="AfxPreTranslateMessage(tagMSG *)" target="AfxInternalPreTranslateMessage(tagMSG *)" id="1775" />
      <edge source="AfxPreTranslateMessage(tagMSG *)" target="AfxGetModuleThreadState(void)" id="1776" />
      <edge source="AfxInternalPumpMessage(void)" target="AfxPreTranslateMessage(tagMSG *)" id="1777" />
      <edge source="AfxInternalPumpMessage(void)" target="AfxInternalPumpMessage(void)" id="1778" />
      <edge source="AfxInternalPumpMessage(void)" target="AfxGetThreadState(void)" id="1779" />
      <edge source="AfxInternalPumpMessage(void)" target="DispatchMessageA" id="1780" />
      <edge source="AfxInternalPumpMessage(void)" target="TranslateMessage" id="1781" />
      <edge source="AfxInternalPumpMessage(void)" target="GetMessageA" id="1782" />
      <edge source="AfxIsIdleMessage(tagMSG *)" target="AfxInternalIsIdleMessage(tagMSG *)" id="1783" />
      <edge source="AfxIsIdleMessage(tagMSG *)" target="AfxGetModuleThreadState(void)" id="1784" />
      <edge source="AfxPumpMessage(void)" target="AfxInternalPumpMessage(void)" id="1785" />
      <edge source="AfxPumpMessage(void)" target="AfxGetModuleThreadState(void)" id="1786" />
      <edge source="AfxInitThread(void)" target="AfxGetThreadState(void)" id="1787" />
      <edge source="AfxInitThread(void)" target="AfxGetModuleState(void)" id="1788" />
      <edge source="AfxInitThread(void)" target="GetCurrentThreadId" id="1789" />
      <edge source="AfxInitThread(void)" target="SetWindowsHookExA" id="1790" />
      <edge source="AfxWinInit(HINSTANCE__ *,HINSTANCE__ *,char *,int)" target="AfxInitThread(void)" id="1791" />
      <edge source="AfxWinInit(HINSTANCE__ *,HINSTANCE__ *,char *,int)" target="AfxGetModuleState(void)" id="1792" />
      <edge source="AfxWinInit(HINSTANCE__ *,HINSTANCE__ *,char *,int)" target="CWinApp::SetCurrentHandles(void)" id="1793" />
      <edge source="AfxWinInit(HINSTANCE__ *,HINSTANCE__ *,char *,int)" target="SetErrorMode" id="1794" />
      <edge source="AfxWinInit(HINSTANCE__ *,HINSTANCE__ *,char *,int)" target="GetModuleHandleA" id="1795" />
      <edge source="AfxWinInit(HINSTANCE__ *,HINSTANCE__ *,char *,int)" target="GetProcAddress" id="1796" />
      <edge source="CWinThread::OnIdle(long)" target="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" id="1797" />
      <edge source="CWinThread::OnIdle(long)" target="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" id="1798" />
      <edge source="CWinThread::OnIdle(long)" target="CWnd::ShowWindow(int)" id="1799" />
      <edge source="CWinThread::OnIdle(long)" target="AfxLockTempMaps(void)" id="1800" />
      <edge source="CWinThread::OnIdle(long)" target="AfxUnlockTempMaps(int)" id="1801" />
      <edge source="CWinThread::OnIdle(long)" target="AfxGetModuleState(void)" id="1802" />
      <edge source="CWinThread::OnIdle(long)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1803" />
      <edge source="CWinThread::OnIdle(long)" target="IsWindowVisible" id="1804" />
      <edge source="CWinApp::OnIdle(long)" target="CWinThread::OnIdle(long)" id="1805" />
      <edge source="CWnd::CWnd(HWND__ *)" target="CCmdTarget::CCmdTarget(void)" id="1806" />
      <edge source="CWnd::CWnd(void)" target="CCmdTarget::CCmdTarget(void)" id="1807" />
      <edge source="CWnd::ReflectChildNotify(uint,uint,long,long *)" target="CCmdTarget::OnCmdMsg(uint,int,void *,AFX_CMDHANDLERINFO *)" id="1808" />
      <edge source="CWnd::ReflectChildNotify(uint,uint,long,long *)" target="CWnd::OnWndMsg(uint,uint,long,long *)" id="1809" />
      <edge source="sub_41063D" target="CCmdUI::CCmdUI(void)" id="1810" />
      <edge source="CCmdTarget::BeginWaitCursor(void)" target="AfxGetModuleState(void)" id="1811" />
      <edge source="CCmdTarget::EndWaitCursor(void)" target="AfxGetModuleState(void)" id="1812" />
      <edge source="CDC::CreateObject(void)" target="operator new(uint)" id="1813" />
      <edge source="sub_40FC20" target="j__free" id="1814" />
      <edge source="sub_40FC20" target="sub_40F9C9" id="1815" />
      <edge source="sub_4121C8" target="j__free" id="1816" />
      <edge source="sub_4121C8" target="CWnd::~CWnd(void)" id="1817" />
      <edge source="sub_4148CE" target="j__free" id="1818" />
      <edge source="sub_4148CE" target="CDC::~CDC(void)" id="1819" />
      <edge source="sub_41496C" target="j__free" id="1820" />
      <edge source="sub_41496C" target="CPaintDC::~CPaintDC(void)" id="1821" />
      <edge source="sub_415ED9" target="j__free" id="1822" />
      <edge source="sub_415ED9" target="CWinApp::~CWinApp(void)" id="1823" />
      <edge source="sub_416301" target="j__free" id="1824" />
      <edge source="sub_416301" target="CWinThread::~CWinThread(void)" id="1825" />
      <edge source="sub_416A4C" target="j__free" id="1826" />
      <edge source="sub_416A4C" target="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::~CMFCComObject&lt;ATL::CAccessibleProxy&gt;(void)" id="1827" />
      <edge source="CDialog::EndDialog(int)" target="EndDialog" id="1828" />
      <edge source="CDialog::OnOK(void)" target="CDialog::EndDialog(int)" id="1829" />
      <edge source="CDialog::OnOK(void)" target="CWnd::UpdateData(int)" id="1830" />
      <edge source="sub_40FAE8" target="CDialog::EndDialog(int)" id="1831" />
      <edge source="CDialog::HandleInitDialog(uint,long)" target="CDialog::EndDialog(int)" id="1832" />
      <edge source="CDialog::HandleInitDialog(uint,long)" target="CWnd::Default(void)" id="1833" />
      <edge source="CDialog::HandleInitDialog(uint,long)" target="CWnd::FromHandle(HWND__ *)" id="1834" />
      <edge source="CDialog::HandleInitDialog(uint,long)" target="CWnd::SetFocus(void)" id="1835" />
      <edge source="CDialog::HandleInitDialog(uint,long)" target="AfxGetModuleState(void)" id="1836" />
      <edge source="CDialog::HandleInitDialog(uint,long)" target="GetNextDlgTabItem" id="1837" />
      <edge source="CDialog::OnInitDialog(void)" target="CDialog::EndDialog(int)" id="1838" />
      <edge source="CDialog::OnInitDialog(void)" target="AfxHelpEnabled(void)" id="1839" />
      <edge source="CDialog::OnInitDialog(void)" target="CWnd::UpdateData(int)" id="1840" />
      <edge source="CDialog::OnInitDialog(void)" target="CWnd::ExecuteDlgInit(void *)" id="1841" />
      <edge source="CDialog::OnInitDialog(void)" target="CWnd::ExecuteDlgInit(char const *)" id="1842" />
      <edge source="CDialog::OnInitDialog(void)" target="CWnd::GetDlgItem(int)" id="1843" />
      <edge source="CDialog::OnInitDialog(void)" target="CWnd::ShowWindow(int)" id="1844" />
      <edge source="CDialog::PreModal(void)" target="AfxHookWindowCreate(CWnd *)" id="1845" />
      <edge source="CDialog::PreModal(void)" target="CWinApp::EnableModeless(int)" id="1846" />
      <edge source="CDialog::PreModal(void)" target="CWnd::GetSafeOwner_(HWND__ *,HWND__ * *)" id="1847" />
      <edge source="CDialog::PreModal(void)" target="AfxGetModuleState(void)" id="1848" />
      <edge source="CDialog::PostModal(void)" target="CWnd::Detach(void)" id="1849" />
      <edge source="CDialog::PostModal(void)" target="AfxUnhookWindowCreate(void)" id="1850" />
      <edge source="CDialog::PostModal(void)" target="CWinApp::EnableModeless(int)" id="1851" />
      <edge source="CDialog::PostModal(void)" target="AfxGetModuleState(void)" id="1852" />
      <edge source="CDialog::PostModal(void)" target="EnableWindow" id="1853" />
      <edge source="CDialog::PostModal(void)" target="IsWindow" id="1854" />
      <edge source="CDialog::CreateIndirect(void *,CWnd *,HINSTANCE__ *)" target="CDialog::CreateIndirect(DLGTEMPLATE const *,CWnd *,void *,HINSTANCE__ *)" id="1855" />
      <edge source="CDialog::CreateIndirect(void *,CWnd *,HINSTANCE__ *)" target="LockResource" id="1856" />
      <edge source="sub_4102C7" target="CDialog::CreateIndirect(DLGTEMPLATE const *,CWnd *,void *,HINSTANCE__ *)" id="1857" />
      <edge source="sub_4102DD" target="CDialog::CreateIndirect(void *,CWnd *,HINSTANCE__ *)" id="1858" />
      <edge source="sub_4102DD" target="AfxGetModuleState(void)" id="1859" />
      <edge source="sub_4102DD" target="FreeResource" id="1860" />
      <edge source="sub_4102DD" target="FindResourceA" id="1861" />
      <edge source="sub_4102DD" target="LoadResource" id="1862" />
      <edge source="sub_410337" target="CDialog::CreateIndirect(void *,CWnd *,HINSTANCE__ *)" id="1863" />
      <edge source="CProcessLocalObject::~CProcessLocalObject(void)" target="CProcessLocalObject::~CProcessLocalObject(void)" id="1864" />
      <edge source="sub_4135EC" target="CProcessLocalObject::~CProcessLocalObject(void)" id="1865" />
      <edge source="CWnd::PreTranslateMessage(tagMSG *)" target="AfxGetModuleState(void)" id="1866" />
      <edge source="CDialog::PreTranslateMessage(tagMSG *)" target="CWnd::PreTranslateMessage(tagMSG *)" id="1867" />
      <edge source="CDialog::PreTranslateMessage(tagMSG *)" target="CWnd::PreTranslateInput(tagMSG *)" id="1868" />
      <edge source="CDialog::PreTranslateMessage(tagMSG *)" target="CWnd::GetTopLevelFrame(void)" id="1869" />
      <edge source="CDialog::PreTranslateMessage(tagMSG *)" target="_AfxCompareClassName(HWND__ *,char const *)" id="1870" />
      <edge source="CDialog::PreTranslateMessage(tagMSG *)" target="SendMessageA" id="1871" />
      <edge source="CDialog::PreTranslateMessage(tagMSG *)" target="GetDlgItem" id="1872" />
      <edge source="CDialog::PreTranslateMessage(tagMSG *)" target="IsWindowEnabled" id="1873" />
      <edge source="CDialog::PreTranslateMessage(tagMSG *)" target="GetWindowLongA" id="1874" />
      <edge source="unknown_libname_30" target="AfxRegisterClass(tagWNDCLASSA *)" id="1875" />
      <edge source="unknown_libname_30" target="AfxGetModuleState(void)" id="1876" />
      <edge source="unknown_libname_30" target="LoadIconA" id="1877" />
      <edge source="sub_410583" target="FreeLibrary" id="1878" />
      <edge source="sub_410598" target="sub_410583" id="1879" />
      <edge source="sub_410598" target="CNoTrackObject::operator delete(void *)" id="1880" />
      <edge source="CWnd::OnCommand(uint,long)" target="sub_41063D" id="1881" />
      <edge source="CWnd::OnCommand(uint,long)" target="CWnd::ReflectLastMsg(HWND__ *,long *)" id="1882" />
      <edge source="CWnd::OnCommand(uint,long)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1883" />
      <edge source="CWnd::PreTranslateInput(tagMSG *)" target="CWnd::IsDialogMessageA(tagMSG *)" id="1884" />
      <edge source="_AfxInitCommonControls(tagINITCOMMONCONTROLSEX *,long)" target="FreeLibrary" id="1885" />
      <edge source="_AfxInitCommonControls(tagINITCOMMONCONTROLSEX *,long)" target="GetModuleHandleA" id="1886" />
      <edge source="_AfxInitCommonControls(tagINITCOMMONCONTROLSEX *,long)" target="GetProcAddress" id="1887" />
      <edge source="_AfxInitCommonControls(tagINITCOMMONCONTROLSEX *,long)" target="LoadLibraryA" id="1888" />
      <edge source="_AfxInitCommonControls(tagINITCOMMONCONTROLSEX *,long)" target="InitCommonControls" id="1889" />
      <edge source="_AfxPreInitDialog(CWnd *,tagRECT *,ulong *)" target="CWnd::GetStyle(void)" id="1890" />
      <edge source="_AfxPreInitDialog(CWnd *,tagRECT *,ulong *)" target="GetWindowRect" id="1891" />
      <edge source="CWnd::CancelToolTips(int)" target="AfxGetModuleThreadState(void)" id="1892" />
      <edge source="CWnd::CancelToolTips(int)" target="SendMessageA" id="1893" />
      <edge source="CWnd::CancelToolTips(int)" target="GetKeyState" id="1894" />
      <edge source="CWnd::OnActivateTopLevel(uint,long)" target="CWnd::CancelToolTips(int)" id="1895" />
      <edge source="CWnd::OnActivateTopLevel(uint,long)" target="AfxGetModuleThreadState(void)" id="1896" />
      <edge source="CWnd::OnMeasureItem(int,tagMEASUREITEMSTRUCT *)" target="_AfxFindPopupMenuFromID(CMenu *,uint)" id="1897" />
      <edge source="CWnd::OnMeasureItem(int,tagMEASUREITEMSTRUCT *)" target="CWnd::Default(void)" id="1898" />
      <edge source="CWnd::OnMeasureItem(int,tagMEASUREITEMSTRUCT *)" target="CWnd::GetDescendantWindow(HWND__ *,int,int)" id="1899" />
      <edge source="CWnd::OnMeasureItem(int,tagMEASUREITEMSTRUCT *)" target="CWnd::SendChildNotifyLastMsg(long *)" id="1900" />
      <edge source="CWnd::OnMeasureItem(int,tagMEASUREITEMSTRUCT *)" target="CMenu::FromHandle(HMENU__ *)" id="1901" />
      <edge source="CWnd::OnMeasureItem(int,tagMEASUREITEMSTRUCT *)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1902" />
      <edge source="CWnd::OnMeasureItem(int,tagMEASUREITEMSTRUCT *)" target="GetMenu" id="1903" />
      <edge source="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" target="CWnd::CenterWindow(CWnd *)" id="1904" />
      <edge source="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" target="CWnd::FromHandle(HWND__ *)" id="1905" />
      <edge source="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" target="CWnd::GetStyle(void)" id="1906" />
      <edge source="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" target="CWnd::IsWindowEnabled(void)" id="1907" />
      <edge source="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" target="GetWindowRect" id="1908" />
      <edge source="_AfxPostInitDialog(CWnd *,tagRECT const &amp;,ulong)" target="GetWindow" id="1909" />
      <edge source="sub_4118BA" target="AfxEndDeferRegisterClass(long)" id="1910" />
      <edge source="CWnd::GetCurrentMessage(void)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1911" />
      <edge source="CWnd::GetCurrentMessage(void)" target="GetMessageTime" id="1912" />
      <edge source="CWnd::GetCurrentMessage(void)" target="GetMessagePos" id="1913" />
      <edge source="CWnd::Default(void)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1914" />
      <edge source="CDialog::HandleSetFont(uint,long)" target="CWnd::Default(void)" id="1915" />
      <edge source="CDialog::HandleSetFont(uint,long)" target="CGdiObject::FromHandle(void *)" id="1916" />
      <edge source="CWnd::OnDestroy(void)" target="CWnd::Default(void)" id="1917" />
      <edge source="CWnd::OnSetFocus(CWnd *)" target="CWnd::Default(void)" id="1918" />
      <edge source="CWnd::OnGetObject(uint,long)" target="CWnd::Default(void)" id="1919" />
      <edge source="sub_411C6D" target="CWnd::Default(void)" id="1920" />
      <edge source="sub_411C6D" target="CWnd::SendChildNotifyLastMsg(long *)" id="1921" />
      <edge source="CWnd::OnEnterIdle(uint,CWnd *)" target="CWnd::Default(void)" id="1922" />
      <edge source="CWnd::OnEnterIdle(uint,CWnd *)" target="PeekMessageA" id="1923" />
      <edge source="CWnd::OnEnterIdle(uint,CWnd *)" target="DispatchMessageA" id="1924" />
      <edge source="CWnd::OnCtlColor(CDC *,CWnd *,uint)" target="CWnd::Default(void)" id="1925" />
      <edge source="CWnd::OnCtlColor(CDC *,CWnd *,uint)" target="CWnd::SendChildNotifyLastMsg(long *)" id="1926" />
      <edge source="sub_411F22" target="CWnd::Default(void)" id="1927" />
      <edge source="sub_411F22" target="CWnd::SendChildNotifyLastMsg(long *)" id="1928" />
      <edge source="CWnd::OnParentNotify(uint,long)" target="CWnd::Default(void)" id="1929" />
      <edge source="CWnd::OnParentNotify(uint,long)" target="CWnd::ReflectLastMsg(HWND__ *,long *)" id="1930" />
      <edge source="CWnd::OnDragList(uint,long)" target="CWnd::Default(void)" id="1931" />
      <edge source="CWnd::OnDragList(uint,long)" target="CWnd::ReflectLastMsg(HWND__ *,long *)" id="1932" />
      <edge source="CWnd::OnDrawItem(int,tagDRAWITEMSTRUCT *)" target="CWnd::Default(void)" id="1933" />
      <edge source="CWnd::OnDrawItem(int,tagDRAWITEMSTRUCT *)" target="CWnd::ReflectLastMsg(HWND__ *,long *)" id="1934" />
      <edge source="CWnd::OnDrawItem(int,tagDRAWITEMSTRUCT *)" target="CMenu::FromHandlePermanent(HMENU__ *)" id="1935" />
      <edge source="CWnd::OnCompareItem(int,tagCOMPAREITEMSTRUCT *)" target="CWnd::Default(void)" id="1936" />
      <edge source="CWnd::OnCompareItem(int,tagCOMPAREITEMSTRUCT *)" target="CWnd::ReflectLastMsg(HWND__ *,long *)" id="1937" />
      <edge source="CWnd::OnDeleteItem(int,tagDELETEITEMSTRUCT *)" target="CWnd::Default(void)" id="1938" />
      <edge source="CWnd::OnDeleteItem(int,tagDELETEITEMSTRUCT *)" target="CWnd::ReflectLastMsg(HWND__ *,long *)" id="1939" />
      <edge source="CWnd::OnSysColorChange(void)" target="CWnd::Default(void)" id="1940" />
      <edge source="CWnd::OnSysColorChange(void)" target="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" id="1941" />
      <edge source="CWnd::OnSysColorChange(void)" target="CWnd::GetStyle(void)" id="1942" />
      <edge source="CWnd::OnSysColorChange(void)" target="AUX_DATA::UpdateSysColors(void)" id="1943" />
      <edge source="CWnd::OnSysColorChange(void)" target="AfxGetModuleState(void)" id="1944" />
      <edge source="CWnd::FromHandle(HWND__ *)" target="afxMapHWND(int)" id="1945" />
      <edge source="CWnd::FromHandle(HWND__ *)" target="CWnd::AttachControlSite(CHandleMap *)" id="1946" />
      <edge source="CWnd::FromHandle(HWND__ *)" target="CHandleMap::FromHandle(void *)" id="1947" />
      <edge source="CWinThread::GetMainWnd(void)" target="CWnd::FromHandle(HWND__ *)" id="1948" />
      <edge source="CWinThread::GetMainWnd(void)" target="GetActiveWindow" id="1949" />
      <edge source="CCmdUI::Enable(int)" target="CWnd::FromHandle(HWND__ *)" id="1950" />
      <edge source="CCmdUI::Enable(int)" target="CWnd::EnableWindow(int)" id="1951" />
      <edge source="CCmdUI::Enable(int)" target="SendMessageA" id="1952" />
      <edge source="CCmdUI::Enable(int)" target="GetFocus" id="1953" />
      <edge source="CCmdUI::Enable(int)" target="EnableMenuItem" id="1954" />
      <edge source="CCmdUI::Enable(int)" target="GetParent" id="1955" />
      <edge source="CWnd::GetDescendantWindow(HWND__ *,int,int)" target="CWnd::FromHandle(HWND__ *)" id="1956" />
      <edge source="CWnd::GetDescendantWindow(HWND__ *,int,int)" target="CWnd::FromHandlePermanent(HWND__ *)" id="1957" />
      <edge source="CWnd::GetDescendantWindow(HWND__ *,int,int)" target="CWnd::GetDescendantWindow(HWND__ *,int,int)" id="1958" />
      <edge source="CWnd::GetDescendantWindow(HWND__ *,int,int)" target="GetTopWindow" id="1959" />
      <edge source="CWnd::GetDescendantWindow(HWND__ *,int,int)" target="GetWindow" id="1960" />
      <edge source="CWnd::GetDescendantWindow(HWND__ *,int,int)" target="GetDlgItem" id="1961" />
      <edge source="CWnd::GetParentFrame(void)" target="CWnd::FromHandle(HWND__ *)" id="1962" />
      <edge source="CWnd::GetParentFrame(void)" target="GetParent" id="1963" />
      <edge source="CWnd::GetTopLevelParent(void)" target="CWnd::FromHandle(HWND__ *)" id="1964" />
      <edge source="CWnd::GetTopLevelParent(void)" target="AfxGetParentOwner(HWND__ *)" id="1965" />
      <edge source="_AfxHandleSetCursor(CWnd *,uint,uint)" target="CWnd::FromHandle(HWND__ *)" id="1966" />
      <edge source="_AfxHandleSetCursor(CWnd *,uint,uint)" target="CWnd::GetTopLevelParent(void)" id="1967" />
      <edge source="_AfxHandleSetCursor(CWnd *,uint,uint)" target="CWnd::IsWindowEnabled(void)" id="1968" />
      <edge source="_AfxHandleSetCursor(CWnd *,uint,uint)" target="GetForegroundWindow" id="1969" />
      <edge source="_AfxHandleSetCursor(CWnd *,uint,uint)" target="SetForegroundWindow" id="1970" />
      <edge source="_AfxHandleSetCursor(CWnd *,uint,uint)" target="GetLastActivePopup" id="1971" />
      <edge source="CWnd::GetDlgItem(int)" target="CWnd::FromHandle(HWND__ *)" id="1972" />
      <edge source="CWnd::GetDlgItem(int)" target="GetDlgItem" id="1973" />
      <edge source="CWnd::SetFocus(void)" target="CWnd::FromHandle(HWND__ *)" id="1974" />
      <edge source="CWnd::SetFocus(void)" target="SetFocus" id="1975" />
      <edge source="AfxDlgProc(HWND__ *,uint,uint,long)" target="CWnd::FromHandlePermanent(HWND__ *)" id="1976" />
      <edge source="AfxDlgProc(HWND__ *,uint,uint,long)" target="AfxDynamicDownCast(CRuntimeClass *,CObject *)" id="1977" />
      <edge source="CWnd::WalkPreTranslateTree(HWND__ *,tagMSG *)" target="CWnd::FromHandlePermanent(HWND__ *)" id="1978" />
      <edge source="CWnd::WalkPreTranslateTree(HWND__ *,tagMSG *)" target="GetParent" id="1979" />
      <edge source="AfxWndProc(HWND__ *,uint,uint,long)" target="CWnd::FromHandlePermanent(HWND__ *)" id="1980" />
      <edge source="AfxWndProc(HWND__ *,uint,uint,long)" target="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" id="1981" />
      <edge source="AfxWndProc(HWND__ *,uint,uint,long)" target="DefWindowProcA" id="1982" />
      <edge source="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" target="CWnd::FromHandlePermanent(HWND__ *)" id="1983" />
      <edge source="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" target="AfxCallWndProc(CWnd *,HWND__ *,uint,uint,long)" id="1984" />
      <edge source="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" target="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" id="1985" />
      <edge source="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" target="GetTopWindow" id="1986" />
      <edge source="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" target="SendMessageA" id="1987" />
      <edge source="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" target="GetWindow" id="1988" />
      <edge source="AfxUnhookWindowCreate(void)" target="AfxGetModuleState(void)" id="1989" />
      <edge source="AfxUnhookWindowCreate(void)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1990" />
      <edge source="AfxUnhookWindowCreate(void)" target="UnhookWindowsHookEx" id="1991" />
      <edge source="CWnd::CreateEx(ulong,char const *,char const *,ulong,int,int,int,int,HWND__ *,HMENU__ *,void *)" target="AfxUnhookWindowCreate(void)" id="1992" />
      <edge source="CWnd::CreateEx(ulong,char const *,char const *,ulong,int,int,int,int,HWND__ *,HMENU__ *,void *)" target="AfxHookWindowCreate(CWnd *)" id="1993" />
      <edge source="CWnd::CreateEx(ulong,char const *,char const *,ulong,int,int,int,int,HWND__ *,HMENU__ *,void *)" target="AfxGetModuleState(void)" id="1994" />
      <edge source="CWnd::CreateEx(ulong,char const *,char const *,ulong,int,int,int,int,HWND__ *,HMENU__ *,void *)" target="CreateWindowExA" id="1995" />
      <edge source="CWnd::SendChildNotifyLastMsg(long *)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="1996" />
      <edge source="sub_4135F6" target="CWnd::~CWnd(void)" id="1997" />
      <edge source="sub_413600" target="CWnd::~CWnd(void)" id="1998" />
      <edge source="sub_41360A" target="CWnd::~CWnd(void)" id="1999" />
      <edge source="sub_413614" target="CWnd::~CWnd(void)" id="2000" />
      <edge source="CWnd::GetTopLevelFrame(void)" target="CWnd::GetParentFrame(void)" id="2001" />
      <edge source="CWnd::PrepareForHelp(void)" target="CWnd::SendMessageToDescendants(HWND__ *,uint,uint,long,int,int)" id="2002" />
      <edge source="CWnd::PrepareForHelp(void)" target="CWnd::GetTopLevelParent(void)" id="2003" />
      <edge source="CWnd::PrepareForHelp(void)" target="GetCapture" id="2004" />
      <edge source="CWnd::PrepareForHelp(void)" target="SendMessageA" id="2005" />
      <edge source="CWnd::OnNotify(uint,long,long *)" target="CWnd::ReflectLastMsg(HWND__ *,long *)" id="2006" />
      <edge source="CWnd::OnNotify(uint,long,long *)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="2007" />
      <edge source="CWnd::OnNotify(uint,long,long *)" target="GetDlgCtrlID" id="2008" />
      <edge source="unknown_libname_31" target="CProcessLocalObject::GetData(CNoTrackObject * (*)(void))" id="2009" />
      <edge source="unknown_libname_31" target="AfxLockGlobals(int)" id="2010" />
      <edge source="unknown_libname_31" target="AfxUnlockGlobals(int)" id="2011" />
      <edge source="unknown_libname_31" target="FreeLibrary" id="2012" />
      <edge source="unknown_libname_31" target="GetProcAddress" id="2013" />
      <edge source="unknown_libname_31" target="LoadLibraryA" id="2014" />
      <edge source="CWnd::OnHelp(void)" target="AfxGetParentOwner(HWND__ *)" id="2015" />
      <edge source="CWnd::OnHelp(void)" target="CWnd::GetTopLevelParent(void)" id="2016" />
      <edge source="CWnd::OnHelp(void)" target="GetCapture" id="2017" />
      <edge source="CWnd::OnHelp(void)" target="SendMessageA" id="2018" />
      <edge source="CWnd::OnHelp(void)" target="GetFocus" id="2019" />
      <edge source="CWnd::OnHelp(void)" target="GetLastActivePopup" id="2020" />
      <edge source="_AfxHandleActivate(CWnd *,uint,CWnd *)" target="CWnd::GetTopLevelParent(void)" id="2021" />
      <edge source="_AfxHandleActivate(CWnd *,uint,CWnd *)" target="CWnd::GetStyle(void)" id="2022" />
      <edge source="_AfxHandleActivate(CWnd *,uint,CWnd *)" target="SendMessageA" id="2023" />
      <edge source="CWnd::OnSettingChange(uint,char const *)" target="CWnd::OnDisplayChange(uint,long)" id="2024" />
      <edge source="CWnd::ExecuteDlgInit(char const *)" target="CWnd::ExecuteDlgInit(void *)" id="2025" />
      <edge source="CWnd::ExecuteDlgInit(char const *)" target="AfxGetModuleState(void)" id="2026" />
      <edge source="CWnd::ExecuteDlgInit(char const *)" target="FreeResource" id="2027" />
      <edge source="CWnd::ExecuteDlgInit(char const *)" target="FindResourceA" id="2028" />
      <edge source="CWnd::ExecuteDlgInit(char const *)" target="LoadResource" id="2029" />
      <edge source="CWnd::ExecuteDlgInit(char const *)" target="LockResource" id="2030" />
      <edge source="CWnd::OnChildNotify(uint,uint,long,long *)" target="CWnd::ReflectChildNotify(uint,uint,long,long *)" id="2031" />
      <edge source="CWnd::OnChildNotify(uint,uint,long,long *)" target="SendMessageA" id="2032" />
      <edge source="CWnd::GetDlgItem(int,HWND__ * *)" target="GetDlgItem" id="2033" />
      <edge source="CWnd::IsDialogMessageA(tagMSG *)" target="AfxGetModuleState(void)" id="2034" />
      <edge source="CWnd::IsDialogMessageA(tagMSG *)" target="IsDialogMessageA" id="2035" />
      <edge source="CWnd::GetStyle(void)" target="GetWindowLongA" id="2036" />
      <edge source="CWnd::CalcWindowRect(tagRECT *,uint)" target="CWnd::GetStyle(void)" id="2037" />
      <edge source="CWnd::CalcWindowRect(tagRECT *,uint)" target="CWnd::GetExStyle(void)" id="2038" />
      <edge source="CWnd::CalcWindowRect(tagRECT *,uint)" target="AdjustWindowRectEx" id="2039" />
      <edge source="CWnd::GetExStyle(void)" target="GetWindowLongA" id="2040" />
      <edge source="CWnd::MoveWindow(int,int,int,int,int)" target="MoveWindow" id="2041" />
      <edge source="CWnd::ShowWindow(int)" target="ShowWindow" id="2042" />
      <edge source="CWnd::IsWindowEnabled(void)" target="IsWindowEnabled" id="2043" />
      <edge source="AfxOleOnReleaseAllObjects(void)" target="CWnd::IsWindowEnabled(void)" id="2044" />
      <edge source="AfxOleOnReleaseAllObjects(void)" target="AfxOleSetUserCtrl(int)" id="2045" />
      <edge source="AfxOleOnReleaseAllObjects(void)" target="AfxGetModuleState(void)" id="2046" />
      <edge source="AfxOleOnReleaseAllObjects(void)" target="AfxPostQuitMessage(int)" id="2047" />
      <edge source="CWnd::EnableWindow(int)" target="EnableWindow" id="2048" />
      <edge source="CWnd::SetWindowPos(CWnd const *,int,int,int,int,uint)" target="SetWindowPos" id="2049" />
      <edge source="CMenu::FromHandle(HMENU__ *)" target="afxMapHMENU(int)" id="2050" />
      <edge source="CMenu::FromHandle(HMENU__ *)" target="CHandleMap::FromHandle(void *)" id="2051" />
      <edge source="AfxFindStringResourceHandle(uint)" target="AfxGetModuleState(void)" id="2052" />
      <edge source="CObject::IsKindOf(CRuntimeClass const *)" target="CRuntimeClass::IsDerivedFrom(CRuntimeClass const *)" id="2053" />
      <edge source="AfxDynamicDownCast(CRuntimeClass *,CObject *)" target="CRuntimeClass::IsDerivedFrom(CRuntimeClass const *)" id="2054" />
      <edge source="AfxClassInit(CRuntimeClass *)" target="AfxGetModuleState(void)" id="2055" />
      <edge source="AfxClassInit(CRuntimeClass *)" target="unknown_libname_50" id="2056" />
      <edge source="AfxClassInit(CRuntimeClass *)" target="AfxLockGlobals(int)" id="2057" />
      <edge source="AfxClassInit(CRuntimeClass *)" target="AfxUnlockGlobals(int)" id="2058" />
      <edge source="AUX_DATA::UpdateSysColors(void)" target="GetSysColorBrush" id="2059" />
      <edge source="AUX_DATA::UpdateSysColors(void)" target="GetSysColor" id="2060" />
      <edge source="AUX_DATA::AUX_DATA(void)" target="AUX_DATA::UpdateSysColors(void)" id="2061" />
      <edge source="AUX_DATA::AUX_DATA(void)" target="AUX_DATA::UpdateSysMetrics(void)" id="2062" />
      <edge source="AUX_DATA::AUX_DATA(void)" target="GetVersion" id="2063" />
      <edge source="AUX_DATA::AUX_DATA(void)" target="LoadCursorA" id="2064" />
      <edge source="AUX_DATA::UpdateSysMetrics(void)" target="ReleaseDC" id="2065" />
      <edge source="AUX_DATA::UpdateSysMetrics(void)" target="GetDC" id="2066" />
      <edge source="AUX_DATA::UpdateSysMetrics(void)" target="GetSystemMetrics" id="2067" />
      <edge source="AUX_DATA::UpdateSysMetrics(void)" target="GetDeviceCaps" id="2068" />
      <edge source="AfxLockTempMaps(void)" target="AfxGetModuleThreadState(void)" id="2069" />
      <edge source="CDC::FromHandle(HDC__ *)" target="CHandleMap::FromHandle(void *)" id="2070" />
      <edge source="CDC::FromHandle(HDC__ *)" target="afxMapHDC(int)" id="2071" />
      <edge source="CGdiObject::FromHandle(void *)" target="CHandleMap::FromHandle(void *)" id="2072" />
      <edge source="CGdiObject::FromHandle(void *)" target="afxMapHGDIOBJ(int)" id="2073" />
      <edge source="CDialogTemplate::CDialogTemplate(DLGTEMPLATE const *)" target="CDialogTemplate::SetTemplate(DLGTEMPLATE const *,uint)" id="2074" />
      <edge source="CDialogTemplate::CDialogTemplate(DLGTEMPLATE const *)" target="CDialogTemplate::GetTemplateSize(DLGTEMPLATE const *)" id="2075" />
      <edge source="Concurrency::details::UMSFreeVirtualProcessorRoot::InitialThreadParam::~InitialThreadParam(void)" target="GlobalFree" id="2076" />
      <edge source="CDC::~CDC(void)" target="CDC::Detach(void)" id="2077" />
      <edge source="CDC::~CDC(void)" target="DeleteDC" id="2078" />
      <edge source="CDC::SelectStockObject(int)" target="CGdiObject::FromHandle(void *)" id="2079" />
      <edge source="CDC::SelectStockObject(int)" target="GetStockObject" id="2080" />
      <edge source="CDC::SelectStockObject(int)" target="SelectObject" id="2081" />
      <edge source="unknown_libname_36" target="CGdiObject::FromHandle(void *)" id="2082" />
      <edge source="unknown_libname_36" target="SelectObject" id="2083" />
      <edge source="AfxDeleteObject(void * *)" target="DeleteObject" id="2084" />
      <edge source="AfxGlobalFree(void *)" target="GlobalFlags" id="2085" />
      <edge source="AfxGlobalFree(void *)" target="GlobalUnlock" id="2086" />
      <edge source="AfxGlobalFree(void *)" target="GlobalFree" id="2087" />
      <edge source="_AfxChildWindowFromPoint(HWND__ *,tagPOINT)" target="ClientToScreen" id="2088" />
      <edge source="_AfxChildWindowFromPoint(HWND__ *,tagPOINT)" target="GetWindowRect" id="2089" />
      <edge source="_AfxChildWindowFromPoint(HWND__ *,tagPOINT)" target="GetDlgCtrlID" id="2090" />
      <edge source="_AfxChildWindowFromPoint(HWND__ *,tagPOINT)" target="PtInRect" id="2091" />
      <edge source="_AfxChildWindowFromPoint(HWND__ *,tagPOINT)" target="GetWindow" id="2092" />
      <edge source="_AfxChildWindowFromPoint(HWND__ *,tagPOINT)" target="GetWindowLongA" id="2093" />
      <edge source="CWnd::OnToolHitTest(CPoint,tagTOOLINFOA *)" target="_AfxChildWindowFromPoint(HWND__ *,tagPOINT)" id="2094" />
      <edge source="CWnd::OnToolHitTest(CPoint,tagTOOLINFOA *)" target="SendMessageA" id="2095" />
      <edge source="CWnd::OnToolHitTest(CPoint,tagTOOLINFOA *)" target="GetDlgCtrlID" id="2096" />
      <edge source="CCmdTarget::GetRoutingFrame_(void)" target="AfxGetThreadState(void)" id="2097" />
      <edge source="AfxMessageBox(char const *,uint,uint)" target="CWinApp::DoMessageBox(char const *,uint,uint)" id="2098" />
      <edge source="AfxMessageBox(char const *,uint,uint)" target="AfxGetModuleState(void)" id="2099" />
      <edge source="CDataExchange::PrepareEditCtrl(int)" target="unknown_libname_40" id="2100" />
      <edge source="sub_401540" target="sub_4154DB" id="2101" />
      <edge source="CWinApp::SaveStdProfileSettings(void)" target="CWinApp::WriteProfileInt(char const *,char const *,int)" id="2102" />
      <edge source="sub_4157E5" target="sub_41577E" id="2103" />
      <edge source="AfxOleCanExitApp(void)" target="AfxGetModuleState(void)" id="2104" />
      <edge source="AfxOleLockApp(void)" target="AfxGetModuleState(void)" id="2105" />
      <edge source="AfxOleLockApp(void)" target="InterlockedIncrement" id="2106" />
      <edge source="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::CMFCComObject&lt;ATL::CAccessibleProxy&gt;(void *)" target="AfxOleLockApp(void)" id="2107" />
      <edge source="AfxOleSetUserCtrl(int)" target="AfxGetModuleState(void)" id="2108" />
      <edge source="AfxOleGetUserCtrl(void)" target="AfxGetModuleState(void)" id="2109" />
      <edge source="AfxOleUnlockApp(void)" target="AfxOleOnReleaseAllObjects(void)" id="2110" />
      <edge source="AfxOleUnlockApp(void)" target="AfxGetModuleState(void)" id="2111" />
      <edge source="AfxOleUnlockApp(void)" target="InterlockedDecrement" id="2112" />
      <edge source="CWinThread::CommonConstruct(void)" target="AfxGetThreadState(void)" id="2113" />
      <edge source="CWinThread::CommonConstruct(void)" target="GetCursorPos" id="2114" />
      <edge source="CCmdUI::SetRadio(int)" target="_AfxLoadDotBitmap(void)" id="2115" />
      <edge source="CCmdUI::SetRadio(int)" target="SetMenuItemBitmaps" id="2116" />
      <edge source="sub_416ADB" target="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::AddRef(void)" id="2117" />
      <edge source="sub_416AF9" target="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::AddRef(void)" id="2118" />
      <edge source="sub_416AE5" target="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::Release(void)" id="2119" />
      <edge source="sub_416B03" target="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::Release(void)" id="2120" />
      <edge source="[thunk]:CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface`adjustor{4}' (_GUID const &amp;,void * *)" target="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface(_GUID const &amp;,void * *)" id="2121" />
      <edge source="[thunk]:CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface`adjustor{16}' (_GUID const &amp;,void * *)" target="CMFCComObject&lt;ATL::CAccessibleProxy&gt;::QueryInterface(_GUID const &amp;,void * *)" id="2122" />
      <edge source="CThreadLocalObject::~CThreadLocalObject(void)" target="CThreadSlotData::FreeSlot(int)" id="2123" />
      <edge source="CThreadLocalObject::~CThreadLocalObject(void)" target="CThreadLocalObject::~CThreadLocalObject(void)" id="2124" />
      <edge source="CTypeLibCache::Unlock(void)" target="InterlockedDecrement" id="2125" />
      <edge source="CCmdTarget::OnFinalRelease(void)" target="CTypeLibCache::Unlock(void)" id="2126" />
      <edge source="CCmdTarget::OnFinalRelease(void)" target="AfxLockGlobals(int)" id="2127" />
      <edge source="CCmdTarget::OnFinalRelease(void)" target="AfxUnlockGlobals(int)" id="2128" />
      <edge source="_AFX_THREAD_STATE::`scalar deleting destructor'(uint)" target="_AFX_THREAD_STATE::~_AFX_THREAD_STATE(void)" id="2129" />
      <edge source="_AFX_THREAD_STATE::`scalar deleting destructor'(uint)" target="CNoTrackObject::operator delete(void *)" id="2130" />
      <edge source="AFX_MODULE_STATE::`scalar deleting destructor'(uint)" target="AFX_MODULE_STATE::~AFX_MODULE_STATE(void)" id="2131" />
      <edge source="AFX_MODULE_STATE::`scalar deleting destructor'(uint)" target="CNoTrackObject::operator delete(void *)" id="2132" />
      <edge source="AFX_MODULE_THREAD_STATE::`scalar deleting destructor'(uint)" target="AFX_MODULE_THREAD_STATE::~AFX_MODULE_THREAD_STATE(void)" id="2133" />
      <edge source="AFX_MODULE_THREAD_STATE::`scalar deleting destructor'(uint)" target="CNoTrackObject::operator delete(void *)" id="2134" />
      <edge source="CProcessLocal&lt;_AFX_BASE_MODULE_STATE&gt;::CreateObject(void)" target="AFX_MODULE_STATE::AFX_MODULE_STATE(int)" id="2135" />
      <edge source="CProcessLocal&lt;_AFX_BASE_MODULE_STATE&gt;::CreateObject(void)" target="unknown_libname_49" id="2136" />
      <edge source="AfxGetThreadState(void)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="2137" />
      <edge source="sub_40EFC6" target="AfxGetThreadState(void)" id="2138" />
      <edge source="AfxGetModuleState(void)" target="CProcessLocalObject::GetData(CNoTrackObject * (*)(void))" id="2139" />
      <edge source="AfxGetModuleState(void)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="2140" />
      <edge source="_AfxMsgFilterHook(int,uint,long)" target="AfxGetModuleState(void)" id="2141" />
      <edge source="_AfxMsgFilterHook(int,uint,long)" target="AfxGetModuleThreadState(void)" id="2142" />
      <edge source="_AfxMsgFilterHook(int,uint,long)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="2143" />
      <edge source="_AfxMsgFilterHook(int,uint,long)" target="CallNextHookEx" id="2144" />
      <edge source="CDialog::CheckAutoCenter(void)" target="AfxGetModuleState(void)" id="2145" />
      <edge source="CDialog::CheckAutoCenter(void)" target="FreeResource" id="2146" />
      <edge source="CDialog::CheckAutoCenter(void)" target="FindResourceA" id="2147" />
      <edge source="CDialog::CheckAutoCenter(void)" target="LoadResource" id="2148" />
      <edge source="CDialog::CheckAutoCenter(void)" target="LockResource" id="2149" />
      <edge source="CDialog::OnCommandHelp(uint,long)" target="AfxGetModuleState(void)" id="2150" />
      <edge source="CWnd::WinHelpInternal(ulong,uint)" target="AfxGetModuleState(void)" id="2151" />
      <edge source="CWinApp::InitInstance(void)" target="AfxGetModuleState(void)" id="2152" />
      <edge source="CWinApp::InitInstance(void)" target="InterlockedExchange" id="2153" />
      <edge source="AfxGetModuleThreadState(void)" target="AfxGetModuleState(void)" id="2154" />
      <edge source="AfxGetModuleThreadState(void)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="2155" />
      <edge source="CWinApp::GetAppRegistryKey(void)" target="RegOpenKeyExA" id="2156" />
      <edge source="CWinApp::GetAppRegistryKey(void)" target="RegCreateKeyExA" id="2157" />
      <edge source="CWinApp::GetAppRegistryKey(void)" target="RegCloseKey" id="2158" />
      <edge source="CWinApp::GetSectionKey(char const *)" target="CWinApp::GetAppRegistryKey(void)" id="2159" />
      <edge source="CWinApp::GetSectionKey(char const *)" target="RegCreateKeyExA" id="2160" />
      <edge source="CWinApp::GetSectionKey(char const *)" target="RegCloseKey" id="2161" />
      <edge source="sub_416A0A" target="unknown_libname_49" id="2162" />
      <edge source="sub_417568" target="CNoTrackObject::operator delete(void *)" id="2163" />
      <edge source="sub_417568" target="nullsub_1" id="2164" />
      <edge source="CThreadSlotData::GetThreadValue(int)" target="TlsGetValue" id="2165" />
      <edge source="CThreadSlotData::GetThreadValue(int)" target="EnterCriticalSection" id="2166" />
      <edge source="CThreadSlotData::GetThreadValue(int)" target="LeaveCriticalSection" id="2167" />
      <edge source="CThreadLocalObject::GetDataNA(void)" target="CThreadSlotData::GetThreadValue(int)" id="2168" />
      <edge source="CThreadSlotData::DeleteValues(CThreadData *,HINSTANCE__ *)" target="CSimpleList::Remove(void *)" id="2169" />
      <edge source="CThreadSlotData::DeleteValues(CThreadData *,HINSTANCE__ *)" target="TlsSetValue" id="2170" />
      <edge source="CThreadSlotData::DeleteValues(CThreadData *,HINSTANCE__ *)" target="EnterCriticalSection" id="2171" />
      <edge source="CThreadSlotData::DeleteValues(CThreadData *,HINSTANCE__ *)" target="LeaveCriticalSection" id="2172" />
      <edge source="CThreadSlotData::DeleteValues(CThreadData *,HINSTANCE__ *)" target="LocalFree" id="2173" />
      <edge source="CThreadSlotData::FreeSlot(int)" target="EnterCriticalSection" id="2174" />
      <edge source="CThreadSlotData::FreeSlot(int)" target="LeaveCriticalSection" id="2175" />
      <edge source="CThreadSlotData::DeleteValues(HINSTANCE__ *,int)" target="CThreadSlotData::DeleteValues(CThreadData *,HINSTANCE__ *)" id="2176" />
      <edge source="CThreadSlotData::DeleteValues(HINSTANCE__ *,int)" target="TlsGetValue" id="2177" />
      <edge source="CThreadSlotData::DeleteValues(HINSTANCE__ *,int)" target="EnterCriticalSection" id="2178" />
      <edge source="CThreadSlotData::DeleteValues(HINSTANCE__ *,int)" target="LeaveCriticalSection" id="2179" />
      <edge source="CThreadSlotData::~CThreadSlotData(void)" target="CThreadSlotData::DeleteValues(CThreadData *,HINSTANCE__ *)" id="2180" />
      <edge source="CThreadSlotData::~CThreadSlotData(void)" target="TlsFree" id="2181" />
      <edge source="CThreadSlotData::~CThreadSlotData(void)" target="GlobalHandle" id="2182" />
      <edge source="CThreadSlotData::~CThreadSlotData(void)" target="DeleteCriticalSection" id="2183" />
      <edge source="CThreadSlotData::~CThreadSlotData(void)" target="GlobalUnlock" id="2184" />
      <edge source="CThreadSlotData::~CThreadSlotData(void)" target="GlobalFree" id="2185" />
      <edge source="AfxTermLocalData(HINSTANCE__ *,int)" target="CThreadSlotData::DeleteValues(HINSTANCE__ *,int)" id="2186" />
      <edge source="CWnd::OnNTCtlColor(uint,long)" target="CThreadLocalObject::GetData(CNoTrackObject * (*)(void))" id="2187" />
      <edge source="sub_40E60B" target="AfxTermLocalData(HINSTANCE__ *,int)" id="2188" />
      <edge source="sub_40E60B" target="AfxTlsRelease(void)" id="2189" />
      <edge source="sub_40E60B" target="AfxCriticalTerm(void)" id="2190" />
      <edge source="AfxTlsRelease(void)" target="CThreadSlotData::~CThreadSlotData(void)" id="2191" />
      <edge source="AfxCriticalInit(void)" target="InitializeCriticalSection" id="2192" />
      <edge source="AfxLockGlobals(int)" target="AfxCriticalInit(void)" id="2193" />
      <edge source="AfxLockGlobals(int)" target="EnterCriticalSection" id="2194" />
      <edge source="AfxLockGlobals(int)" target="LeaveCriticalSection" id="2195" />
      <edge source="AfxLockGlobals(int)" target="InitializeCriticalSection" id="2196" />
      <edge source="AfxCriticalTerm(void)" target="DeleteCriticalSection" id="2197" />
      <edge source="CWinApp::DoWaitCursor(int)" target="AfxLockGlobals(int)" id="2198" />
      <edge source="CWinApp::DoWaitCursor(int)" target="AfxUnlockGlobals(int)" id="2199" />
      <edge source="CWinApp::DoWaitCursor(int)" target="SetCursor" id="2200" />
      <edge source="AfxUnlockGlobals(int)" target="LeaveCriticalSection" id="2201" />
      <edge source="AfxGetFileName(char const *,char *,uint)" target="lstrcpynA" id="2202" />
      <edge source="AfxGetFileName(char const *,char *,uint)" target="lstrlenA" id="2203" />
      <edge source="AfxGetFileName(char const *,char *,uint)" target="PathFindFileNameA" id="2204" />
      <edge source="CCmdTarget::InternalRelease(void)" target="InterlockedDecrement" id="2205" />
      <edge source="CCmdTarget::ExternalRelease(void)" target="CCmdTarget::InternalRelease(void)" id="2206" />
      <edge source="unknown_libname_25" target="CCmdTarget::ExternalRelease(void)" id="2207" />
      <edge source="sub_410A18" target="CCmdTarget::ExternalRelease(void)" id="2208" />
      <edge source="CCmdTarget::ExternalQueryInterface(void const *,void * *)" target="CCmdTarget::GetInterface(void const *)" id="2209" />
      <edge source="CCmdTarget::ExternalQueryInterface(void const *,void * *)" target="CCmdTarget::QueryAggregates(void const *)" id="2210" />
      <edge source="CCmdTarget::ExternalQueryInterface(void const *,void * *)" target="CCmdTarget::ExternalAddRef(void)" id="2211" />
      <edge source="CCmdTarget::ExternalAddRef(void)" target="InterlockedIncrement" id="2212" />
      <edge source="unknown_libname_24" target="CCmdTarget::ExternalAddRef(void)" id="2213" />
      <edge source="COleDataSource::XDataObject::AddRef(void)" target="CCmdTarget::ExternalAddRef(void)" id="2214" />
      <edge source="unknown_libname_26" target="CCmdTarget::ExternalQueryInterface(void const *,void * *)" id="2215" />
      <edge source="COleDataSource::XDataObject::QueryInterface(_GUID const &amp;,void * *)" target="CCmdTarget::ExternalQueryInterface(void const *,void * *)" id="2216" />
      <edge source="___security_init_cookie" target="QueryPerformanceCounter" id="2217" />
      <edge source="___security_init_cookie" target="GetTickCount" id="2218" />
      <edge source="___security_init_cookie" target="GetCurrentProcessId" id="2219" />
      <edge source="___security_init_cookie" target="GetSystemTimeAsFileTime" id="2220" />
      <edge source="___security_init_cookie" target="GetCurrentThreadId" id="2221" />
      <edge source="__crtTlsAlloc(x)" target="TlsAlloc" id="2222" />
      <edge source="__crtInitCritSecNoSpinCount(x,x)" target="InitializeCriticalSection" id="2223" />
      <edge source="COleException::GetErrorMessage(char *,uint,uint *)" target="FormatMessageA" id="2224" />
      <edge source="COleException::GetErrorMessage(char *,uint,uint *)" target="LocalFree" id="2225" />
      <edge source="COleException::GetErrorMessage(char *,uint,uint *)" target="lstrcpynA" id="2226" />
      <edge source="`dynamic initializer for '_afxMsgMouseWheel''(void)" target="GetVersion" id="2227" />
      <edge source="`dynamic initializer for '_afxMsgMouseWheel''(void)" target="RegisterWindowMessageA" id="2228" />
      <edge source="sub_4011B0" target="GetThreadLocale" id="2229" />
      <edge source="sub_4011B0" target="GetLocaleInfoA" id="2230" />
      <edge source="sub_4011B0" target="GetACP" id="2231" />
      <edge source="CDC::GrayStringA(CBrush *,int (*)(HDC__ *,long,int),long,int,int,int,int,int)" target="GrayStringA" id="2232" />
      <edge source="CDC::DrawTextExA(char *,int,tagRECT *,uint,tagDRAWTEXTPARAMS *)" target="DrawTextExA" id="2233" />
      <edge source="sub_40385D" target="DrawTextA" id="2234" />
      <edge source="CDC::TabbedTextOutA(int,int,char const *,int,int,int *,int)" target="TabbedTextOutA" id="2235" />
      <edge source="sub_402820" target="SendMessageA" id="2236" />
      <edge source="sub_402820" target="SHGetPathFromIDListA" id="2237" />
      <edge source="CCmdUI::SetCheck(int)" target="SendMessageA" id="2238" />
      <edge source="CCmdUI::SetCheck(int)" target="CheckMenuItem" id="2239" />
      <edge source="CWinApp::OnAppExit(void)" target="SendMessageA" id="2240" />
      <edge source="sub_4013F0" target="EnableWindow" id="2241" />
      <edge source="sub_401400" target="EnableWindow" id="2242" />
      <edge source="CWnd::DefWindowProcA(uint,uint,long)" target="DefWindowProcA" id="2243" />
      <edge source="CWnd::DefWindowProcA(uint,uint,long)" target="CallWindowProcA" id="2244" />
      <edge source="CWnd::EndModalLoop(int)" target="PostMessageA" id="2245" />
      <edge source="CDC::ScaleWindowExt(int,int,int,int)" target="ScaleWindowExtEx" id="2246" />
      <edge source="CDC::SetWindowExt(int,int)" target="SetWindowExtEx" id="2247" />
      <edge source="CDC::ScaleViewportExt(int,int,int,int)" target="ScaleViewportExtEx" id="2248" />
      <edge source="CDC::SetViewportExt(int,int)" target="SetViewportExtEx" id="2249" />
      <edge source="CDC::OffsetViewportOrg(int,int)" target="OffsetViewportOrgEx" id="2250" />
      <edge source="CDC::SetViewportOrg(int,int)" target="SetViewportOrgEx" id="2251" />
      <edge source="sub_4038C8" target="Escape" id="2252" />
      <edge source="sub_4037E4" target="TextOutA" id="2253" />
      <edge source="sub_4037D4" target="RectVisible" id="2254" />
      <edge source="sub_4037C0" target="PtVisible" id="2255" />
      <edge source="sub_4143F1" target="SetMapMode" id="2256" />
      <edge source="CDC::RestoreDC(int)" target="RestoreDC" id="2257" />
      <edge source="CDC::SaveDC(void)" target="SaveDC" id="2258" />
      <edge source="CDC::ExtTextOutA(int,int,uint,tagRECT const *,char const *,uint,int *)" target="ExtTextOutA" id="2259" />
      <edge source="sub_414393" target="SetBkColor" id="2260" />
      <edge source="sub_4143C2" target="SetTextColor" id="2261" />
      <edge source="sub_41441F" target="GetClipBox" id="2262" />
      <edge source="CWinApp::LoadSysPolicies(void)" target="RegQueryValueExA" id="2263" />
      <edge source="CWinApp::LoadSysPolicies(void)" target="RegOpenKeyExA" id="2264" />
      <edge source="CWinApp::LoadSysPolicies(void)" target="RegCloseKey" id="2265" />
    </edges>
  </graph>
</gexf>
